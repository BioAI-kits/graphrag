{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 27 column 1 (char 1259)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"神经根与相关医学检查\",\n    \"summary\": \"社区以神经根为核心, 与多种医学检查和症状相关, 包括肌电图检查、屈颈试验、颈静脉压迫试验、股神经牵拉试验以及肌力减退或肌萎缩等。这些实体之间通过诊断和症状表现相互关联, 体现了神经根在医学评估中的重要性。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学诊断和症状, 对公共健康有一定影响, 但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"神经根是社区的核心实体\",\n            \"explanation\": \"神经根是这个社区的中心实体, 与多个医学检查和症状相关。它在椎间盘突出、颈椎病等疾病中可能受到压迫或损伤, 导致多种临床表现。神经根的重要性体现在其与多个诊断方法和症状的直接联系上。[数据:实体 (1586), 关系 (4490, 6067, 6071, 6072, 6069 +more)]\"\n        },\n        {\n            \"summary\": \"肌电图检查用于评估神经根损伤\",\n            \"explanation\": \"肌电图检查是这个社区中的关键诊断工具, 用于判定受损的神经根及其对肌肉的影响程度。这种检查方法能够检测大鱼际出现的神经变性, 为医生提供重要的诊断依据。肌电图检查与神经根之间的关系表明其在神经疾病诊断中的重要性。[数据:关系 (6077)]\"\n        },\n        {\n            \"summary\": \"肌力减退或肌萎缩是神经根受压的症状\",\n            \"explanation\": \"肌力减退或肌萎缩是受压神经根所支配的肌肉出现的症状, 这些症状可能表明神经根受到了压迫或损伤。这些症状的出现对于诊断神经根相关疾病具有重要意义, 并可能影响患者的日常生活和功能。[数据:关系 (6067)]\"\n        },\n        {\n            \"summary\": \"屈颈试验用于检测神经根受压\",\n            \"explanation\": \"屈颈试验是一种用于检测神经根受压的特殊检查方法, 与神经根有直接关系。这种试验可以帮助医生判断是否存在神经根受压的情况, 从而进一步评估患者的病情。[数据:关系 (6069)]\"\n        },\n        {\n            \"summary\": \"颈静脉压迫试验用于检测神经根受压\",\n            \"explanation\": \"颈静脉压迫试验也是一种用于检测神经根受压的特殊检查方法, 与神经根有直接关系。这种试验通常用于评估颈椎神经根的情况, 并可能揭示潜在的神经压迫问题。[数据:关系 (6071)]\"\n        },\n        {\n            \"summary\": \"股神经牵拉试验用于检测上腰椎间盘突出对神经根的影响\",\n            \"explanation\": \"股神经牵拉试验是一种用于检测上腰椎间盘突出对神经根影响的特殊检查方法。这种试验能够帮助医生评估腰椎间盘突出是否对神经根造成了压迫或损伤。股神经牵拉试验与神经根之间的关系表明其在腰椎疾病诊断中的重要性。[数据:关系 (6072)]\"\n        },\n        {\n            \"summary\": \"仰卧挺腹试验用于检测腰椎间盘突出症\",\n            \"explanation\": \"仰卧挺腹试验是一种用于检测腰椎间盘突出症的医学测试, 与神经根相关。这种测试通过增加椎管内压力来判断是否存在椎间盘突出, 从而间接评估神经根是否受到压迫。仰卧挺腹试验与腰椎间盘突出症之间的关系表明其在诊断中的关键作用。[数据:关系 (1047)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"仙方活命饮与急性化脓性骨髓炎治疗\",\n    \"summary\": \"该社区围绕治疗急性化脓性骨髓炎的中药方剂和治疗原则展开, 其中仙方活命饮和金黄散是主要的实体, 与清热解毒、活血通络等治疗原则密切相关。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"该社区涉及治疗急性化脓性骨髓炎的中药方剂和治疗原则, 具有一定的医学重要性, 但影响范围有限。\",\n    \"findings\": [\n        {\n            \"summary\": \"仙方活命饮是治疗急性化脓性骨髓炎的重要方剂\",\n            \"explanation\": \"仙方活命饮被明确用于治疗急性化脓性骨髓炎, 以清热解毒和活血通络为主要治疗原则。这表明它在该社区中是一个核心实体, 与多个治疗原则和病症相关。[数据:实体 (6054), 关系 (6815, 6816, 6817)]\"\n        },\n        {\n            \"summary\": \"金黄散用于外敷治疗急性化脓性骨髓炎\",\n            \"explanation\": \"金黄散是一种外用药, 用于治疗急性化脓性骨髓炎, 可水调外敷。这表明它在该社区中与仙方活命饮一样, 是治疗该病症的重要组成部分。[数据:实体 (6055), 关系 (6818)]\"\n        },\n        {\n            \"summary\": \"清热解毒是治疗急性化脓性骨髓炎的重要原则\",\n            \"explanation\": \"清热解毒是中医治疗急性化脓性骨髓炎的重要原则之一, 常与五味消毒饮和黄连解毒汤配合使用。这表明该原则在该社区中具有重要地位, 并与多个方剂相关。[数据:实体 (2514), 关系 (6816)]\"\n        },\n        {\n            \"summary\": \"活血通络是治疗急性化脓性骨髓炎的辅助原则\",\n            \"explanation\": \"活血通络是治疗急性化脓性骨髓炎的中医治疗原则之一, 与仙方活命饮有直接关系。这表明该原则在该社区中作为辅助治疗手段, 与主要治疗原则清热解毒相辅相成。[数据:实体 (6063), 关系 (6817)]\"\n        },\n        {\n            \"summary\": \"急性化脓性骨髓炎是社区的核心病症\",\n            \"explanation\": \"急性化脓性骨髓炎是该社区中多个中药方剂和治疗原则的共同目标病症。这表明该病症在社区中具有核心地位, 并且是推动相关实体相互关联的关键因素。[数据:关系 (6815, 6818)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"X线检查及其相关医学实体\",\n    \"summary\": \"该社区以X线检查为核心, 包含多种影像学位置选择和骨折相关实体, 如正位、侧位、斜位、开口位、脊椎运动检查、骨痴生长、腕舟状骨骨折、胫骨上段骨折以及专家邸建德。这些实体之间通过诊断和评估功能相互关联, 体现了X线检查在医学影像学中的重要性。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"X线检查在医学诊断中具有广泛的应用, 与多种骨折类型和影像学方法相关, 因此影响严重程度评级为较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"X线检查是社区的核心实体\",\n            \"explanation\": \"X线检查是这个社区的中心实体, 与多个医学影像学位置选择和骨折相关实体有直接联系。它在诊断和评估骨折脱位、骨痴生长、腕舟状骨骨折、胫骨上段骨折等疾病中起关键作用。[数据:实体 (143); 关系 (1162, 1165, 1166, 1167, 1168 +more)]\"\n        },\n        {\n            \"summary\": \"多种影像学位置选择与X线检查相关\",\n            \"explanation\": \"正位、侧位、斜位、开口位和脊椎运动检查都是X线检查的影像学位置选择或方法。这些位置选择有助于减少阴影重叠、观察特定病变或评估椎体稳定性, 从而提高诊断的准确性。[数据:关系 (1165, 1166, 1167, 1168, 1169 +more)]\"\n        },\n        {\n            \"summary\": \"骨痴生长与X线检查密切相关\",\n            \"explanation\": \"X线检查用于检查骨痴生长和骨折愈合情况, 这表明X线检查在骨折愈合过程的监测中具有重要作用。通过X线检查可以判断骨折端是否移位, 以及骨痂的生长情况, 从而指导治疗和康复计划。[数据:关系 (1906)]\"\n        },\n        {\n            \"summary\": \"邸建德使用X线检查进行医学诊断\",\n            \"explanation\": \"邸建德是一位我国专家, 他使用X线检查来判断股骨头骨骺的破坏程度。这表明X线检查在专家的医学诊断中具有重要地位, 并且在特定疾病的评估中被广泛应用。[数据:关系 (7004)]\"\n        },\n        {\n            \"summary\": \"X线检查用于诊断胫骨上段骨折\",\n            \"explanation\": \"X线检查用于诊断胫骨上段骨折并确认是否导致缺血性肌挛缩。这种骨折类型可能对患者造成严重的功能障碍, 因此X线检查在早期诊断和治疗中起着关键作用。[数据:关系 (2697)]\"\n        },\n        {\n            \"summary\": \"X线检查可能无法早期发现腕舟状骨骨折\",\n            \"explanation\": \"X线检查可能无法早期发现腕舟状骨骨折, 这表明在某些情况下, 需要结合其他影像学技术(如MRI)来提高诊断的准确性。这种局限性可能会影响患者的早期治疗和康复。[数据:关系 (2691)]\"\n        },\n        {\n            \"summary\": \"X线检查用于评估骨折脱位的治疗效果\",\n            \"explanation\": \"X线检查不仅用于诊断骨折脱位, 还用于评估其治疗效果。这表明X线检查在骨折脱位的整个治疗过程中都具有重要作用, 从诊断到术后随访。[数据:关系 (1162)]\"\n        }\n    ]\n```.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"急性化脓性骨髓炎与慢性骨髓炎相关医疗社区\",\n    \"summary\": \"该社区围绕急性化脓性骨髓炎和慢性骨髓炎展开，涉及相关医学检查和治疗方法。急性化脓性骨髓炎与慢性骨髓炎之间存在关联，同时与血沉、白细胞总数、C-反应蛋白等实验室检查指标以及切开排脓引流手术等治疗手段有直接联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学领域，对公共健康有一定影响，但其严重性较低，因为主要影响范围限于医疗和临床环境。\",\n    \"findings\": [\n        {\n            \"summary\": \"急性化脓性骨髓炎是核心疾病\",\n            \"explanation\": \"急性化脓性骨髓炎是该社区的核心实体，其描述详细且与其他多个实体有直接关系，包括实验室检查指标和治疗手段。这种疾病具有较高的临床重要性，因其症状严重且可能引发全身中毒征象。[数据:实体 (6049); 关系 (6784, 6787, 6786, 6788, 6826 +more)]\"\n        },\n        {\n            \"summary\": \"慢性骨髓炎是急性化脓性骨髓炎的可能发展结果\",\n            \"explanation\": \"慢性骨髓炎是急性化脓性骨髓炎的后期阶段，可能由急性骨髓炎转变而来。这种疾病具有反复发作的特点，可能导致局部窦道形成、脓液排出以及患肢畸形等长期问题。[数据:实体 (6042); 关系 (6794)]\"\n        },\n        {\n            \"summary\": \"血沉是急性化脓性骨髓炎的重要实验室指标\",\n            \"explanation\": \"血沉增高是急性化脓性骨髓炎的常见实验室检查结果，这表明该指标在诊断和监测疾病进展中具有重要作用。血沉的异常可能反映炎症或感染的严重程度。[数据:实体 (2975); 关系 (6787)]\"\n        },\n        {\n            \"summary\": \"白细胞总数与急性化脓性骨髓炎密切相关\",\n            \"explanation\": \"白细胞总数在急性化脓性骨髓炎中会升高，这表明免疫系统对感染的反应。白细胞总数和分类的异常可以作为判断感染程度和治疗效果的重要依据。[数据:实体 (2974); 关系 (6786)]\"\n        },\n        {\n            \"summary\": \"C-反应蛋白是急性化脓性骨髓炎的常见实验室指标\",\n            \"explanation\": \"C-反应蛋白的增高是急性化脓性骨髓炎的常见实验室检查结果，这表明该指标在评估炎症反应和疾病活动性方面具有重要价值。C-反应蛋白的水平变化可用于监测治疗效果和病情进展。[数据:实体 (6050); 关系 (6788)]\"\n        },\n        {\n            \"summary\": \"切开排脓引流手术用于治疗急性化脓性骨髓炎\",\n            \"explanation\": \"切开排脓引流手术是急性化脓性骨髓炎治疗中的重要手段，用于处理骨膜下脓肿或软组织脓肿。这种手术方式在临床实践中被广泛使用，以减轻症状并防止病情恶化。[数据:实体 (6059); 关系 (6826)]\"\n        },\n        {\n            \"summary\": \"骨质硬化与月骨坏死相关\",\n            \"explanation\": \"骨质硬化是该社区中的一个次要实体，与月骨坏死的病理改变相关。虽然它在社区中不是核心实体，但其与骨骼病变的关联表明它在某些特定病例中可能具有临床意义。[数据:实体 (4668); 关系 (4808)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨痈疽及其相关症状\",\n    \"summary\": \"社区以骨痈疽为中心, 该疾病与多种全身症状和局部表现相关, 包括寒战高热、出汗、烦躁不安、舌红、苔黄腻、脉数以及疮口与窦道等。这些实体之间的关系反映了骨痈疽的病理特征和临床表现。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"骨痈疽及其相关症状主要涉及医学领域, 对公共健康有一定影响, 但不构成重大社会或安全威胁。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨痈疽是社区的核心实体\",\n            \"explanation\": \"骨痈疽是这个社区的中心实体, 与多个症状和局部表现相关。它在医学领域中具有重要性, 且其发病时的全身症状和局部脓肿破溃后的表现是理解该社区结构的关键。[数据:实体 (753); 关系 (805, 773, 774, 777, 778 +more)]\"\n        },\n        {\n            \"summary\": \"骨痈疽与多种全身症状相关\",\n            \"explanation\": \"骨痈疽与全身症状如寒战高热、出汗、烦躁不安、舌红、苔黄腻、脉数等密切相关。这些症状表明骨痈疽可能引发严重的全身性反应, 对患者健康构成威胁。[数据:关系 (773, 774, 777, 778, 779 +more)]\"\n        },\n        {\n            \"summary\": \"烦躁不安是骨痈疽的常见症状\",\n            \"explanation\": \"烦躁不安是骨痈疽的全身症状之一, 通常与瘀血停聚、积瘀化热有关。这种症状可能影响患者的心理状态和生活质量, 并在临床诊断中具有重要意义。[数据:实体 (965), 关系 (756)]\"\n        },\n        {\n            \"summary\": \"疮口与窦道是骨痈疽的局部表现\",\n            \"explanation\": \"骨痈疽的局部脓肿破溃后, 会出现疮口与窦道, 表现为流脓, 初期多为稠厚, 后期逐渐稀薄, 有时夹杂小块死骨排出。这些表现是诊断和治疗骨痈疽的重要依据。[数据:实体 (1106), 关系 (805)]\"\n        },\n        {\n            \"summary\": \"骨痈疽的治疗以清热解毒为主\",\n            \"explanation\": \"骨痈疽的治疗通常采用清热解毒法, 这表明该疾病多属热证。治疗方法的选择与疾病的性质和症状密切相关, 并在临床实践中具有指导意义。[数据:实体 (753)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨软化症及其相关特征\",\n    \"summary\": \"社区以骨软化症为中心, 这是一种由营养障碍引起的骨病, 与多种X线片特征和长骨弯曲等压力畸形相关。该社区的实体包括骨折愈合、长骨弯曲、MILKMAN线、LOOSER线、横骨小梁消失、纵骨小梁纤细和骨皮质变薄等, 它们之间通过因果关系和诊断特征相互关联。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"骨软化症及其相关特征对骨骼健康有中等影响, 主要涉及诊断和治疗领域。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨软化症是核心实体\",\n            \"explanation\": \"骨软化症是这个社区的核心实体, 是由营养障碍引起的骨病, 并且与多种X线片特征和压力畸形相关。它在社区中具有高度的连接性, 与多个其他实体有直接关系。[数据:实体 (858); 关系 (2794, 7184, 7185, 7186, 7187, 7188, 7189 +more)]\"\n        },\n        {\n            \"summary\": \"长骨弯曲是骨软化症的常见压力畸形\",\n            \"explanation\": \"`长骨弯曲`是骨软化症的常见压力畸形, 与骨软化症有直接的因果关系。这种畸形可能对患者的行动能力造成影响, 并在诊断过程中起到重要作用。[数据:实体 (6403); 关系 (7184)]\"\n        },\n        {\n            \"summary\": \"MILKMAN线和LOOSER线是骨软化症的X线片特征\",\n            \"explanation\": \"MILKMAN线和LOOSER线都是骨软化症的X线片特征, 表现为假骨折线。这些特征在医学影像诊断中是识别骨软化症的重要依据。[数据:实体 (6404, 6405); 关系 (7185, 7186)]\"\n        },\n        {\n            \"summary\": \"横骨小梁消失是骨软化症的X线片特征\",\n            \"explanation\": \"横骨小梁消失是骨软化症的X线片特征之一, 与骨软化症有直接关系。这种特征表明骨骼的结构完整性可能受到损害, 对诊断和治疗方案的制定具有重要意义。[数据:实体 (6406); 关系 (7187)]\"\n        },\n        {\n            \"summary\": \"纵骨小梁纤细是骨软化症的X线片特征\",\n            \"**explanation**: \"  \n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n            \t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"关节突关节与屈曲旋转型损伤\",\n    \"summary\": \"该社区以关节突关节和屈曲旋转型损伤为核心, 涉及脊柱、棘上韧带、棘间韧带和小关节囊等实体。这些实体之间的关系主要围绕损伤机制和结构功能展开, 与脊柱的稳定性及损伤相关。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学和解剖学领域, 对公共健康的影响有限, 因此影响严重程度评级为低。\",\n    \"findings\": [\n        {\n            \"summary\": \"关节突关节是脊柱的重要组成部分\",\n            \"explanation\": \"关节突关节是脊柱相邻椎骨之间的微动关节, 与脊柱存在直接关系。这种结构在脊柱的稳定性和运动中起着关键作用。[数据:实体 (4129), 关系 (4097)]\"\n        },\n        {\n            \"summary\": \"屈曲旋转型损伤与多个结构相关\",\n            \"explanation\": \"屈曲旋转型损伤是一种复杂的脊柱损伤, 涉及棘上韧带、棘间韧带、小关节囊和关节突关节等多个结构。这种损伤通常由复合暴力作用引起, 并可能导致椎管变形和脊髓受压。[数据:实体 (4152), 关系 (4136, 4138)]\"\n        },\n        {\n            \"summary\": \"棘上韧带和棘间韧带在屈曲旋转型损伤中易受损\",\n            \"explanation\": \"棘上韧带和棘间韧带是脊柱中常见的劳损部位, 在屈曲旋转型损伤中容易受到牵拉。这些韧带的损伤可能会导致疼痛加剧, 并影响脊柱的稳定性。[数据:实体 (821, 822), 关系 (4136, 5881, 5882, 5883)]\"\n        },\n        {\n            \"summary\": \"小关节囊在屈曲旋转型损伤中可能撕裂\",\n            \"explanation\": \"小关节囊是脊柱小关节的囊状结构, 在屈曲旋转型损伤中可能撕裂。这种撕裂可能进一步影响关节突关节的稳定性, 增加脊柱损伤的风险。[数据:实体 (4162), 关系 (4138)]\"\n        },\n        {\n            \"summary\": \"脊柱屈曲与韧带损伤相关\",\n            \"explanation\": \"脊柱屈曲是一种可能加剧棘上韧带和棘间韧带损伤的活动。当这些韧带受损时, 脊柱屈曲可能会导致疼痛加剧, 进一步影响患者的健康和生活质量。[数据:实体 (5359), 关系 (5881, 5882, 5883)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"脊柱肿瘤、骨质和软组织\",\n    \"summary\": \"社区以脊柱肿瘤为核心, 与骨质和软组织存在直接关联。脊柱肿瘤可能导致骨质破坏, 并与软组织存在解剖关系。这些实体之间的关系反映了脊柱肿瘤对周围组织的潜在影响。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"脊柱肿瘤对骨质和软组织的影响可能引发严重的健康问题, 但目前没有明确的威胁性或广泛的社会影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"脊柱肿瘤是社区的核心实体\",\n            \"explanation\": \"脊柱肿瘤是这个社区的关键实体, 与骨质和软组织有直接关系。它在社区中具有较高的重要性, 因为它可能对其他实体造成影响。[数据:实体 (1598); 关系 (1237, 1238 +more)]\"\n        },\n        {\n            \"summary\": \"脊柱肿瘤可导致骨质破坏\",\n            \"explanation\": \"脊柱肿瘤与骨质之间存在直接的病理关系, 脊柱肿瘤可能导致骨质破坏。这种关系表明脊柱肿瘤可能对骨骼健康造成严重影响。[数据:关系 (1237)]\"\n        },\n        {\n            \"summary\": \"脊柱肿瘤与软组织存在解剖关系\",\n            \"explanation\": \"脊柱肿瘤与软组织之间存在解剖关系, 这表明脊柱肿瘤可能对软组织造成直接或间接的影响。软组织在脱位或骨折过程中可能受损, 与脊柱肿瘤的病理过程相关。[数据:关系 (1238)]\"\n        },\n        {\n            \"summary\": \"软组织在医学检查中具有重要性\",\n            \"explanation\": \"软组织是医学检查中的重要观察区域, 在X线检查中与骨组织形成对比。软组织可能在骨折或脱位过程中受损, 并可能因恶性骨肿瘤而出现肿胀。这表明软组织在医疗诊断和治疗中具有关键作用。[数据:实体 (1508)]\"\n        },\n        {\n            \"summary\": \"骨质在社区中具有较低的重要性\",\n            \"explanation\": \"骨质在社区中是一个次要实体, 与脊柱肿瘤有直接关系, 但其描述较为简略, 未涉及具体病理或社会影响。这表明骨质在社区中的作用相对有限。[数据:实体 (1603); 关系 (1237)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"神经内分泌功能紊乱及其相关症状\",\n    \"summary\": \"社区以神经内分泌功能紊乱为中心, 该疾病与恐惧、焦虑和寒冷等严重创伤伴随的症状密切相关, 并可能导致休克的发生。这些实体之间的关系揭示了神经内分泌功能紊乱的潜在影响及其与创伤后症状的联系。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"神经内分泌功能紊乱可能导致休克, 并与严重创伤伴随的症状密切相关, 因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"神经内分泌功能紊乱是核心实体\",\n            \"explanation\": \"神经内分泌功能紊乱是这个社区的核心实体, 它是由严重创伤和伴随症状如疼痛、恐惧、焦虑与寒冷等对中枢神经产生不良刺激引起的。该实体在社区中具有较高的连接度, 表明其在多个关系中扮演重要角色。[数据:实体 (2772); 关系 (2355, 2357, 2358, 2359 +more)]\"\n        },\n        {\n            \"summary\": \"恐惧、焦虑和寒冷是相关症状\",\n            \"explanation\": \"恐惧、焦虑和寒冷是严重创伤伴随的症状, 并且这些症状会对中枢神经产生不良刺激, 导致神经内分泌功能紊乱。这些症状在社区中作为次要实体, 与核心实体有直接联系。[数据:实体 (2773, 2774, 2775); 关系 (2357, 2358, 2359 +more)]\"\n        },\n        {\n            \"summary\": \"神经内分泌功能紊乱可能导致休克\",\n            \"explanation\": \"神经内分泌功能紊乱可导致休克的发生, 这表明该疾病可能引发严重的生理反应。休克作为一种潜在的严重后果, 与神经内分泌功能紊乱之间的关系对理解社区的健康风险至关重要。[数据:关系 (2355)]\"\n        },\n        {\n            \"summary\": \"症状与神经内分泌功能紊乱的关联性\",\n            \"explanation\": \"恐惧、焦虑和寒冷等症状与神经内分泌功能紊乱之间存在明确的因果关系。这些症状不仅作为触发因素, 还可能加剧神经内分泌功能紊乱的影响, 进一步影响个体的健康状况。[数据:关系 (2357, 2358, 2359 +more)]\"\n        },\n        {\n            \"summary\": \"社区的重要性与健康风险相关\",\n            \"explanation\": \"该社区涉及神经内分泌功能紊乱及其相关症状, 这些都与严重创伤有关, 并可能导致休克等严重后果。因此, 社区的重要性评分较高, 与健康风险和潜在的医疗紧急情况相关。[数据:实体 (2772); 关系 (2355, 2357, 2358, 2359 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"梁铁民与《正骨学》\",\n    \"summary\": \"社区以梁铁民为中心, 他是山东著名骨伤科医生, 并且是《正骨学》的作者。该社区包含梁铁民和《正骨学》两个实体, 两者之间存在直接关系, 与医学领域相关。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"由于梁铁民及其著作《正骨学》在医学领域具有一定的影响力, 但未显示出对社会或法律的显著影响, 因此影响严重程度评级为较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"梁铁民是社区的核心人物\",\n            \"explanation\": \"梁铁民是这个社区的关键实体, 他是山东著名的骨伤科医生, 并且是《正骨学》的作者。他的专业背景和著作表明他在医学领域具有一定的权威性。[数据:实体 (671)]\"\n        },\n        {\n            \"summary\": \"《正骨学》是梁铁民的重要著作\",\n            \"explanation\": \"《正骨学》是这个社区的另一个关键实体, 它是梁铁民的代表作品。该著作在医学领域可能具有教育和研究价值, 但目前没有进一步信息表明其具体影响。[数据:实体 (675)]\"\n        },\n        {\n            \"summary\": \"梁铁民与《正骨学》之间存在直接关系\",\n            \"explanation\": \"梁铁民是《正骨学》的作者, 这表明他与该著作之间有直接的联系。这种关系对于理解社区的结构和梁铁民的专业影响力至关重要。[数据:关系 (456)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"全国中医药行业高等教育规划教材与相关机构\",\n    \"summary\": \"社区以全国中医药行业高等教育的“十三五”和“十四五”规划教材为核心，这些教材由国家中医药管理局教材办公室和中国中医药出版社等机构参与建设与出版，反映了中医药教育体系的重要组成部分。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"由于这些教材对中医药高等教育具有重要影响，因此社区的重要性评分为较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"“十三五”和“十四五”规划教材是核心实体\",\n            \"explanation\": \"“十三五”和“十四五”规划教材是社区中的核心实体，分别代表了全国中医药行业高等教育的两个重要阶段。这些教材的建设与出版对中医药教育体系具有深远影响。[数据:实体 (121, 122)]\"\n        },\n        {\n            \"summary\": \"国家中医药管理局教材办公室主导教材建设\",\n            \"explanation\": \"国家中医药管理局教材办公室是社区中的关键机构，负责对“十三五”和“十四五”规划教材进行综合评价和制定建设方案。这表明该机构在中医药教育体系中具有主导地位。[数据:关系 (80, 81)]\"\n        },\n        {\n            \"summary\": \"中国中医药出版社参与教材出版\",\n            \"explanation\": \"中国中医药出版社是社区中的重要参与者，负责出版“十三五”规划教材，并参与相关教材的建设工作。这表明该出版社在中医药教育内容传播中发挥着重要作用。[数据:关系 (82), 实体 (3)]\"\n        },\n        {\n            \"summary\": \"教材建设涉及多个机构协作\",\n            \"explanation\": \"“十三五”和“十四五”规划教材的建设涉及国家中医药管理局教材办公室和中国中医药出版社等机构的协作。这种多机构参与的模式表明教材建设是一个系统性工程，需要多方共同努力。[数据:关系 (80, 81, 82)]\"\n        },\n        {\n            \"summary\": \"中国中医药出版社位于北京经济技术开发区\",\n            \"explanation\": \"中国中医药出版社的地理位置在北京经济技术开发区，这可能影响其在教材出版和教育支持方面的资源获取和合作范围。[数据:实体 (3)]\"\n        },\n        {\n            \"summary\": \"教材建设对中医药教育体系有重要影响\",\n            \"explanation\": \"“十三五”和“十四五”规划教材的建设对中医药高等教育体系具有重要影响，它们代表了不同阶段的教育目标和内容更新。这些教材的实施可能会影响未来中医药专业人才的培养方向。[数据:实体 (121, 122), 关系 (80, 81)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"安徽中医药大学与中医学概论\",\n    \"summary\": \"该社区以安徽中医药大学为中心, 与多位编委和教材相关联, 包括王峰、杨文明、彭代银和中医学概论。这些实体之间的关系表明了大学在中医学教育和研究中的重要地位。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"该社区的重要性主要体现在安徽中医药大学与中医学教材的关联上, 但目前没有显示出直接的负面影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"安徽中医药大学是社区的核心实体\",\n            \"explanation\": \"安徽中医药大学是这个社区的关键实体, 与多位编委和教材相关联, 包括王峰、杨文明、彭代银和中医学概论。这表明该大学在中医学教育和研究领域具有重要地位。[数据:实体 (53), 关系 (39, 7464, 7495)]\"\n        },\n        {\n            \"summary\": \"王峰与安徽中医药大学有直接联系\",\n            \"explanation\": \"王峰是安徽中医药大学的编委, 并参与编写了教材的第十章。这表明他在该大学的学术活动中扮演着重要角色。[数据:实体 (52), 关系 (39)]\"\n        },\n        {\n            \"summary\": \"杨文明是中西医结合内科学的主编\",\n            \"explanation\": \"杨文明是中西医结合内科学的主编, 并且是安徽中医药大学的人员。这表明他在中医学和中西医结合领域具有专业影响力。[数据:实体 (6727), 关系 (7464)]\"\n        },\n        {\n            \"summary\": \"彭代银是安徽中医药大学校长并主编《本草典籍选读》\",\n            \"explanation\": \"彭代银是安徽中医药大学的校长, 并且是《本草典籍选读》的主编。这表明他在学术和行政管理方面都具有重要地位。[数据:实体 (95), 关系 (7495)]\"\n        },\n        {\n            \"summary\": \"中医学概论的主编储全根与安徽中医药大学有关联\",\n            \"explanation\": \"中医学概论的主编储全根与安徽中医药大学有联系, 同时该教材的主编单位还包括湖南中医药大学。这表明该教材在多个学术机构中具有重要地位。[数据:实体 (6876, 6875), 关系 (7569)]\"\n        },\n        {\n            \"summary\": \"安徽中医药大学在中医学教材编写中发挥重要作用\",\n            \"explanation\": \"安徽中医药大学是多本中医学教材的主编单位, 包括中医学概论和《本草典籍选读》。这表明该大学在中医学教育和研究领域具有广泛的影响力。[数据:实体 (53, 6875, 6876, 95), 关系 (39, 7464, 7495, 7569)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"预防医学与史周华\",\n    \"summary\": \"社区以《预防医学》一书为中心, 该书由史周华主编, 并与山东中医药大学相关联。社区内的实体之间存在明确的关联, 主要围绕书籍和其主编展开。\",\n    \"rating\": 2.0,\n    \"rating_explanation\": \"社区的重要性较低, 因为它主要涉及一本书及其主编, 没有显示出对公共秩序或社会动态的重大影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"《预防医学》是社区的核心实体\",\n            \"explanation\": \"《预防医学》是一本由史周华主编的书, 同时也是一门与医学相关的课程。这表明该书在社区中具有重要地位, 是连接其他实体的关键节点。[数据:实体 (6669); 关系 (7414)]\"\n        },\n        {\n            \"summary\": \"史周华是《预防医学》的主编\",\n            \"explanation\": \"史周华是《预防医学》一书的主编, 并且其所在单位是山东中医药大学。这表明他在医学教育或研究领域可能具有一定的影响力。[数据:实体 (6670); 关系 (7414)]\"\n        },\n        {\n            \"summary\": \"山东中医药大学与社区相关\",\n            \"explanation\": \"史周华的所在单位是山东中医药大学, 这表明该大学可能与《预防医学》一书或相关课程有直接联系。这种联系可能对医学教育领域产生一定影响。[数据:实体 (6670)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 12 column 12 (char 424)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"腹部脏器损伤与相关症状\",\n    \"summary\": \"该社区围绕腹部脏器损伤这一核心实体展开, 并与腹部疼痛和腹膜刺激症状等实体存在关联。这些实体之间的关系表明了腹部脏器损伤可能引发的全身症状及其临床重要性。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"由于腹部脏器损伤可能引发严重症状并影响患者健康, 因此影响严重程度评级为较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"腹部脏器损伤是核心实体\",\n            \"explanation\": \"腹部脏器损伤是该社区的关键实体, 与腹部疼痛和腹膜刺激症状有直接关系。这种损伤通常由强大的致伤暴力引起, 并可能对患者造成重大健康风险。[数据:实体 (4390)]\"\n        },\n        {\n           <\"summary\": \"                                                                                                                                                                                                 \\\">\"explanation\": \"                                                                                                        \\\">\"explanation\": \"腹部疼痛是该社区的另一个关键实体, 它可能是由腹部脏器损伤引起的。这种症状的出现表明了潜在的严重健康问题, 需要临床关注和进一步诊断。[数据n        },\n        {\n            \"summary\": \"腹膜刺激症状是重要临床表现\",\n            \"explanation\": \"腹膜刺激症状是该社区的另一个关键实体, 它可能是由腹部脏器损伤引起的。这种症状的出现表明了潜在的严重健康问题, 需要临床关注和进一步诊断。[数据:实体 (4393)]\"\n        },\n        {\n            \"summary\": \"腹部脏器损伤与腹部疼痛有直接关系\",\n            \"explanation\": \"腹部脏器损伤可能导致腹部疼痛, 这种关系表明了腹部脏器损伤的严重性及其对患者健康的影响。这种症状的出现可能提示需要紧急医疗干预。[数据:关系 (4398)]\"\n        },\n        {\n            \"summary\": \"腹部脏器损伤与腹膜刺激症状有直接关系\",\n            \"explanation\": \"腹部脏器损伤可能导致腹膜刺激症状, 这种关系表明了腹部脏器损伤的严重性及其对患者健康的影响。腹膜刺激症状可能是内脏损伤的进一步临床表现, 需要密切监测。[数据:关系 (4399)]\"\n        },\n        {\n            \"summary\": \"腹部疼痛和腹膜刺激症状可能同时出现\",\n            \"explanation\": \"腹部疼痛和腹膜刺激症状都可能由腹部脏器损伤引起, 这表明它们可能同时出现并共同反映腹部脏器损伤的严重性。这种症状组合可能提示内脏损伤的进一步发展或并发症。[数据:实体 (4392), 实体 (4393), 关系 (4398), 关系 (4399)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"活动功能障碍与骨折\",\n    \"summary\": \"社区以活动功能障碍为核心, 与骨折和组织破坏等实体相关联。这些实体之间的关系表明活动功能障碍通常由骨折或组织破坏引起, 且在骨伤科疾患中较为常见。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"活动功能障碍是骨伤科疾患中常见的症状, 但其影响程度相对有限, 主要与个体健康相关。\",\n    \"findings\": [\n        {\n            \"summary\": \"活动功能障碍是核心实体\",\n            \"explanation\": \"活动功能障碍是这个社区的关键实体, 在骨伤科疾患中常见, 表现为肢体活动受限。它与骨折和组织破坏等实体有直接联系, 表明其在社区中的重要性。[数据:实体 (894); 关系 (2685, 2686 +more)]\"\n        },\n        {\n            \"summary\": \"骨折是导致活动功能障碍的主要原因\",\n            \"explanation\": \"骨折是导致活动功能障碍的主要原因, 两者之间存在明确的因果关系。这种关系在数据中被多次提及, 表明骨折在社区中的重要性。[数据:关系 (2685)]\"\n        },\n        {\n           <\"summary\": \"                                                              \">',\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                >\", \nn                                                        .\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"伸屈指、掌、腕关节活动与气血畅通\",\n    \"summary\": \"社区以伸屈指、掌、腕关节活动为核心, 该活动与气血畅通存在直接联系。这种联系表明该活动可能在健康和康复领域具有重要性。\",\n    \"rating\": 2.0,\n    \"rating_explanation\": \"由于社区涉及的是康复和健康相关的活动, 其影响严重程度较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"伸屈指、掌、腕关节活动是核心实体\",\n            \"explanation\": \"伸屈指、掌、腕关节活动是这个社区的关键实体, 它是固定后进行的练功活动。该实体在社区中具有较高的连接度, 表明其在社区中的重要性。[数据:实体 (3421)]\"\n        },\n        {\n            \"summary\": \"气血畅通是相关健康概念\",\n            \"explanation\": \"气血畅通是这个社区的另一个关键实体, 它与伸屈指、掌、腕关节活动存在直接联系。这表明该活动可能在促进健康和康复方面具有作用。[数据:实体 (3423)]\"\n        },\n        {\n            \"summary\": \"伸屈指、掌、腕关节活动有利于气血畅通\",\n            \"explanation\": \"伸屈指、掌、腕关节活动与气血畅通之间的关系表明该活动可能有助于改善血液循环或身体机能。这种关系可能是健康和康复领域的重要信息。[数据:关系 (3094)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"踝关节扭伤与相关医疗处理\",\n    \"summary\": \"社区以踝关节扭伤为核心, 与韧带松弛、习惯性踝关节扭伤、理筋手法等实体相关联。这些实体涉及医疗处理和潜在并发症, 与绷带、胶布、环形包扎法和螺旋形包扎法等医疗设备和方法也有联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区的重要性评分较低, 因为它主要涉及医疗处理和常见损伤, 通常不会造成严重社会影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"踝关节扭伤是社区的核心实体\",\n            \"explanation\": \"踝关节扭伤是这个社区的主要焦点, 与理筋手法、韧带松弛和习惯性踝关节扭伤等实体有直接联系。这种损伤通常需要特定的治疗方法, 并可能导致长期健康问题。[数据:实体 (5302), 关系 (5817, 5828, 5838 +more)]\"\n        },\n        {\n            \"summary\": \"理筋手法是治疗踝关节扭伤的关键方法\",\n            \"explanation\": \"理筋手法被明确列为治疗踝关节扭伤的方法, 这表明它在社区中具有重要地位。这种方法可能对恢复过程起到关键作用, 但其效果可能因个体差异而有所不同。[数据:关系 (5817)]\"\n        },\n        {\n            \"summary\": \"韧带松弛是踝关节扭伤的常见后果\",\n            \"explanation\": \"韧带松弛是踝关节扭伤后可能出现的症状, 这表明扭伤可能对身体结构造成长期影响。韧带松弛还可能进一步导致习惯性踝关节扭伤, 形成一个潜在的健康问题循环。[数据:实体 (5309), 关系 (5828, 5838)]\"\n        },\n        {\n            \"summary\": \"习惯性踝关节扭伤是一种综合征\",\n            \"explanation\": \"习惯性踝关节扭伤被描述为一种综合征, 由反复扭伤引起。这表明它可能需要长期的医疗管理和预防措施, 以避免进一步的损伤和并发症。[数据:实体 (5307), 关系 (5838)]\"\n        },\n        {\n            \"summary\": \"绷带和胶布是外固定和皮肤牵引的重要工具\",\n            \"explanation\": \"绷带和胶布都被用于外固定和皮肤牵引, 以帮助固定肢体和促进恢复。这些工具在医疗处理中起着关键作用, 但若使用不当, 可能导致皮肤损伤或其他并发症。[数据:实体 (2056, 2105), 关系 (1682, 1817)]\"\n        },\n        {\n            \"summary\": \"环形包扎法和螺旋形包扎法用于降低感染风险\",\n            \"explanation\": \"环形包扎法和螺旋形包扎法都被用于保护创面, 从而降低感染风险。这两种方法在医疗处理中被广泛应用, 但它们的适用范围和效果可能因具体情况而异。[数据:关系 (2062, 2063)]\"\n        },\n        {\n            \"summary\": \"掌骨干骨折与手法整复相关\",\n            \"explanation\": \"掌骨干骨折可以采用手法整复进行治疗, 这表明它在医疗处理中是一个重要的考虑因素。然而, 这种骨折可能伴有骨擦音, 需要专业医疗人员进行评估和处理。[数据:实体 (3726), 关系 (3527)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"导尿管、尿路感染和结石\",\n    \"summary\": \"社区以导尿管为核心实体，与尿路感染和结石等健康问题密切相关。导尿管的使用不当可能导致感染和结石，这些并发症在医疗环境中具有重要影响。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"导尿管的使用与尿路感染和结石等严重医疗并发症相关，因此影响严重程度评级为中等偏高。\",\n    \"findings\": [\n        {\n            \"summary\": \"导尿管是社区的核心实体\",\n            \"explanation\": \"导尿管是这个社区的关键实体，它在医疗环境中被广泛使用，并且与尿路感染和结石等并发症有直接联系。导尿管的重要性体现在其与多个其他实体的关联中，表明其在医疗健康领域的关键作用。[数据:实体 (3190); 关系 (4335, 2732, 2733 +more)]\"\n        },\n        {\n            \"summary\": \"尿路感染是导尿管使用的主要并发症\",\n            \"explanation\": \"尿路感染是导尿管使用过程中常见的并发症，这表明导尿管的使用可能对患者健康造成显著影响。尿路感染的发生与导尿管的使用不当密切相关，因此在医疗管理中需要特别关注。[数据:实体 (3188); 关系 (2732)]\"\n        },\n        {\n            \"summary\": \"结石是导尿管使用导致的另一常见并发症\",\n            \"explanation\": \"结石是导尿管使用过程中可能引发的另一种并发症，这表明导尿管的长期使用可能对泌尿系统造成损害。结石的形成可能增加患者的痛苦和医疗负担，因此需要在临床实践中加以防范。[数据:实体 (3189); 关系 (2733)]\"\n        },\n        {\n            \"summary\": \"导尿管与感染和结石的双向关系\",\n            \"explanation\": \"导尿管不仅可能导致感染和结石，而且感染和结石也可能与导尿管的使用有关。这种双向关系表明导尿管在医疗环境中的使用需要更加谨慎，以避免引发这些并发症。[数据:关系 (4335, 2732, 2733)]\"\n        },\n        {\n            \"summary\": \"导尿管的使用对患者健康有重大影响\",\n            \"explanation\": \"导尿管的使用与尿路感染和结石等健康问题密切相关，这表明其在医疗护理中的重要性以及潜在风险。如果导尿管使用不当，可能会对患者造成严重的健康后果，包括疼痛、感染扩散和长期治疗需求。[数据:实体 (3190, 3188, 3189); 关系 (4335, 2732, 2733)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨折愈合与相关治疗及影响因素\",\n    \"summary\": \"该社区围绕骨折愈合展开, 包含多种治疗方案和影响因素, 如练功计划、辨证用药、糖尿病、重度营养不良、钙代谢障碍、断面接触、断端血供、运动、延迟连接和不连接等。这些实体之间存在复杂的相互关系, 其中骨折愈合是核心, 受到多个局部和全身因素的影响。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"骨折愈合过程受到多种因素影响, 但社区整体对公共安全或社会秩序的影响较小, 因此影响严重程度评级为较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨折愈合是社区的核心主题\",\n            \"explanation\": \"骨折愈合是这个社区的关键实体, 与多个其他实体有直接关系, 包括局部因素和全身因素。这些关系表明骨折愈合是一个复杂的过程, 受到多种治疗和疾病的影响。[数据:实体 (2169), 关系 (2792, 2793, 2796, 2797, 2798, 2799, 2800, 2808, 2814, 2815 +more)]\"\n        },\n        {\n            \"summary\": \"练功计划和辨证用药是骨折治疗的重要组成部分\",\n            \"explanation\": \"练功计划和辨证用药是骨折康复和治疗中的关键方法。练功计划通过功能锻炼促进恢复, 而辨证用药则根据患者的具体情况选择合适的药物以促进愈合。两者都与骨折治疗密切相关。[数据:实体 (3237, 3238), 关系 (2783, 2785)]\"\n        },\n        {\n            \"summary\": \"糖尿病和重度营养不良影响骨折愈合\",\n            \"explanation\": \"糖尿病和重度营养不良是影响骨折愈合速度的全身因素。这些慢性消耗性疾病可能导致身体无法有效修复骨折, 从而延长康复时间或增加并发症风险。[数据:实体 (3243, 3244), 关系 (2792, 2793)]\"\n        },\n        {\n            \"summary\": \"钙代谢障碍对骨折愈合有显著影响\",\n            \"explanation\": \"钙代谢障碍是骨折愈合过程中的一个关键影响因素。钙是骨骼修复的重要元素, 代谢障碍可能导致骨折愈合迟缓或不完全。[数据:实体 (3247), 关系 (2797)]\"\n        },\n        {\n            \"summary\": \"断面接触和断端血供是局部影响因素\",\n            \"explanation\": \"断面接触和断端血供是骨折愈合的两个重要局部因素。断面接触面积的大小直接影响愈合速度, 而断端血供的好坏则决定了愈合的快慢。胫骨干下1/3 是血供较差的部位, 骨折后愈合迟缓。[数据:实体 (3248, 3249, 3250), 关系 (2798, 2799, 2800)]\"\n        },\n        {\n            \"summary\": \"适当的运动有助于骨折愈合\",\n            \"explanation\": \"运动是骨折治疗的一部分, 适当的关节功能锻炼可以促进骨折愈合。然而, 过度或不适当的运动可能对愈合过程产生负面影响。[数据:实体 (3251), 关系 (2808)]\"\n        },\n        {\n            \"summary\": \"延迟连接和不连接是骨折愈合的并发症\",\n            \"explanation\": \"延迟连接和不连接是骨折愈合过程中可能出现的并发症。这些并发症可能需要进一步的医疗干预, 如手术或更严格的康复计划。[数据:实体 (3259, 3260), 关系 (2814, 2815)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"皮肤牵引与儿童治疗\",\n    \"summary\": \"社区以皮肤牵引为中心，这是一种用于治疗骨折和关节挛缩症的非侵入性方法，与扩张板、托马氏架、垂直悬吊皮肤牵引等实体相关。此外，社区还涉及儿童这一关键群体，以及与儿童相关的治疗限制和适用性。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"皮肤牵引在治疗儿童和成人骨折中具有重要性，但其潜在的皮肤不良反应和对儿童的适用性限制需要关注。\",\n    \"findings\": [\n        {\n            \"summary\": \"皮肤牵引是社区的核心治疗方法\",\n            \"explanation\": \"皮肤牵引是这个社区的核心实体，它是一种非侵入性的治疗方法，适用于无移位或嵌插型骨折、软组织肿胀严重的病例，以及儿童和体弱成年人。皮肤牵引通过胶布或绷带施加牵引力，对患肢基本无损伤，通常持续3~4周。[数据:实体 (2151)]\"\n        },\n        {\n            \"summary\": \"扩张板和托马氏架是皮肤牵引的重要辅助工具\",\n            \"explanation\": \"扩张板和托马氏架是皮肤牵引中常用的辅助工具。扩张板用于施加牵引力，而托马氏架是一种特定的牵引架，用于皮肤牵引。这些工具在皮肤牵引的实施过程中起着关键作用。[数据:关系 (1809), 实体 (2153, 3875)]\"\n        },\n        {\n            \"summary\": \"皮肤牵引可能引发皮炎\",\n            \"explanation\": \"皮肤牵引可能引起皮炎，这是一种皮肤对胶布的不良反应。如果发生皮炎，需要及时停止牵引以避免进一步的皮肤损伤。这表明皮肤牵引在实施过程中需要密切监测患者的皮肤状况。[数据:关系 (1821), 实体 (2163)]\"\n        },\n        {\n            \"summary\": \"垂直悬吊皮肤牵引适用于3岁以内的儿童\",\n            \"explanation\": \"垂直悬吊皮肤牵引是皮肤牵引的一种特殊形式，适用于3岁以内的儿童。这种方法通过将患肢和健肢同时向上悬吊，用重量对抗牵引，以达到治疗目的。这表明皮肤牵引在儿童治疗中具有特定的应用场景。[数据:关系 (3739), 实体 (3876, 3544)]\"\n        },\n        {\n            \"summary\": \"儿童在皮肤牵引治疗中具有特殊限制\",\n            \"explanation\": \"儿童在皮肤牵引治疗中具有特殊限制，例如垂直悬吊皮肤牵引仅适用于3岁以内的儿童，而桡骨头切除术则不适用于14岁以下儿童。这表明儿童在某些治疗方法中需要特别关注适用性。[数据:关系 (3739, 3274), 实体 (3544, 3537)]\"\n        },\n        {\n            \"summary\": \"皮肤牵引用于治疗轻度关节挛缩症\",\n            \"explanation\": \"皮肤牵引用于治疗轻度关节挛缩症，这表明它不仅适用于骨折治疗，还可以用于其他骨骼和关节相关疾病。然而，对于更严重的关节问题，可能需要其他治疗方法。[数据:关系 (1813), 实体 (2158)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"持续牵引与骨折治疗社区\",\n    \"summary\": \"社区以持续牵引为核心, 该技术与骨折、闭合复位、床边 X 线片和维持重量等实体密切相关, 用于骨折复位和固定。这些实体之间的关系反映了医疗流程中的关键步骤和工具。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区涉及医疗流程中的关键步骤和技术, 但其影响主要局限于医疗领域, 严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"持续牵引是核心医疗技术\",\n            \"explanation\": \"持续牵引是这个社区的核心实体, 用于骨折复位和固定。它在医疗过程中扮演重要角色, 与多个其他实体有直接关系。[数据:实体 (3265), 关系 (2885, 3729, 3730 +more)]\"\n        },\n        {\n            \"summary\": \"闭合复位与持续牵引相关\",\n            \"explanation\": \"闭合复位是与持续牵引相关的另一种医疗技术。它在骨折治疗中起到重要作用, 并与手法复位等其他实体有联系。[数据:实体 (2266), 关系 (2836 +more)]\"\n        },\n        {\n            \"summary\": \"床边 X 线片用于持续牵引治疗\",\n            \"explanation\": \"床边 X 线片是持续牵引治疗过程中用于复查骨折对位情况的重要工具。这种工具的使用表明了持续牵引治疗的复杂性和对精确性的需求。[数据:关系 (3729 +more)]\"\n        },\n        {\n            \"summary\": \"维持重量是持续牵引治疗的关键因素\",\n            \"explanation\": \"维持重量是持续牵引治疗中用于保持骨折对位对线的关键因素。这一因素在治疗过程中至关重要, 直接影响治疗效果。[数据:关系 (3730 +more)]\"\n        },\n        {\n            \"summary\": \"手法复位是闭合复位的一种方式\",\n            \"explanation\": \"手法复位是闭合复位的一种方式, 这表明闭合复位是一个更广泛的类别, 包含多种具体操作方法。这种关系有助于理解骨折治疗的不同方法。[数据:关系 (2836 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"牵引架、功能位和石膏床\",\n    \"summary\": \"社区以牵引架为核心, 牵引架与功能位和滑车有直接关系, 并且石膏床也与功能位相关。这些实体共同构成了一个与医疗牵引相关的网络, 用于帮助患者维持患肢的功能位。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区的重要性较低, 因为它主要涉及医疗设备和其功能, 没有明显的潜在威胁或重大社会影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"牵引架是社区的核心实体\",\n            \"explanation\": \"牵引架是这个社区的关键实体, 用于皮肤牵引, 如托马氏架, 主要功能是将肢体固定并实施牵引, 以帮助患者维持患肢的功能位。牵引架在社区中与其他实体有直接联系, 表明其在医疗牵引过程中的重要性。[数据:实体 (2116), 关系 (1776, 1818)]\"\n        },\n        {\n            \"summary\": \"功能位是牵引过程中的关键目标\",\n            \"explanation\": \"功能位是这个社区中的重要概念, 牵引架和石膏床都用于帮助患者维持患肢的功能位。功能位的实现是医疗牵引过程中的主要目标之一, 与多个实体相关联。[数据:实体 (2128), 关系 (1776, 1777)]\"\n        },\n        {\n            \"summary\": \"滑车在牵引过程中起到辅助作用\",\n            \"explanation\": \"滑车是牵引过程中用于引导牵引绳方向的装置, 其主要功能是调整牵引方向。滑车与牵引架有直接关系, 表明它在医疗牵引设备的使用中是一个重要的辅助工具。[数据:实体 (2159), 关系 (1818)]\"\n        },\n        {\n            \"summary\": \"石膏床用于维持患肢功能位\",\n            \"explanation\": \"石膏床是用于帮助患者维持患肢功能位的医疗器具。它与功能位有直接关系, 表明其在实现功能位目标中的作用。石膏床通常用于骨折或关节损伤后的固定和恢复。[数据:实体 (2117), 关系 (1777)]\"\n        },\n        {\n            \"summary\": \"牵引架和石膏床具有相似的功能\",\n            \"explanation\": \"牵引架和石膏床都与功能位有直接关系, 并且都用于帮助患者维持患肢的功能位。这表明它们在医疗牵引和固定过程中可能具有相似或互补的功能。[数据:关系 (1776, 1777)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨折不愈合与植骨手术\",\n    \"summary\": \"该社区围绕骨折不愈合这一关键实体展开, 涉及骨缺损、内固定加植骨术、血液循环等重要实体。这些实体之间存在紧密联系, 特别是骨折不愈合与植骨手术之间的关系, 以及骨折不愈合与内固定器材之间的潜在问题。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"骨折不愈合是一个严重的医学问题, 可能需要复杂的治疗手段, 如植骨手术, 并与内固定器材的质量和使用密切相关。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨折不愈合是社区的核心问题\",\n            \"explanation\": \"骨折不愈合是社区中最重要的实体之一, 它与多种治疗方法和并发症相关。它常见于股骨颈骨折和手舟骨骨折, 并且与局部血运较差和骨质疏松有关。[数据:实体 (2254), 关系 (1924, 2953 +more)]\"\n        },\n        {\n            \"summary\": \"植骨手术是治疗骨折不愈合的关键方法\",\n            \"explanation\": \"植骨手术是社区中用于治疗骨折不愈合的重要手段。它通过植骨促进骨折连接, 是一种常用且有效的治疗方法。[数据:实体 (3325), 关系 (2953)]\"\n        },\n        {\n            \"summary\": \"内固定加植骨术用于复杂骨折不愈合\",\n            \"explanation\": \"内固定加植骨术是用于治疗骨折不愈合的复杂方法, 特别是对于锁骨骨折等特定类型的骨折。这种方法结合了内固定和植骨, 以提高愈合的可能性。[数据:实体 (3362), 关系 (3006)]\"\n        },\n        {\n            \"summary\": \"骨缺损影响骨折愈合速度\",\n            \"explanation\": \"骨缺损是影响骨折愈合速度的重要因素, 常见于压缩骨折撬拨复位后。这种损伤程度可能需要松质骨充填以促进愈合。[数据:实体 (3258), 关系 (2811)]\"\n        },\n        {\n            \"summary\": \"血液循环对骨折愈合至关重要\",\n            \"explanation\": \"血液循环是复位固定后需要重点观察的生理指标, 牵引或石膏包扎不当可能导致并发症。肿胀也可能影响血液循环, 因此需特别注意松紧度。[数据:实体 (2122), 关系 (1783)]\"\n        },\n        {\n            \"summary\": \"内固定器材质量或使用不当可能导致骨折不愈合\",\n            \"explanation\": \"内固定器材的质量或使用不当是骨折不愈合的一个潜在原因。这表明在治疗过程中, 内固定器材的选择和使用需要特别谨慎。[数据:关系 (1924)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"内固定器材与相关医学现象\",\n    \"summary\": \"社区以内固定器材为核心, 该器材与无菌性炎症、电解作用和应力微电池等医学现象存在关联。这些现象可能对医疗安全和患者健康产生影响, 并且内固定器材的使用和相关反应是社区的关键信息。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"内固定器材可能引发无菌性炎症、电解作用和应力微电池等现象, 对患者健康和医疗安全构成中等程度的影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"内固定器材是社区的核心实体\",\n            \"explanation\": \"内固定器材是这个社区的中心实体, 与多个医学现象相关联, 包括无菌性炎症、电解作用和应力微电池。这种设备在医疗领域中广泛使用, 但其潜在的不良反应可能对患者健康产生重要影响。[数据:实体 (2255); 关系 (1926, 1925, 1927)]\"\n        },\n        {\n            \"summary\": \"内固定器材可能引发无菌性炎症\",\n            \"explanation\": \"内固定器材可能引发无菌性炎症, 这是一种与感染无关的炎症反应。这种现象可能与设备的材料或植入过程有关, 并可能对患者的康复过程造成干扰。[数据:关系 (1926)]\"\n        },\n        {\n            \"summary\": \"内固定器材可能因不同成分产生电解作用\",\n            \"explanation\": \"内固定器材可能因不同成分在体内产生电解作用, 导致金属材料腐蚀。这种腐蚀可能影响设备的长期稳定性, 从而对患者的治疗效果和安全性构成潜在风险。[数据:关系 (1925)]\"\n        },\n        {\n            \"summary\": \"应力微电池是内固定器材变形的潜在结果\",\n            \"explanation\": \"应力微电池是由于内固定器材变形而产生的内部电解腐蚀现象。这种现象可能在设备受到外力或长期使用后发生, 并可能导致设备失效或引发其他并发症。[数据:关系 (1927)]\"\n        },\n        {\n            \"summary\": \"无菌性炎症与电解作用存在潜在联系\",\n            \"explanation\": \"虽然无菌性炎症和电解作用是两个独立的现象, 但它们都与内固定器材的使用有关。这表明内固定器材可能通过多种机制影响患者的生理状态, 并需要进一步研究以明确其相互作用。[数据:实体 (2255, 2267, 2264); 关系 (1926, 1925)]\"\n        },\n        {\n            \"summary\": \"内固定器材的使用需要关注其材料和设计\",\n            \"explanation\": \"由于内固定器材可能引发无菌性炎症、电解作用和应力微电池等现象, 其材料和设计在临床应用中至关重要。选择合适的材料和优化设计可以降低这些不良反应的风险。[数据:实体 (2255, 2264, 2265); 关系 (1925, 1927)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"抗生素与感染预防治疗社区\",\n    \"summary\": \"该社区围绕抗生素及其在多种医疗场景中的应用展开，包括感染预防、术后治疗、开放性腹壁损伤、血胸和脑脊液漏出等。抗生素与胸膜腔穿刺抽血、开放性腹壁损伤和破伤风抗毒血清等实体之间存在紧密联系，表明其在医疗实践中的重要性。\",\n    \"rating\": 6.5,\n    \"rating_explanation\": \"抗生素在多种医疗场景中被广泛使用，其应用可能对公共健康和医疗安全产生重要影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"抗生素是社区的核心实体\",\n            \"explanation\": \"抗生素在该社区中扮演着核心角色，与多个实体如感染、胸膜腔穿刺抽血、开放性腹壁损伤和脑脊液漏出等存在直接关系。其广泛的应用表明它在医疗领域的重要性。[数据:实体 (2234); 关系 (1898, 6662, 6710, 6535 +more)]\"\n        },\n        {\n            \"summary\": \"感染是抗生素应用的主要驱动力\",\n            \"explanation\": \"感染是抗生素使用的主要原因，无论是术后感染、血胸还是脑脊液漏出后的颅内感染，抗生素都被用于预防和治疗。这表明感染在社区中是一个关键问题，需要持续关注。[数据:关系 (1898, 6662, 6710, 6535 +more)]\"\n        },\n        {\n            \"summary\": \"胸膜腔穿刺抽血与抗生素的结合使用\",\n            \"explanation\": \"胸膜腔穿刺抽血是用于诊断和治疗血胸的方法，而抗生素则用于预防抽血后可能发生的感染。这种结合使用表明在处理血胸时，感染预防是一个重要的考虑因素。[数据:实体 (5923), 关系 (6662)]\"\n        },\n        {\n            \"summary\": \"开放性腹壁损伤的处理涉及多种医疗手段\",\n            \"explanation\": \"开放性腹壁损伤的处理包括清创缝合、使用抗生素和破伤风抗毒血清。这些手段的结合使用表明该实体在医疗实践中具有较高的复杂性，并且需要多方面的干预来预防感染。[数据:实体 (5986), 关系 (6710, 6711)]\"\n        },\n        {\n            \"summary\": \"脑脊液漏出后的颅内感染预防依赖抗生素\",\n            \"explanation\": \"脑脊液漏出后，抗生素被用于预防颅内感染。这表明抗生素在处理此类并发症时具有关键作用，其使用需根据细菌培养及药物敏感试验结果进行调整。[数据:实体 (5829), 关系 (6535)]\"\n        },\n        {\n            \"summary\": \"破伤风抗毒血清与开放性腹壁损伤密切相关\",\n            \"explanation\": \"破伤风抗毒血清是用于预防开放性腹壁损伤感染的重要手段。这种预防措施表明该社区关注的是创伤后的感染风险，并采取了多种手段进行干预。[数据:实体 (1226), 关系 (6711)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨折及其相关治疗方法和影响因素\",\n    \"summary\": \"该社区以骨折为核心实体，涵盖了多种骨折类型、诊断方法、治疗方法以及影响骨折发生的因素。骨折与多种医疗设备、治疗手法和身体结构相关，表明其在骨伤科领域的重要性。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"骨折是一个医学术语，其影响严重程度较低，主要因其为常见损伤类型，而非具有社会或政治影响的实体。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨折是社区的核心实体\",\n            \"explanation\": \"骨折是这个社区的中心实体，与多个其他实体如各论、挤压法、呼击法、端挤、触碰等有直接关系。这些实体涉及骨折的诊断、治疗和分类，表明骨折在社区中的重要性。[数据:实体 (180); 关系 (153, 1020, 1021, 1503, 1506 +more)]\"\n        },\n        {\n            \"summary\": \"多种诊断和治疗方法与骨折相关\",\n            \"explanation\": \"社区中包含多种用于诊断和治疗骨折的方法，如挤压法、呼击法、端挤、触碰、折顶等。这些方法在骨折的诊断和复位过程中起着关键作用，表明骨折在医学实践中的复杂性。[数据:关系 (1020, 1021, 1503, 1506, 1512 +more)]\"\n        },\n        {\n            \"summary\": \"骨折的分类和类型多样\",\n            \"explanation\": \"骨折可以分为多种类型，包括单纯骨折、复杂骨折、完全骨折、压缩骨折、新鲜骨折和外伤骨折等。这些分类有助于理解骨折的严重程度和治疗方法。[数据:关系 (2650, 2651, 2653, 2662, 2665 +more)]\"\n        },\n        {\n            \"summary\": \"骨折与多种医疗设备相关\",\n            \"explanation\": \"骨折的治疗涉及多种医疗设备，如外固定支架、临时外固定、平垫、多头带、骨盆帆布兜等。这些设备在骨折的固定和恢复过程中起着重要作用。[数据:关系 (2142, 2496, 1715, 4435, 4436 +more)]\"\n        },\n        {\n            \"summary\": \"骨折与身体结构和神经损伤相关\",\n            \"explanation\": \"骨折可能影响到身体的多个结构，如尺骨鹰嘴部、桡骨干、鼻烟窝、骺板软骨、腋神经、臂丛神经、腋动静脉等。严重移位的骨折可能合并神经或血管损伤，增加治疗难度。[数据:关系 (3254, 3345, 3476, 4509, 3023 +more)]\"\n        },\n        {\n            \"summary\": \"骨折的恢复过程包括多个阶段\",\n            \"explanation\": \"骨折的恢复过程分为早期、中期和后期，每个阶段都有特定的治疗方法和目的。例如，早期练功包括消瘀退肿、股四头肌舒缩和踝部伸屈活动，中期包括撑臂抬臀、伸屈髋膝、去瘀生新和和营续骨，后期则包括按摩推拿。[数据:关系 (2886, 2891, 2892, 2893, 2894 +more)]\"\n        },\n        {\n            \"summary\": \"骨折的发生与外力作用方式密切相关\",\n            \"explanation\": \"骨折的发生与多种外力作用方式有关，如成角暴力、肌肉的强力收缩、高处坠落伤等。这些外力作用方式是导致骨折的重要因素，尤其在骨骺损伤中更为常见。[数据:关系 (4515, 4516, 4517, 4505, 4506 +more)]\"\n        },\n        {\n            \"summary\": \"骺板软骨是骨折发生的主要部位\",\n            \"explanation\": \"骺板软骨是骨折发生的主要部位，尤其在Ⅴ型和Ⅵ型损伤中更为常见。其结构特点，如成熟区、肥大细胞层和软骨膜环，决定了骨折的类型和后果。[数据:关系 (4509, 4510, 4511, 4519, 4520 +more)]\"\n        },\n        {\n            \"summary\": \"骨折的并发症需要特别关注\",\n            \"explanation\": \"骨折治疗过程中可能出现多种并发症，如再移位、断端分离、脂肪栓塞综合征、血管损伤、神经损伤等。这些并发症可能影响恢复效果，需在治疗过程中加以预防和处理。[数据:关系 (3130, 3131, 3023, 3024, 3025 +more)]\"\n        },\n        {\n            \"summary\": \"年龄和健康状况是骨折的内在影响因素\",\n            \"explanation\": \"年龄和健康状况是影响骨折发生的内在因素，年老体弱者更容易发生骨折，而年轻体健者则相对不易。这一因素在骨折的诊断和治疗中具有重要意义。[数据:关系 (2636)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"掌骨与相关医疗设备及损伤\",\n    \"summary\": \"该社区以掌骨为中心，涉及多种医疗设备和损伤类型，如外展夹板、短臂石膏管形、粗铁丝、掌骨骨折、骨折端成角、第1掌骨基底部骨折脱位和陈旧性骨折脱位。这些实体之间存在紧密的治疗和康复关系，表明该社区在医学领域具有重要性。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区的重要性主要集中在医学领域，涉及掌骨损伤及其治疗方式，影响程度较低，但对相关患者康复具有实际意义。\",\n    \"findings\": [\n        {\n            \"summary\": \"掌骨是社区的核心实体\",\n            \"explanation\": \"掌骨是这个社区的中心实体，与多种医疗设备和损伤类型相关联。掌骨的结构和功能在医学领域中具有重要意义，特别是在骨折和康复治疗方面。[数据:实体 (217); 关系 (3507, 177, 3495, 3509, 3510 +more)]\"\n        },\n        {\n            \"summary\": \"外展夹板用于掌骨固定\",\n            \"explanation\": \"外展夹板是用于固定掌骨的医疗设备，主要用于上1/3骨折及第1掌骨基底部骨折的康复阶段，以防止内收成角。这种设备在治疗过程中起着关键作用。[数据:实体 (3722); 关系 (3507)]\"\n        },\n        {\n            \"summary\": \"掌骨骨折是常见损伤\",\n            \"explanation\": \"掌骨骨折是掌骨的常见损伤类型，与多种治疗方式和康复设备相关。这种损伤可能影响手部功能，需要适当的医疗干预。[数据:实体 (3721); 关系 (177)]\"\n        },\n        {\n            \"summary\": \"骨折端成角是掌骨骨折的并发症\",\n            \"explanation\": \"掌骨骨折后可能出现骨折端成角，这会影响治疗方式和康复效果。骨折端成角是掌骨损伤后需要关注的重要问题。[数据:实体 (3721); 关系 (3495)]\"\n        },\n        {\n            \"summary\": \"短臂石膏管形用于掌骨骨折脱位治疗\",\n            \"explanation\": \"短臂石膏管形用于外固定治疗掌骨骨折脱位，同时也可以用于固定腕关节于特定角度，以促进手舟骨骨折的愈合。这种设备在掌骨损伤的治疗中起着重要作用。[数据:实体 (3696); 关系 (3509)]\"\n        },\n        {\n            \"summary\": \"粗铁丝用于辅助固定掌骨\",\n            \"explanation\": \"粗铁丝是用于辅助固定掌骨的工具，特别是在使用石膏管形时，用于固定拇指皮肤牵引。这种工具在掌骨损伤的康复过程中具有实用价值。[数据:实体 (3724); 关系 (3510)]\"\n        },\n        {\n            \"summary\": \"第1掌骨基底部骨折脱位是不稳定损伤\",\n            \"explanation\": \"第1掌骨基底部骨折脱位是一种不稳定的损伤类型，容易引起短缩与移位，需要特别关注和适当的治疗方式。[数据:实体 (3728); 关系 (3519)]\"\n        },\n        {\n            \"summary\": \"陈旧性骨折脱位需要切开复位内固定\",\n            \"explanation\": \"陈旧性骨折脱位是掌骨的一种损伤类型，通常需要切开复位内固定来治疗。这种损伤类型表明了掌骨骨折的复杂性和长期影响。[数据:实体 (3729); 关系 (3520)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"内收型骨折与股骨头缺血性坏死\",\n    \"summary\": \"该社区围绕内收型骨折这一关键实体展开，涉及股骨头缺血性坏死、颈中部骨折、基底部骨折、髋关节内收和骨折端移位等实体。这些实体之间存在多种关联，尤其是内收型骨折与股骨头缺血性坏死之间的关系，表明该社区主要关注骨折类型及其并发症。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"由于内收型骨折可能导致严重的并发症如股骨头缺血性坏死，因此该社区的重要性评分为中等偏高。\",\n    \"findings\": [\n        {\n            \"summary\": \"内收型骨折是社区的核心实体\",\n            \"explanation\": \"内收型骨折是该社区的主要焦点，其描述涉及股骨颈骨折和肱骨外科颈骨折，并且与多个其他实体如股骨头缺血性坏死、髋关节内收等存在直接关系。这表明内收型骨折在社区中具有高度的重要性，并且是理解其他相关实体的关键。[数据:实体 (3382); 关系 (3603, 3604)]\"\n        },\n        {\n            \"summary\": \"内收型骨折与股骨头缺血性坏死密切相关\",\n            \"explanation\": \"内收型骨折可能导致股骨头缺血性坏死，而股骨头缺血性坏死本身又与颈中部骨折相关。这种关联表明内收型骨折可能引发一系列严重的健康后果，对患者康复和治疗方案产生重大影响。[数据:关系 (3603, 3593)]\"\n        },\n        {\n            \"summary\": \"髋关节内收是内收型骨折的诱因\",\n            \"explanation\": \"髋关节内收是内收型骨折发生时的一种动作状态，这表明在特定的运动或姿势下，骨折风险显著增加。了解这一诱因对于预防和治疗内收型骨折具有重要意义。[数据:实体 (3790); 关系 (3604)]\"\n        },\n        {\n            \"summary\": \"颈中部骨折是内收型骨折的一种类型\",\n            \"explanation\": \"颈中部骨折是股骨颈骨折的一种类型，且与内收型骨折有重叠。这种骨折类型容易导致股骨头缺血性坏死，因此在社区中具有较高的关注度。[数据:实体 (3781); 关系 (3593)]\"\n        },\n        {\n            \"summary\": \"基底部骨折与内收型骨折存在关联\",\n            \"explanation\": \"基底部骨折是股骨颈骨折的另一种形式，虽然其血运较好，但仍可能导致骨折不愈合。这种骨折类型与内收型骨折在社区中被共同提及，表明它们在医学研究和治疗中具有相似的重要性。[数据:实体 (3782); 关系 (3590)]\"\n        },\n        {\n            \"summary\": \"骨折端移位是治疗中的关键因素\",\n            \"explanation\": \"骨折端移位是掌骨骨折后可能出现的一种情况，影响治疗方式。虽然它与内收型骨折无直接关联，但其在社区中被提及，表明骨折移位是骨折治疗中的普遍关注点。[数据:实体 (3720); 关系 (3494)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"练功活动与康复训练\",\n    \"summary\": \"社区以练功活动为核心, 该活动包含多种康复训练动作, 如上肢外展、上举、内旋、外旋、前屈、后伸、环转、体后拉手和甩手。此外, 热敷是练功活动前的重要准备步骤, 用于放松肌肉和促进血液循环。这些实体之间通过其功能和作用相互关联, 构成了一个以康复训练为主的社区。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及康复训练和医疗辅助措施, 对公共健康有中等影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"练功活动是社区的核心\",\n            \"explanation\": \"练功活动是这个社区的中心实体, 它包含了多种康复训练动作, 并且与热敷等辅助治疗手段有直接联系。练功活动的描述强调了其在康复训练中的重要性, 以及它对患者恢复的潜在影响。[数据:实体 (3016), 关系 (5363, 5364, 5365, 5366, 5367 +more)]\"\n        },\n        {\n            \"summary\": \"康复训练动作是练功活动的重要组成部分\",\n            \"explanation\": \"上肢外展、上举、内旋、外旋、前屈、后伸、环转、体后拉手和甩手等动作都是练功活动的重要组成部分。这些动作的描述表明它们是针对肩周炎患者设计的康复训练方式, 并且在练功活动中具有关键作用。[数据:关系 (5363, 5364, 5365, 5366, 5367 +more)]\"\n        },\n        {\n            \"summary\": \"热敷是练功活动前的重要准备步骤\",\n            \"explanation\": \"热敷被描述为练功活动前的准备步骤, 用于放松局部肌肉和促进血液循环。这表明热敷在康复训练过程中具有辅助作用, 并且可能对患者的恢复效果产生积极影响。[数据:关系 (5579), 实体 (515)]\"\n        },\n        {\n            \"summary\": \"练功活动与气血循环有直接联系\",\n            \"explanation\": \"练功活动可以促进气血循环, 这表明它在中医或康复医学中可能具有重要的生理作用。这种联系可能对患者的整体健康和恢复过程产生积极影响。[数据:关系 (2845)]\"\n        },\n        {\n            \"summary\": \"肩周炎康复训练动作的多样性\",\n            \"explanation\": \"社区中包含了多种针对肩周炎患者的康复训练动作, 如上肢外展、内旋、外旋、前屈、后伸、环转和体后拉手。这些动作的多样性表明练功活动在肩周炎康复中具有全面性和系统性。[数据:实体 (5054, 5055, 5056, 5057, 5058 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"复位与骨折治疗社区\",\n    \"summary\": \"社区以‘复位’为核心实体，是治疗骨折及脱位的关键步骤，与多种骨折类型如尺桡骨干骨折、掌指骨骨折、跖部骨折等密切相关。此外，复位还与‘固定’和‘放射学’等实体有紧密联系，并依赖‘外固定器具’来维持关节稳定性。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"复位是骨折治疗中的关键步骤，但其影响主要局限于医疗领域，对公共安全或社会影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"复位是骨折治疗的核心步骤\",\n            \"explanation\": \"复位是治疗骨折及脱位的关键步骤，旨在将移位的骨折段或脱位的骨骼恢复到正常或近乎正常的解剖位置。这一过程对于重建骨骼的支架作用和恢复关节的正常解剖结构及功能至关重要 [数据:实体 (643)]。\"\n        },\n        {\n            \"summary\": \"复位与多种骨折类型相关\",\n            \"explanation\": \"复位与多种骨折类型如尺桡骨干骨折、掌指骨骨折、跖部骨折等密切相关。这些骨折类型都需要复位作为治疗的一部分，表明复位在骨折治疗中的普遍性和重要性 [数据:关系 (2821, 2823, 2830)]。\"\n        },\n        {\n            \"summary\": \"复位与固定是紧密相连的步骤\",\n            \"explanation\": \"复位和固定是骨折治疗中紧密相关的步骤。复位后需要固定以保持骨骼的正确位置，确保骨折能够正确愈合 [数据:关系 (2831)]。\"\n        },\n        {\n            \"summary\": \"放射学在复位过程中提供技术支持\",\n            \"explanation\": \"放射学是用于骨折复位的诊断技术支持。通过放射学检查，医疗人员可以准确评估骨折情况并指导复位操作，确保其有效性 [数据:关系 (2835)]。\"\n        },\n        {\n            \"summary\": \"外固定器具用于维持复位后的关节稳定性\",\n            \"explanation\": \"外固定器具是复位治疗中常用的设备，用于维持复位后的关节稳定性。这表明复位后需要外部支持以防止再次移位，确保治疗效果 [数据:关系 (4601)]。\"\n        },\n        {\n            \"summary\": \"不同骨折类型的愈合时间不同\",\n            \"explanation\": \"不同骨折类型的临床愈合时间存在差异，例如尺桡骨干骨折需要6～8周，掌指骨骨折需要3～4周，而跖部骨折需要4～6周。这些信息对于制定治疗计划和评估复位效果非常重要 [数据:实体 (3261, 3262, 3263)]。\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"活血散瘀汤与血瘀化热\",\n    \"summary\": \"社区以活血散瘀汤和血瘀化热为核心, 两者之间存在治疗关系, 并与五神汤等其他实体相关联。这些实体共同构成了一个与中医治疗血瘀化热相关的知识网络。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及中药方剂和病症之间的治疗关系, 对公共健康有一定影响, 但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"活血散瘀汤是治疗血瘀化热的主要方剂\",\n            \"explanation\": \"活血散瘀汤被明确用于治疗血瘀化热, 这是该社区的核心治疗关系。这种关联表明活血散瘀汤在中医治疗中具有重要地位。[数据:关系 (6880, 6669)]\"\n        },\n        {\n            \"summary\": \"血瘀化热与多个中药方剂相关\",\n            \"explanation\": \"血瘀化热这一病症与活血散瘀汤和五神汤都有治疗关系, 表明在中医中, 该病症可能需要多种方剂进行治疗或调整。[数据:关系 (6880, 6669, 6670)]\"\n        },\n        {\n            \"summary\": \"五神汤用于辅助治疗血瘀化热\",\n            \"explanation\": \"五神汤被提及用于治疗血瘀化热, 通常与活血散瘀汤合用, 这表明五神汤在中医治疗中可能起到辅助作用。[数据:关系 (6670)]\"\n        },\n        {\n            \"summary\": \"活血散瘀汤具有双重作用\",\n            \"explanation\": \"活血散瘀汤不仅用于活血散瘀, 还具有清热解毒的作用, 这表明它在治疗血瘀化热时可能同时处理多种病理因素。[数据:实体 (5938), 关系 (6880)]\"\n        },\n        {\n            \"summary\": \"血瘀化热是损伤初期的发热类型\",\n            \"explanation\": \"血瘀化热被描述为在损伤初期可能出现的发热类型, 属于需要清热凉血化瘀的病症, 这表明它可能与外伤或炎症相关。[数据:实体 (1233)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"洪脉与热证\",\n    \"summary\": \"社区以洪脉和热证为核心, 洪脉是一种脉象, 主要与热证相关, 热证又与舌色红绛和舌色鲜红等表现相关。这些实体之间存在紧密的医学关联, 有助于理解热证的诊断和表现。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及中医诊断中的脉象和症状, 对公共健康影响较小, 因此影响严重程度评级为低。\",\n    \"findings\": [\n        {\n            \"summary\": \"洪脉是热证的重要脉象\",\n            \"explanation\": \"洪脉是热证的一个关键诊断指标, 脉形如波涛汹涌, 来盛去衰, 浮大有力, 与体内热势较盛有关。这种脉象在中医中常用于判断热证的存在和严重程度。[数据:实体 (1278), 关系 (936)]\"\n        },\n        {\n            \"summary\": \"热证与多种舌色表现相关\",\n            \"explanation\": \"热证与舌色红绛和舌色鲜红等表现有直接关联, 这些症状提示体内热势较盛。热证在中医中通常与感染发热、创伤后热邪炽盛等病理状态相关。[数据:实体 (1145, 1152, 1154), 关系 (853, 854)]\"\n        },\n        {\n            \"summary\": \"舌色红绛是热证和阴虚的共同表现\",\n            \"explanation\": \"舌色红绛既是热证的表现, 也是阴虚的表现。这表明舌色红绛可能与多种病理状态相关, 需要结合其他症状进行综合判断。[数据:实体 (1152), 关系 (853, 856)]\"\n        },\n        {\n            \"summary\": \"舌色鲜红是热证的典型表现\",\n            \"explanation\": \"舌色鲜红是热证的一个典型表现, 深于正常舌色, 提示体内热势较盛。这种表现常用于中医诊断中判断热证的严重程度。[数据:实体 (1154), 关系 (854)]\"\n        },\n        {\n            \"summary\": \"阴虚与舌色红绛相关\",\n            \"explanation\": \"阴虚是舌色红绛的可能原因, 表现为体内阴液不足, 常伴有热象。这种关联在中医中用于区分热证的类型, 有助于更精确的诊断和治疗。[数据:实体 (1146), 关系 (856)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨骼病变与骨折\",\n    \"summary\": \"社区以骨骼病变为核心, 该实体是导致骨折的内在因素, 并与多种具体骨骼病变类型如先天性脆骨病、营养不良、甲状腺功能亢进和骨感染等存在联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"骨骼病变作为骨折的内在因素, 对健康和医疗系统有一定影响, 但严重性相对较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨骼病变是骨折的主要内在因素\",\n            \"explanation\": \"骨骼病变是导致骨折的内在因素, 与骨折之间存在直接关系。这种关系表明骨骼病变在骨折的发生中起着关键作用, 并且可能影响骨折的频率和严重程度。[数据:关系 (2641); 实体 (3118 +more)]\"\n        },\n        {\n            \"summary\": \"先天性脆骨病是骨骼病变的一种\",\n            \"explanation\": \"先天性脆骨病被归类为骨骼病变的一种, 这表明它在社区中是一个重要的子实体。这种分类有助于理解骨折的潜在原因, 并可能对医疗诊断和治疗方案产生影响。[数据:关系 (2643); 实体 (3129 +more)]\"\n        },\n        {\n            \"summary\": \"营养不良是骨骼病变的一种\",\n            \"explanation\": \"营养不良被归类为骨骼病变的一种, 这表明它在社区中是一个重要的子实体。这种分类有助于理解骨折的潜在原因, 并可能对医疗诊断和治疗方案产生影响。[数据:关系 (2644); 实体 (3130 +more)]\"\n        },\n        {\n            \"summary\": \"甲状腺功能亢进是骨骼病变的一种\",\n            \"explanation\": \"甲状腺功能亢进被归类为骨骼病变的一种, 这表明它在社区中是一个重要的子实体。这种分类有助于理解骨折的潜在原因, 并可能对医疗诊断和治疗方案产生影响。[数据:关系 (2646); 实体 (3131 +more)]\"\n        },\n        {\n            \"summary\": \"骨感染是骨骼病变的一种\",\n            \"explanation\": \"骨感染被归类为骨骼病变的一种, 这表明它在社区中是一个重要的子实体。这种分类有助于理解骨折的潜在原因, 并可能对医疗诊断和治疗方案产生影响。[数据:关系 (2647); 实体 (3132 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"活络关节法与关节功能障碍\",\n    \"summary\": \"社区以活络关节法为核心，这是一种用于治疗关节功能障碍的理筋手法，涉及多个关节部位，如肩、肘、膝、髋和踝。活络关节法与多种具体手法如旋转摇晃法和踩跖法相关，并且与关节功能障碍的治疗和恢复密切相关。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"活络关节法和关节功能障碍在社区中具有较高的关联性，但其影响主要集中在医疗和康复领域，对公共安全或社会秩序的潜在影响较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"活络关节法是社区的核心实体\",\n            \"explanation\": \"活络关节法是这个社区的主要焦点，它是一种用于治疗关节功能障碍的理筋手法，包括多种具体操作方式，如踩跖法和旋转摇晃法。活络关节法的描述和应用范围表明其在医学和康复领域的重要性。[数据:实体 (1954); 关系 (1551, 5118, 1612, 1615, 1616 +more)]\"\n        },\n        {\n            \"summary\": \"多个关节部位与活络关节法相关\",\n            \"explanation\": \"肩、肘、膝、髋和踝等关节部位都与活络关节法有直接联系，表明该手法广泛应用于不同关节的治疗和康复。这些关节部位的描述和功能障碍的关联性进一步说明了活络关节法的适用范围。[数据:实体 (2027, 2028, 2030, 2029, 2031); 关系 (1615, 1616, 1617, 1618, 1619 +more)]\"\n        },\n        {\n            \"summary\": \"关节功能障碍是治疗的重点\",\n            \"explanation\": \"关节功能障碍是社区中另一个关键实体，其描述表明它是多种理筋手法的治疗目标，包括活络关节法和旋转摇晃法。关节功能障碍的常见原因和治疗方法在社区中被详细讨论，突显了其在医学领域的重要性。[数据:实体 (2021); 关系 (1612, 1622)]\"\n        },\n        {\n            \"summary\": \"旋转摇晃法是活络关节法的补充\",\n            \"explanation\": \"旋转摇晃法是一种专门用于治疗关节旋转功能障碍的手法，通常与活络关节法配合使用。这种手法的操作方式和适用范围表明其在康复治疗中的重要性，并且与关节功能障碍的治疗密切相关。[数据:实体 (2020); 关系 (1612)]\"\n        },\n        {\n            \"summary\": \"踩跖法是活络关节法的一种具体手法\",\n            \"explanation\": \"踩跖法是活络关节法中的一种具体操作方式，表明该社区中存在多种细分的治疗手法。踩跖法的描述虽然简短，但其作为活络关节法的一部分，突显了该社区在医学治疗领域的专业性和多样性。[数据:实体 (4849); 关系 (5118)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"腘窝部与髋关节复位方法\",\n    \"summary\": \"社区以腘窝部为中心，与多种髋关节复位方法及解剖部位相关联，包括回旋法、俯卧下垂法和髂前上棘。这些实体之间的关系表明了腘窝部在髋关节复位过程中的重要性，以及其与相关治疗方法和解剖结构的紧密联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区的重要性评分较低，因为其主要涉及医学解剖和治疗方法，对公共安全或社会影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"腘窝部是社区的核心解剖结构\",\n            \"explanation\": \"腘窝部是这个社区的核心实体，位于膝关节后方，是重要的解剖部位。在股骨下1/3骨折时，腘窝部可能出现巨大血肿，这表明其在医学场景中的重要性。此外，腘窝部在多种髋关节复位方法中被提及，如俯卧下垂法中加压于腘窝以增加牵引力 [数据:实体 (3865), 关系 (4878)]。\"\n        },\n        {\n            \"summary\": \"回旋法与髂前上棘的关联\",\n            \"explanation\": \"回旋法是一种用于复位后脱位髋关节的治疗方法，术者通过提拉和旋转患肢完成复位。在回旋法中，髂前上棘被用作固定骨盆的部位，这表明两者之间存在直接的医学操作联系 [数据:关系 (4872)]。\"\n        },\n        {\n            \"summary\": \"髂前上棘在髋关节复位中的作用\",\n            \"explanation\": \"髂前上棘是骨盆的一部分，常用于下肢长度测量的起点标志，并在骨盆骨折的处理中具有重要作用。它在多种髋关节复位方法中被提及，包括回旋法和屈髋拔伸法，这表明其在医学操作中的关键地位 [数据:实体 (1319), 关系 (4872, 4388)]。\"\n        },\n        {\n            \"summary\": \"俯卧下垂法中腘窝部的作用\",\n            \"explanation\": \"俯卧下垂法是一种用于复位髋关节的治疗方法，患者俯卧于床缘，术者利用患肢重量向下牵引。在该方法中，腘窝部被加压以增加牵引力，这表明腘窝部在该治疗过程中具有重要作用 [数据:关系 (4878)]。\"\n        },\n        {\n            \"summary\": \"腹壁在回旋法中的辅助作用\",\n            \"explanation\": \"腹壁是腹部的肌肉和皮肤结构，用于辅助髋关节复位。在回旋法中，膝部贴近腹壁以完成复位，这表明腹壁在该治疗方法中起到辅助作用 [数据:关系 (4877), 实体 (4695)]。\"\n        },\n        {\n            \"summary\": \"撕脱性骨折与髂前上棘的联系\",\n            \"explanation\": \"撕脱性骨折常见于髂前上棘，这表明该解剖部位在某些类型的骨折中容易受到影响。这种联系对于理解髂前上棘在骨科医学中的重要性至关重要 [数据:关系 (4388)]。\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"脾破裂与腹痛\",\n    \"summary\": \"社区以脾破裂为核心, 与腹痛和脾切除术等实体有直接联系。脾破裂是一种严重的内脏损伤, 可能导致腹痛并需要脾切除术进行治疗。这些实体之间的关系突出了脾破裂的临床紧急性和重要性。\",\n    \"rating\": 8.0,\n    \"rating_explanation\": \"脾破裂是一种具有高度临床紧急性和危险性的内脏损伤, 可能导致严重后果, 因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"脾破裂是社区的核心实体\",\n            \"explanation\": \"脾破裂是这个社区的关键实体, 与腹痛和脾切除术有直接联系。脾破裂是一种严重的内脏损伤, 可能导致腹内大出血和休克, 具有较高的临床紧急性和危险性。[数据:实体 (5977), 关系 (6701, 6725 +more)]\"\n        },\n        {\n            \"summary\": \"腹痛是脾破裂的常见症状\",\n            \"explanation\": \"腹痛是脾破裂的常见症状, 尤其是在左上腹区域。这种症状是脾破裂对患者造成直接影响的体现, 也是临床诊断的重要依据。[数据:关系 (6701)]\"\n        },\n        {\n            \"summary\": \"脾切除术是脾破裂的标准治疗方法\",\n            \"explanation\": \"脾切除术是处理脾破裂的标准手术方法。这种治疗方法的使用表明脾破裂的严重性, 并突出了医疗干预在该社区中的重要性。[数据:关系 (6725)]\"\n        },\n        {\n            \"summary\": \"脾破裂与肝损伤有相似的关联\",\n            \"explanation\": \"脾破裂和肝损伤都可以导致腹痛, 这表明两者在临床表现上存在相似性。这种相似性可能对诊断和治疗造成混淆, 需要进一步区分。[数据:关系 (6696), 关系 (6701)]\"\n        },\n        {\n            \"summary\": \"腹痛是多个实体的共同症状\",\n            \"explanation\": \"腹痛是多个实体的共同症状, 包括肝损伤和脾破裂。这表明腹痛在社区中是一个重要的临床指标, 可能与多种内脏损伤相关。[数据:关系 (6696), 关系 (6701)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"胃肠与腹膜炎\",\n    \"summary\": \"社区以胃肠为核心, 胃肠破裂后内容物流入腹腔, 造成腹膜炎。腹膜炎与胃肠、胆等实体有直接联系, 这些实体共同构成了与腹腔污染和腹膜炎相关的网络。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"由于胃肠和胆的破裂可能导致严重的腹膜炎, 对患者健康构成重大威胁, 因此影响严重程度评级为较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"胃肠是社区的核心实体\",\n            \"explanation\": \"胃肠是这个社区的关键实体, 与腹膜炎有直接关系。胃肠破裂后内容物流入腹腔, 造成腹膜炎, 这表明胃肠在社区中具有中心地位。[数据:实体 (5943), 关系 (6684)]\"\n        },\n        {\n            \"summary\": \"腹膜炎是社区中的主要症状\",\n            \"explanation\": \"腹膜炎是社区中的主要症状, 与胃肠和胆的破裂有关。腹膜炎的严重性可能对患者健康造成重大影响, 并可能引发进一步的医疗问题。[数据:实体 (5944), 关系 (6684, 6685)]\"\n        },\n        {\n            \"summary\": \"胆与腹膜炎有直接联系\",\n            \"explanation\": \"胆是社区中的另一个关键实体, 与腹膜炎有直接联系。胆破裂后内容物流入腹腔, 造成腹膜炎, 这表明胆在社区中也具有重要地位。[数据:实体 (5947), 关系 (6685)]\"\n        },\n        {\n            \"summary\": \"胃肠和胆的破裂是腹膜炎的主要原因\",\n            \"explanation\": \"胃肠和胆的破裂是腹膜炎的主要原因, 这表明这两个实体在社区中具有高度的关联性。腹膜炎的严重性可能与这些破裂事件的频率和影响有关。[数据:关系 (6684, 6685)]\"\n        },\n        {\n            \"summary\": \"腹膜炎的临床表现显著\",\n            \"explanation\": \"腹膜炎的临床表现包括体温升高、脉搏加快、恶心呕吐以及持续性剧烈腹痛等, 这些症状可能对患者的健康和生活质量产生重大影响。[数据:实体 (5944)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"腹部内伤与中毒性休克\",\n    \"summary\": \"社区以腹部内伤为核心, 与闭合性损伤、细菌毒素作用、中毒性休克和动脉压下降等实体相互关联。这些实体描述了腹部内伤可能引发的严重并发症及其病理机制。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"由于腹部内伤可能引发中毒性休克等严重后果, 因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"腹部内伤是社区的核心实体\",\n            \"explanation\": \"腹部内伤是这个社区的中心实体, 与多个其他实体有直接联系。它被描述为一种在平时或战时都较常见的病症, 并且具有较高的度量值, 表明其在社区中的重要性。[数据:实体 (5942); 关系 (6676)]\"\n        },\n        {\n            \"summary\": \"闭合性损伤是腹部内伤的一种类型\",\n            \"explanation\": \"闭合性损伤是腹部内伤的一个子类, 两者之间存在明确的分类关系。这种分类有助于理解腹部内伤的不同表现形式及其潜在影响。[数据:实体 (5942); 关系 (6676)]\"\n        },\n        {\n            \"summary\": \"细菌毒素作用是中毒性休克的直接原因\",\n            \"explanation\": \"细菌毒素作用与中毒性休克之间存在直接因果关系。这种关系表明, 腹部内伤可能引发细菌毒素作用, 从而导致中毒性休克的发生。[数据:实体 (2783, 2784); 关系 (2372)]\"\n        },\n        {\n            \"summary\": \"中毒性休克表现为动脉压下降\",\n            \"explanation\": \"动脉压下降是中毒性休克的一个关键表现, 两者之间存在明确的关联。这种表现可能对患者的健康造成严重影响, 并需要紧急医疗干预。[数据:实体 (2784, 2793); 关系 (2373)]\"\n        },\n        {\n            \"summary\": \"腹部内伤可能引发严重并发症\",\n            \"explanation\": \"腹部内伤可能通过细菌毒素作用引发中毒性休克, 进而导致动脉压下降等严重症状。这种潜在的病理发展路径表明, 腹部内伤可能对患者的生命健康构成重大威胁。[数据:实体 (5942, 2783, 2784, 2793); 关系 (6676, 2372, 2373)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"脂肪栓塞综合征与相关医学实体\",\n    \"summary\": \"该社区以脂肪栓塞综合征为核心, 与创伤急救、低氧血症、骨科手术、呼吸系统症状、肺部X线和血氧分压等医学实体密切相关。这些实体共同构成了脂肪栓塞综合征的临床表现、诊断方法和诱因。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"脂肪栓塞综合征是一种严重且可能危及生命的医学状况, 其影响在创伤急救和临床诊断中具有较高重要性。\",\n    \"findings\": [\n        {\n            \"summary\": \"脂肪栓塞综合征是核心实体\",\n            \"explanation\": \"脂肪栓塞综合征是该社区的中心实体, 与多个医学相关实体存在联系。它是一种与创伤严重程度相关的症候群, 常见于严重挤压伤、粉碎性骨折或多发性骨折患者, 并且是创伤急救中讨论的重要综合征。[数据:实体 (177); 关系 (150, 2431, 2434, 2444, 2445, 2446 +more)]\"\n        },\n        {\n            \"summary\": \"低氧血症是主要症状之一\",\n            \"explanation\": \"低氧血症是脂肪栓塞综合征的主要症状之一, 与脑缺氧相关, 并且需要纠正。这表明低氧血症在诊断和治疗过程中具有重要地位。[数据:实体 (2863); 关系 (2431)]\"\n        },\n        {\n            \"summary\": \"骨科手术是常见诱因\",\n            \"explanation\": \"骨科手术是脂肪栓塞综合征的常见诱因之一。这表明在进行骨科手术时, 医务人员需要特别关注该综合征的发生风险。[数据:实体 (2888); 关系 (2434)]\"\n        },\n        {\n            \"summary\": \"呼吸系统症状是主要诊断标准\",\n            \"explanation\": \"呼吸系统症状是脂肪栓塞综合征的主要诊断标准之一, 包括进行性肺部阴影改变和血氧分压下降。这表明呼吸系统症状在临床诊断中具有关键作用。[数据:实体 (2890); 关系 (2444)]\"\n        },\n        {\n            \"summary\": \"肺部X线用于诊断\",\n            \"explanation\": \"肺部X线是用于诊断脂肪栓塞综合征的重要影像学工具, 可以显示特征性的“暴风雪状”阴影。这表明肺部X线在临床诊断中具有重要价值。[数据:实体 (2891); 关系 (2445)]\"\n        },\n        {\n            \"summary\": \"血氧分压是次要诊断标准\",\n            \"explanation\": \"血氧分压下降是脂肪栓塞综合征的次要诊断标准之一, 低于8kPa时可作为诊断依据。这表明血氧分压在评估病情严重程度时具有参考价值。[数据:实体 (2892); 关系 (2446)]\"\n        },\n        {\n            \"summary\": \"创伤急救与脂肪栓塞综合征密切相关\",\n            \"explanation\": \"脂肪栓塞综合征是创伤急救中讨论的重要综合征, 这表明它在急救医学领域具有较高的关注度和重要性。[数据:关系 (150)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"瘀攻心肺型脂肪栓塞综合征及其症状\",\n    \"summary\": \"该社区围绕瘀攻心肺型脂肪栓塞综合征展开, 该病症表现为昏迷不醒、痉挛、手足抽搐、胸胀和面黑等症状。这些症状之间存在紧密联系, 并且与瘀贯胸膈型脂肪栓塞综合征的典型症状口唇发绀也有关系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学症状和疾病分型, 对公共健康有一定影响, 但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"瘀攻心肺型脂肪栓塞综合征是核心实体\",\n            \"explanation\": \"瘀攻心肺型脂肪栓塞综合征是该社区的核心实体, 与多个症状如痉挛、昏迷不醒、手足抽搐、胸胀和面黑直接相关。这些症状的描述表明该病症具有多种临床表现, 对诊断和治疗具有重要意义。[数据:实体 (2901), 关系 (2460, 2459, 2461, 2463, 2464 +more)]\"\n        },\n        {\n            \"summary\": \"瘀贯胸膈型脂肪栓塞综合征与瘀攻心肺型有联系\",\n            \"explanation\": \"瘀贯胸膈型脂肪栓塞综合征与瘀攻心肺型脂肪栓塞综合征之间存在联系, 其典型症状之一是口唇发绀。这种联系表明两种病症可能在病理机制或临床表现上存在相似性或关联性。[数据:实体 (2915), 关系 (2457)]\"\n        },\n        {\n            \"summary\": \"痉挛是瘀攻心肺型脂肪栓塞综合征的典型症状\",\n            \"explanation\": \"痉挛是瘀攻心肺型脂肪栓塞综合征的典型症状之一, 与血管受损后可能引发的组织缺血和水肿有关。这一症状的出现可能对患者的日常生活和健康状况造成显著影响。[数据:实体 (2918), 关系 (2460)]\"\n        },\n        {\n            \"summary\": \"昏迷不醒是严重症状之一\",\n            \"explanation\": \"昏迷不醒是瘀攻心肺型脂肪栓塞综合征的典型症状之一, 表明该病症可能对中枢神经系统造成严重影响。这一症状的出现可能需要紧急医疗干预。[数据:实体 (2917), 关系 (2459)]\"\n        },\n        {\n            \"summary\": \"手足抽搐和胸胀是相关症状\",\n            \"explanation\": \"手足抽搐和胸胀是瘀攻心肺型脂肪栓塞综合征的典型症状, 两者都与该病症的临床表现密切相关。这些症状可能提示患者存在严重的内脏或神经系统的损伤。[数据:实体 (2921, 2919), 关系 (2461, 2463)]\"\n        },\n        {\n            \"summary\": \"面黑是瘀攻心肺型脂肪栓塞综合征的典型症状\",\n            \"explanation\": \"面黑是瘀攻心肺型脂肪栓塞综合征的典型症状之一, 与瘀血阻滞或内脏功能受损有关。这一症状可能对患者的外貌和心理状态产生影响。[数据:实体 (2920), 关系 (2464)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"关节囊与相关解剖结构\",\n    \"summary\": \"社区以关节囊为核心实体，其与脱位、骺外动脉、上干骺端动脉、下干骺端动脉等实体存在紧密联系。关节囊是维持关节稳定的重要结构，其损伤可能引发多种脱位和血运问题，同时与多个小动脉分支相关联，表明其在解剖和病理学中的重要性。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"关节囊在多种脱位和病理情况下可能受损，但其影响主要局限于医学和解剖学领域，对公共安全或社会影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"关节囊是社区的核心实体\",\n            \"explanation\": \"关节囊是这个社区的关键实体，其描述涵盖了多种关节的结构和功能，包括髋关节、膝关节、肘关节和颞下颌关节。它在维持关节稳定性和血运方面起着重要作用，是其他实体如脱位和小动脉分支的中心关联点。[数据:实体 (874); 关系 (4552, 3585, 3586, 3587 +more)]\"\n        },\n        {\n            \"summary\": \"关节囊与脱位密切相关\",\n            \"explanation\": \"关节囊的紧张程度可以维持脱位关节的稳定，这表明其在脱位的病理和治疗中具有重要作用。脱位可能发生在多个关节，如月骨脱位、肘关节侧方脱位、膝关节脱位等，而关节囊的损伤可能进一步加重这些情况。[数据:关系 (4552)]\"\n        },\n        {\n            \"summary\": \"关节囊与小动脉分支有直接联系\",\n            \"explanation\": \"关节囊与多个小动脉分支存在直接联系，包括骺外动脉、上干骺端动脉和下干骺端动脉。这些动脉是股骨头和股骨颈血运的主要来源，关节囊的损伤可能影响这些动脉的功能，进而导致血供问题。[数据:关系 (3585, 3586, 3587)]\"\n        },\n        {\n            \"summary\": \"关节囊的结构在不同关节中有所差异\",\n            \"explanation\": \"关节囊的结构和功能在不同关节中存在差异，例如在髋关节中，关节囊起于髋臼边缘，前面止于转子间线，后面止于股骨颈的中外1/3交界处，由浅层纵行纤维和深层横行纤维构成。而在膝关节中，关节囊起到连接和加固作用，可能在脱位时被卷入关节间或因暴力导致破裂。[数据:实体 (874)]\"\n        },\n        {\n            \"summary\": \"关节囊损伤可能导致血肿和关节僵硬\",\n            \"explanation\": \"关节囊可能在多种脱位情况下受到损伤，如月骨脱位、肘关节侧方脱位、膝关节脱位等，可能破裂并形成血肿，甚至发生血肿机化。此外，关节囊的粘连或挛缩可能影响关节活动，导致骨折端与肌腱粘连或关节僵硬。[数据:实体 (874)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"压痛与营卫气滞\",\n    \"summary\": \"社区以压痛和营卫气滞为核心实体, 压痛是一种常见的损伤相关症状, 而营卫气滞是导致皮肉疼痛的病机。两者之间存在直接关系, 表明压痛可能是由营卫气滞引起的。\",\n    \"rating\": 2.0,\n    \"rating_explanation\": \"社区涉及的是医学相关概念, 对公共健康或社会影响较小, 因此影响严重程度评级较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"压痛是多种损伤和疾病的常见症状\",\n            \"explanation\": \"压痛在多种损伤和疾病中广泛出现, 包括骨折、扭挫伤、筋伤及炎症等。它在不同部位具有特异性, 例如在肝脾损伤时, 右上腹和左上腹压痛最为显著。压痛的出现可以帮助医生鉴别诊断不同疾病。[数据:实体 (1026)]\"\n        },\n        {\n            \"summary\": \"营卫气滞是导致皮肉疼痛的病机\",\n            \"explanation\": \"营卫气滞是中医理论中导致皮肉疼痛的重要病机。它与压痛直接相关, 表明压痛可能是由营卫气滞引起的。这一病机在医学诊断和治疗中具有重要意义。[数据:实体 (1054)]\"\n        },\n        {\n            \"summary\": \"压痛与营卫气滞之间存在直接关系\",\n            \"explanation\": \"压痛和营卫气滞之间存在直接关系, 营卫气滞被认为是导致压痛的原因之一。这种关系对于理解压痛的病理机制和治疗方案至关重要。[数据:关系 (752)]\"\n        },\n        {\n            \"summary\": \"压痛在不同部位具有特异性\",\n            \"explanation\": \"压痛在不同部位具有特异性, 例如在小腿间隔区综合征中, 压痛出现在不同间隔区；在肩周炎中, 压痛出现在肩峰下滑囊、结节间沟等处。这种特异性有助于医生进行定位诊断。[数据:实体 (1026)]\"\n        },\n        {\n            \"summary\": \"压痛可作为骨折或筋伤的鉴别依据\",\n            \"explanation\": \"压痛可以作为鉴别骨折或筋伤的重要依据, 包括直接压痛和间接压痛。在骨折迟缓愈合时, 患处仍可能有压痛现象。这表明压痛在临床诊断中具有重要价值。[数据:实体 (1026)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"内出血及相关治疗与后果\",\n    \"summary\": \"该社区以'内出血'为核心实体, 与多种治疗手段和潜在后果相关联, 包括输血、输液、小蓟饮子、黄土汤、休克、脑衰竭和心衰竭。这些实体之间的关系表明内出血是一种严重的医疗状况, 需要多种治疗方式, 并可能导致严重后果。\",\n    \"rating\": 7.5,\n    \"rating_explanation\": \"内出血是一种严重的医疗状况, 可能导致休克、脑衰竭和心衰竭等严重后果, 因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"内出血是社区的核心实体\",\n            \"explanation\": \"内出血是这个社区的关键实体, 与多个治疗手段和后果相关联。它在实体列表中具有最高的度数, 表明其在社区中的重要性。内出血的严重性及其与多种治疗和后果的联系, 使其成为整个社区的中心。[数据:实体 (5692); 关系 (6389, 6384, 6386, 6383, 6387 +more)]\"\n        },\n        {\n            \"summary\": \"输血和输液是治疗内出血的主要手段\",\n            \"explanation\": \"输血和输液是治疗内出血的主要医疗手段。输血用于恢复血容量和改善患者病情, 而输液则用于防治休克和补充血容量。这两种方法在社区中具有较高的关联度, 表明它们在治疗内出血中的重要性。[数据:关系 (6384, 6386)]\"\n        },\n        {\n            \"summary\": \"小蓟饮子和黄土汤是传统治疗方法\",\n            \"explanation\": \"小蓟饮子和黄土汤是用于治疗内出血的传统方法。小蓟饮子以凉血止血为主, 而黄土汤以温中止血为主。这两种方法在社区中具有相同的关联度, 表明它们在治疗内出血中可能具有相似的重要性。[数据:关系 (6383, 6387)]\"\n        },\n        {\n            \"summary\": \"内出血可能导致休克、脑衰竭和心衰竭\",\n            \"explanation\": \"内出血可能导致休克、脑衰竭和心衰竭等严重后果。这些后果在社区中与内出血有直接关联, 表明内出血的潜在危害性。休克、脑衰竭和心衰竭都是需要紧急处理的医疗状况, 这进一步突显了内出血的严重性。[数据:关系 (6389, 6390, 6391)]\"\n        },\n        {\n            \"summary\": \"加压输注法用于输血以恢复血容量\",\n            \"explanation\": \"加压输注法是一种用于输血的技术, 主要目的是在较短时间内恢复血容量。这种技术与输血有直接关联, 表明其在治疗内出血中的重要性。加压输注法的应用可能影响治疗效果和患者预后。[数据:关系 (6385)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"休克及其相关病理现象\",\n    \"summary\": \"社区以休克为中心，休克与多种病理现象和治疗方式相关，包括电解质紊乱、末梢循环障碍、组织水肿、酸碱平衡紊乱、弥散性血管内凝血、血容量不足等。此外，休克还与治疗药物如右旋糖酐和复方氯化钠相关，这些实体共同构成了休克病理和治疗的复杂网络。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"休克是一种严重的病理状态，可能引发多种并发症，对患者生命健康构成重大威胁，因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"休克是社区的核心实体\",\n            \"explanation\": \"休克是这个社区的中心实体，与多个病理现象和治疗方式相关，包括电解质紊乱、末梢循环障碍、组织水肿、酸碱平衡紊乱、弥散性血管内凝血、血容量不足等。这些关系表明休克在医学领域中的重要性及其对患者健康的潜在影响。[数据:实体 (983); 关系 (2364, 2360, 2362, 2363, 2366 +more)]\"\n        },\n        {\n            \"summary\": \"休克可能引发电解质紊乱\",\n            \"explanation\": \"电解质紊乱是休克的一个严重后果，表现为高钾、低钠等异常，常伴随尿中出现肌红蛋白。这种紊乱可能进一步加重休克的程度，形成恶性循环。[数据:实体 (2782); 关系 (2364)]\"\n        },\n        {\n            \"summary\": \"休克的多个表现症状\",\n            \"explanation\": \"休克有多种表现症状，包括肤色苍白、心烦口渴、胸闷呕恶、脉数尿少等。这些症状是休克病理过程中的重要指标，有助于临床诊断和治疗。[数据:实体 (2463, 2464, 2465, 2466); 关系 (2094, 2096, 2097, 2098 +more)]\"\n        },\n        {\n            \"summary\": \"末梢循环障碍是休克的重要表现\",\n            \"explanation\": \"末梢循环障碍是休克的一个关键表现，可能导致器官缺血缺氧和功能不全。这种现象在休克的病理过程中具有重要地位，是评估病情严重程度的重要依据。[数据:实体 (2780); 关系 (2360)]\"\n        },\n        {\n            \"summary\": \"右旋糖酐和复方氯化钠用于防治休克\",\n            \"explanation\": \"右旋糖酐和复方氯化钠是防治休克的常用治疗药物。右旋糖酐通过提高血浆胶体渗透压改善循环，而复方氯化钠则用于补充体液和电解质，两者在休克治疗中具有重要作用。[数据:实体 (2832, 5989); 关系 (6705, 6706)]\"\n        },\n        {\n            \"summary\": \"血容量不足是休克的重要特征\",\n            \"explanation\": \"休克中常伴随血容量不足，这需要通过快速补充血容量来纠正。血容量的不足是休克病理过程中的一个关键因素，直接影响微循环和器官供血。[数据:实体 (2869); 关系 (4428)]\"\n        },\n        {\n            \"summary\": \"酸碱平衡紊乱加重休克程度\",\n            \"explanation\": \"酸碱平衡紊乱是组织细胞坏死的后果，可进一步加重休克的程度。这种紊乱可能影响多个器官系统的功能，使休克的治疗更加复杂。[数据:实体 (2781); 关系 (2363)]\"\n        },\n        {\n            \"summary\": \"弥散性血管内凝血是休克晚期的严重并发症\",\n            \"explanation\": \"弥散性血管内凝血是休克晚期可能出现的病理现象，使微循环衰竭更加严重。这种并发症可能显著增加休克患者的死亡风险，因此在治疗中需要特别关注。[数据:实体 (2785); 关系 (2366)]\"\n        },\n        {\n            \"summary\": \"血浆渗出是休克病理过程中的表现\",\n            \"explanation\": \"血浆渗出是由于毛细血管破裂和通透性增高导致的，是休克病理过程中的一个表现。这种现象可能进一步影响局部血液循环，加重休克的病理过程。[数据:实体 (2791); 关系 (2368)]\"\n        },\n        {\n            \"summary\": \"辨证施治是休克治疗的重要方法\",\n            \"explanation\": \"辨证施治是根据患者具体情况实施的个体化治疗方案，是防治休克的一种重要方式。这种方法强调根据患者的具体病理和症状进行针对性治疗，有助于提高休克治疗的效果。[数据:实体 (2527); 关系 (2158)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"创伤及其相关并发症\",\n    \"summary\": \"社区以‘创伤’为中心, 与‘创伤昏迷’和‘多器官衰竭’等严重并发症相关联。这些实体之间的关系表明创伤可能引发危急重症和严重健康问题, 对医疗系统和患者健康构成重要影响。\",\n    \"rating\": 8.0,\n    \"rating_explanation\": \"创伤及其相关并发症如创伤昏迷和多器官衰竭具有高度医疗风险和严重性, 因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"创伤是社区的核心实体\",\n            \"explanation\": \"创伤是这个社区的中心实体, 与多个严重并发症相关联, 包括休克、创伤昏迷和多器官衰竭。这表明创伤在医疗领域中是一个关键问题, 可能对患者健康和医疗资源造成重大影响。[数据:实体 (786); 关系 (2029, 2030, 2031 +more)]\"\n        },\n        {\n            \"summary\": \"创伤昏迷是创伤后的重要并发症\",\n            \"explanation\": \"创伤昏迷是创伤后可能出现的危急重症, 与创伤有直接关系。这种并发症可能对患者的生命安全构成威胁, 并需要紧急医疗干预。[数据:实体 (2392); 关系 (2030)]\"\n        },\n        {\n            \"summary\": \"多器官衰竭是创伤后严重并发症\",\n            \"explanation\": \"多器官衰竭是创伤后可能出现的严重并发症, 与创伤有直接关系。这种并发症通常表明创伤的严重程度较高, 并可能导致长期健康问题或死亡。[数据:实体 (2393); 关系 (2031)]\"\n        },\n        {\n            \"summary\": \"休克是创伤后的重要并发症\",\n            \"explanation\": \"休克是创伤后可能出现的严重并发症, 与创伤有直接关系。休克是一种危及生命的状况, 需要迅速识别和治疗, 否则可能导致器官损伤或死亡。[数据:关系 (2029)]\"\n        },\n        {\n            \"summary\": \"创伤相关并发症具有高度医疗风险\",\n            \"explanation\": \"创伤可能引发多种严重并发症, 包括休克、创伤昏迷和多器官衰竭。这些并发症的高风险性质表明创伤事件可能对医疗系统造成显著负担, 并对患者预后产生重大影响。[数据:关系 (2029, 2030, 2031)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"组织细胞变性坏死与器官功能不全\",\n    \"summary\": \"社区以组织细胞变性坏死为中心, 该实体是器官功能不全的原因。这两个实体之间存在直接的因果关系, 表明了组织细胞变性坏死在社区中的核心地位及其对器官功能不全的影响。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"由于组织细胞变性坏死是器官功能不全的直接原因, 因此影响严重程度评级为中等偏低。\",\n    \"findings\": [\n        {\n            \"summary\": \"组织细胞变性坏死是核心实体\",\n            \"explanation\": \"组织细胞变性坏死是这个社区的关键实体, 它的描述表明它是由于末梢循环障碍导致的器官缺血缺氧的结果。该实体在社区中具有较高的重要性, 并且与另一个实体器官功能不全有直接联系。[数据:实体 (2777 +more)]\"\n        },\n        {\n            \"summary\": \"器官功能不全是由组织细胞变性坏死引起的\",\n            \"explanation\": \"器官功能不全是这个社区的另一个关键实体, 它的描述表明它是组织细胞变性坏死的结果。这种因果关系表明组织细胞变性坏死可能对器官功能不全的产生和发展起到重要作用。[数据:实体 (2778), 关系 (2370)]\"\n        },\n        {\n            \"summary\": \"两者之间存在直接因果关系\",\n            \"explanation\": \"组织细胞变性坏死和器官功能不全之间存在直接的因果关系, 这表明组织细胞变性坏死可能是器官功能不全的主要诱因。这种关系对于理解社区的动态和潜在健康风险至关重要。[数据:关系 (2370)]\"\n        },\n        {\n            \"summary\": \"组织细胞变性坏死的描述强调其病理机制\",\n            \"explanation\": \"组织细胞变性坏死的描述明确指出其是由于末梢循环障碍导致的器官缺血缺氧的结果。这表明该实体在病理学和医学领域具有重要意义, 并可能与多种疾病或健康问题相关。[数据:实体 (2777)]\"\n        },\n        {\n            \"summary\": \"器官功能不全的描述强调其依赖性\",\n            \"explanation\": \"器官功能不全的描述表明它是由组织细胞变性坏死引起的, 这种依赖性突出了组织细胞变性坏死在社区中的主导地位。理解这种依赖性对于评估社区的潜在影响和重要性至关重要。[数据:实体 (2778)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"创伤性休克与颅内压增高\",\n    \"summary\": \"社区以创伤性休克为核心, 与血压、意识、脉搏、呼吸等生命体征密切相关, 并与颅内压增高存在联系。这些实体共同描述了休克和颅内压增高的临床表现及其影响。\",\n    \"rating\": 7.5,\n    \"rating_explanation\": \"由于创伤性休克和颅内压增高都与严重的生理变化和潜在的生命威胁有关, 因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"创伤性休克是社区的核心实体\",\n            \"explanation\": \"创伤性休克是这个社区的关键实体, 与多个生命体征如血压、意识、脉搏和呼吸存在直接关系。这些关系表明创伤性休克在临床表现和诊断中具有重要地位。[数据:关系 (2385, 2382, 2384, 2386 +more)]\"\n        },\n        {\n            \"summary\": \"血压是休克的重要指标\",\n            \"explanation\": \"血压是创伤性休克的临床表现之一, 并且在休克状态下可能显著降低。这表明血压的变化对于诊断和监测休克状态至关重要。[数据:实体 (2798), 关系 (2385)]\"\n        },\n        {\n            \"summary\": \"意识变化是休克的常见表现\",\n            \"explanation\": \"意识变化是创伤性休克的临床表现之一, 患者可能出现意识淡漠、模糊或昏迷。这表明休克可能对中枢神经系统产生严重影响。[数据:实体 (2796), 关系 (2382)]\"\n        },\n        {\n            \"summary\": \"颅内压增高与休克存在关联\",\n            \"explanation\": \"颅内压增高与创伤性休克存在联系, 并且可能导致意识变化和瞳孔反应异常。这表明休克可能引发颅内压增高的情况, 或者两者可能同时发生。[数据:实体 (5762), 关系 (6499, 6500)]\"\n        },\n        {\n            \"summary\": \"瞳孔变化是颅内压增高的表现\",\n            \"explanation\": \"颅内压增高可能导致瞳孔对光反应消失和散大, 这是重要的神经系统体征。这种变化可能表明严重的颅内病变, 需要紧急医疗干预。[数据:实体 (5786), 关系 (6500)]\"\n        },\n        {\n            \"summary\": \"血管收缩剂用于改善休克状态\",\n            \"explanation\": \"血管收缩剂如去甲肾上腺素、甲氧明和间羟胺被用于升高血压, 以改善休克中的低血流量状态。这表明休克的治疗可能涉及使用这些药物来稳定生命体征。[数据:实体 (2842), 关系 (2413)]\"\n        },\n        {\n            \"summary\": \"颅内压增高可能由脑挫裂伤引起\",\n            \"explanation\": \"颅内压增高是脑挫裂伤后的常见症状, 可能由脑组织瘀血及轻度缺氧引起。这表明颅内压增高可能与创伤性休克有共同的病因或病理机制。[数据:实体 (5762)]\"\n        },\n        {\n            \"summary\": \"颅内压增高可能在24小时内达到高峰\",\n            \"explanation\": \"颅内压增高在脑水肿或颅内血肿的情况下可能在24小时内达到高峰。这表明在创伤性休克的背景下, 颅内压增高的发展可能迅速, 需要密切监测。[数据:实体 (5762)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"瘀滞经络与圣愈汤\",\n    \"summary\": \"社区以瘀滞经络为中心, 这是中医辨证分型中的一种病症, 与小腿间隔区综合征和圣愈汤等实体有直接联系。圣愈汤是治疗瘀滞经络的常用方剂, 且在中医治疗中具有重要地位。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"由于瘀滞经络是一种中医病症, 且圣愈汤是其治疗方法, 社区的影响严重程度较低, 主要涉及医学领域。\",\n    \"findings\": [\n        {\n            \"summary\": \"瘀滞经络是核心病症\",\n            \"explanation\": \"瘀滞经络是这个社区的核心实体, 是中医辨证分型中的一种病症, 常见于筋膜间隔区综合征。它与多个实体相关, 包括小腿间隔区综合征和圣愈汤, 表明其在中医治疗体系中的重要性。[数据:实体 (2980); 关系 (2551, 2563 +more)]\"\n        },\n        {\n            \"summary\": \"圣愈汤是治疗瘀滞经络的重要方剂\",\n            \"explanation\": \"圣愈汤是治疗瘀滞经络的常用方剂, 具有补养气血的作用, 并且在中医治疗中常与桃红四物汤合方化裁使用。这表明圣愈汤在治疗瘀滞经络方面具有重要地位。[数据:实体 (2609); 关系 (2563)]\"\n        },\n        {\n            \"summary\": \"瘀滞经络与小腿间隔区综合征相关\",\n            \"explanation\": \"瘀滞经络是小腿间隔区综合征的辨证分型之一, 这表明两者之间存在直接的医学关联。这种关联对于理解瘀滞经络的临床表现和治疗方案具有重要意义。[数据:关系 (2551)]\"\n        },\n        {\n            \"summary\": \"瘀滞经络的治疗以活血化瘀为主\",\n            \"explanation\": \"瘀滞经络的治疗原则是活血化瘀、疏经通络, 这是中医治疗该病症的主要方法。这种治疗方法与圣愈汤等方剂的应用密切相关。[数据:实体 (2980); 关系 (2563)]\"\n        },\n        {\n            \"summary\": \"圣愈汤在中医治疗中具有多重用途\",\n            \"explanation\": \"圣愈汤不仅用于治疗瘀滞经络, 还是调身通痹方的组成部分, 表明其在中医治疗体系中具有广泛的应用。这种多重用途进一步强调了圣愈汤在社区中的重要性。[数据:实体 (2609); 关系 (2563)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"护理、心理咨询和饮食调养\",\n    \"summary\": \"社区以护理为核心, 与心理咨询和饮食调养密切相关, 这些实体共同构成了脑震荡治疗的重要环节。护理是主要的上层实体, 而心理咨询和饮食调养是其下层组成部分。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"由于护理、心理咨询和饮食调养主要与脑震荡治疗相关, 对社区的影响较为有限。\",\n    \"findings\": [\n        {\n            \"summary\": \"护理是社区的核心实体\",\n            \"explanation\": \"护理是这个社区的关键实体, 与脑震荡治疗密切相关。它在社区中具有较高的重要性, 并且是其他实体如心理咨询和饮食调养的上层概念。护理的定义和作用是整个社区的基础。[数据:实体 (5758); 关系 (6466, 6467)]\"\n        },\n        {\n            \"summary\": \"心理咨询是护理的重要组成部分\",\n            \"explanation\": \"心理咨询是护理的一部分, 在脑震荡治疗中起到重要作用。这种关系表明, 心理护理是整体治疗方案中不可或缺的一环。心理咨询的实施可能对患者的康复过程产生积极影响。[数据:实体 (5759); 关系 (6466)]\"\n        },\n        {\n            \"summary\": \"饮食调养是护理的重要组成部分\",\n            \"explanation\": \"饮食调养是护理的一部分, 在脑震荡治疗中起到重要作用。这种关系表明, 营养护理是整体治疗方案中不可或缺的一环。饮食调养的实施可能对患者的康复过程产生积极影响。[数据:实体 (5760); 关系 (6467)]\"\n        },\n        {\n            \"summary\": \"护理与心理咨询和饮食调养的联系\",\n            \"explanation\": \"护理与心理咨询和饮食调养之间存在直接联系, 这表明护理是一个综合性的治疗环节, 包含多个子领域。这些联系对于理解脑震荡治疗的整体结构和流程至关重要。[数据:关系 (6466, 6467)]\"\n        },\n        {\n            \"summary\": \"社区实体的关联性较低\",\n            \"explanation\": \"社区中的实体之间关联性较低, 护理与心理咨询和饮食调养之间的联系仅限于其作为组成部分的定义。这种较低的关联性表明社区的结构较为简单, 且实体之间的互动有限。[数据:实体 (5758, 5759, 5760); 关系 (6466, 6467)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 15 column 10 (char 718)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"瘀阻肺络与中医治疗\",\n    \"summary\": \"该社区围绕瘀阻肺络这一中医辨证分型展开，涉及脂肪栓塞综合征的典型症状如胸部疼痛、咳痰带血和皮肤瘀血点，以及相关的治疗手段如化痰通络汤和针灸穴位如血海、足三里和丰隆。这些实体之间通过治疗和症状表现建立了紧密联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及中医治疗和相关症状，其影响严重程度较低，因为主要是医学领域内的信息，不涉及直接的社会或法律风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"瘀阻肺络是核心实体\",\n            \"explanation\": \"瘀阻肺络是该社区的核心实体，是脂肪栓塞综合征的一种中医辨证分型，表现为胸部疼痛、咳痰带血和皮肤瘀血点。这一实体在社区中起到了连接其他实体的关键作用，如症状和治疗方法。[数据:实体 (2899), 关系 (2452, 2453, 2454, 2475, 2４83 +more)]\"\n        },\n        {\n            \"summary\": \"胸部疼痛、咳痰带血和皮肤瘀血点是典型症状\",\n            \"__explanation\": \"瘀阻肺络型脂肪栓塞综合征的典型症状包括胸部疼痛、咳痰带血和皮肤瘀血点。这些症状在中医辨证中具有重要意义，有助于诊断和治疗。[数据:实体 (2909, 2910, 2911), 关系 (2452, 2453, 2454)]\"\n        },\n        {{\n            \"summary\": \"化痰通络汤用于治疗瘀阻肺络\",\n            \"explanation\": \"化痰通络汤是中医治疗瘀阻肺络型脂肪栓塞综合征的常用方剂，具有活血化瘀、化痰通络的作用。这一治疗方法在社区中被明确提及，表明其在治疗中的重要性。[数据:关系 (2475)]\"\n        } ,\n        {\n            \"summary\": \"血海是重要穴位\",\n            \"explanation\": \"血海是中医针灸治疗中常用的主穴，主要用于化瘀活血、通络化痰和调整阴阳，常用于治疗腰腿痛以及下肢筋膜间隔区综合征。这一穴位在社区中被提及，表明其在治疗瘀阻肺络型脂肪栓塞综合征中的潜在作用。[数据:实体 (2855)，关系 (2419)]\"\n        },\n        {\n            \"summary\": \"足三里是广泛应用的穴位\",\n            \"explanation\": \"足三里是中医针灸治疗中常用的主穴，广泛应用于多种疾病的治疗，包括腰腿痛、膝关节损伤、下肢筋膜间隔区综合征、下肢神经损伤以及踝关节扭挫伤等。此外，该穴位也常用于治疗呕吐、眩晕，特别是在脑震荡眩晕期的针灸治疗中具有重要作用。[数据:实体 (2696), 关系 (23２6)]\"\n        },\n        {\n            \"summary\": \"丰隆用于治疗瘀阻肺络\",\n            \"explanation\": \"丰隆是中医治疗下肢筋膜间隔区综合征和腓总神经损伤时常用的穴位，也是针灸治疗中常用的主穴，具有化瘀活血、通络化痰、调整阴阳的作用。该穴位与瘀阻肺络之间的关系表明其在治疗中的重要性。[数据:实体 (2725), 关系 (2483)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"筋膜、腰肌与相关运动练习\",\n    \"summary\": \"该社区围绕筋膜和腰肌等解剖结构展开, 并涉及前屈后伸和前伸后缩等运动练习。这些实体之间存在多种关系, 主要集中在运动练习对筋膜和腰肌的影响以及相关医疗操作如清创术的关联。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学和康复领域, 对公共健康有一定影响, 但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"筋膜是社区的核心实体之一\",\n            \"explanation\": \"筋膜是该社区的关键解剖结构, 与清创术和腰肌等实体有直接关系。筋膜在骨折治疗中起重要作用, 且在腰部区域容易受损。[数据:实体 (2482); 关系 (2108, 5880 +more)]\"\n        },\n        {\n            \"summary\": \"腰肌在社区中具有重要关联性\",\n            \"explanation\": \"腰肌与筋膜之间存在损伤关联, 并且与前屈后伸等运动练习有关。这种关联表明腰肌的健康状况可能影响到筋膜的功能和整体康复过程。[数据:实体 (2319); 关系 (1967, 5880 +more)]\"\n        },\n        {\n            \"summary\": \"前屈后伸是针对腰背部的重要运动练习\",\n            \"explanation\": \"前屈后伸是一种用于颈项部和腰背部的练功动作, 与腰肌的放松密切相关。这种练习可能对筋膜和腰肌的健康产生积极影响。[数据:实体 (2294); 关系 (1967, 1966 +more)]\"\n        },\n        {\n            \"summary\": \"前伸后缩与前屈后伸是相似的运动练习\",\n            \"explanation\": \"前伸后缩和前屈后伸都是针对腰背部的运动练习, 两者在功能和目的上具有相似性。这种相似性可能表明它们在康复训练中可以互为补充。[数据:实体 (2307); 关系 (1966)]\"\n        },\n        {\n            \"summary\": \"清创术与筋膜有直接操作关联\",\n            \"explanation\": \"清创术中需要切开筋膜以充分显露创腔和减压, 这表明筋膜在某些医疗操作中具有关键作用。这种操作可能对患者的康复过程产生重要影响。[数据:关系 (2281)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"指骨骨折与指骨部分\",\n    \"summary\": \"社区以指骨骨折为中心, 与近节指骨、中节指骨和末节指骨等实体相关联。这些实体之间的关系表明指骨骨折可以发生在指骨的不同部分, 并且与直接暴力等外部因素相关。\",\n    \"rating\": 2.0,\n    \"rating_explanation\": \"该社区涉及医学或解剖学领域, 对公共健康或安全的影响较小, 因此影响严重程度评级为低。\",\n    \"findings\": [\n        {\n            \"summary\": \"指骨骨折是社区的核心实体\",\n            \"explanation\": \"指骨骨折是这个社区的关键实体, 与多个其他实体有直接关系。它在社区中具有较高的重要性, 与直接暴力、近节指骨、中节指骨和末节指骨等实体相关联。[数据:实体 (267); 关系 (3534, 3535, 3536, 3537 +more)]\"\n        },\n        {\n            \"summary\": \"指骨骨折可发生在近节指骨\",\n            \"explanation\": \"指骨骨折与近节指骨之间存在直接关系, 表明近节指骨是骨折的常见部位。这种关联对于理解指骨骨折的解剖学分布和可能的成因非常重要。[数据:关系 (3535)]\"\n        },\n        {\n            \"summary\": \"指骨骨折可发生在中节指骨\",\n            \"explanation\": \"指骨骨折与中节指骨之间存在直接关系, 表明中节指骨也是骨折的常见部位。这种信息对于医学诊断和治疗方案的制定具有重要意义。[数据:关系 (3536)]\"\n        },\n        {\n            \"summary\": \"指骨骨折可发生在末节指骨\",\n            \"explanation\": \"指骨骨折与末节指骨之间存在直接关系, 表明末节指骨同样可能是骨折的部位。这种信息有助于进一步了解指骨骨折的分布情况和相关风险因素。[数据:关系 (3537)]\"\n        },\n        {\n            \"summary\": \"直接暴力是导致指骨骨折的主要原因\",\n            \"explanation\": \"直接暴力与指骨骨折之间存在直接关系, 并且其关联度较高。这表明在医学或解剖学背景下, 暴力可能是导致指骨骨折的常见外部因素。[数据:关系 (3534)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"直接暴力与相关伤害\",\n    \"summary\": \"社区以直接暴力为核心, 与多种伤害形式如尺桡骨干双骨折、骨折片、头部碰撞和子弹等密切相关。这些实体之间的关系表明直接暴力是导致多种身体损伤的重要原因。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"直接暴力作为导致多种严重身体损伤的原因, 对公共健康和安全具有中等程度的影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"直接暴力是核心实体\",\n            \"explanation\": \"直接暴力是这个社区的中心实体, 与多种伤害形式相关联, 是导致骨折和脑损伤的重要原因。直接暴力的定义和影响在社区中具有主导地位。[数据:实体 (3112); 关系 (3312, 6461, 6459, 6460 +more)]\"\n        },\n        {\n            \"summary\": \"尺桡骨干双骨折与直接暴力的关系\",\n            \"explanation\": \"尺桡骨干双骨折是直接暴力导致的一种具体伤害形式。这种关系表明直接暴力可能在事故或冲突中造成严重的身体损伤。[数据:关系 (3312)]\"\n        },\n        {\n            \"summary\": \"骨折片是直接暴力的一种方式\",\n            \"explanation\": \"骨折片被描述为直接暴力的一种方式, 并且可能影响复位过程。这表明直接暴力不仅是一个原因, 还可能以具体形式表现出来。[数据:关系 (6461)]\"\n        },\n        {\n            \"summary\": \"头部碰撞是直接暴力的一种方式\",\n            \"explanation\": \"头部碰撞被明确归类为直接暴力的一种方式, 并且是导致脑损伤的常见原因。这种关系突出了直接暴力在造成严重伤害方面的潜在风险。[数据:关系 (6459)]\"\n        },\n        {\n            \"summary\": \"子弹是直接暴力的一种方式\",\n            \"explanation\": \"子弹被描述为直接暴力的一种方式, 并且是导致脑损伤的常见原因。这表明直接暴力可能涉及武器使用, 增加了其对公共安全的潜在威胁。[数据:关系 (6460)]\"\n        },\n        {\n            \"summary\": \"直接暴力的多种表现形式\",\n            \"explanation\": \"直接暴力在社区中以多种方式表现, 包括骨折片、头部碰撞和子弹等。这些表现形式表明直接暴力可能在不同情境下造成不同类型的伤害。[数据:关系 (6461, 6459, 6460 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"点压法与中医相关疗法\",\n    \"summary\": \"社区以点压法为核心, 该疗法与针刺疗法、针灸学、指压按摩麻醉、胸腹部和四肢损伤等实体有密切联系。点压法是中医骨伤特色手法之一, 用于治疗多种损伤和内伤, 并在医学课程和现代治疗方法中有所发展。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"点压法作为中医治疗方法, 具有较低的潜在影响严重性, 主要用于治疗和康复领域。\",\n    \"findings\": [\n        {\n            \"summary\": \"点压法是社区的核心实体\",\n            \"explanation\": \"点压法是这个社区的关键实体, 与多个其他实体有直接关系, 包括针刺疗法、针灸学、指压按摩麻醉、胸腹部和四肢损伤。这些关系表明点压法在中医治疗和相关医学领域中具有重要地位。[数据:实体 (2003), 关系 (1591, 1593, 1595, 1596, 1597 +more)]\"\n        },\n        {\n            \"summary\": \"点压法与针刺疗法相似\",\n            \"explanation\": \"点压法与针刺疗法在治疗方式上颇为相似, 这表明它们可能在某些治疗领域有重叠或互补的作用。这种相似性可能对医学实践和研究产生一定影响。[数据:关系 (1593)]\"\n        },\n        {\n            \"summary\": \"点压法的取穴方法与针灸学相同\",\n            \"explanation\": \"点压法的取穴方法与针灸学相同, 这表明点压法是针灸学的一部分或受到其影响。这种联系可能对医学教育和实践产生一定影响。[数据:关系 (1595)]\"\n        },\n        {\n            \"summary\": \"指压按摩麻醉基于点压法发展而来\",\n            \"explanation\": \"指压按摩麻醉是在点压法的基础上发展而来的治疗方法, 这表明点压法在现代医学中有所应用和演变。这种发展可能对医疗技术领域产生一定影响。[数据:关系 (1596)]\"\n        },\n        {\n            \"summary\": \"点压法用于治疗胸腹部内伤\",\n            \"explanation\": \"点压法被用于治疗胸腹部内伤, 这表明它在中医骨伤科和内科治疗中具有重要应用。这种适应证可能对医疗健康领域产生一定影响。[数据:关系 (1597)]\"\n        },\n        {\n            \"summary\": \"点压法用于治疗四肢损伤\",\n            \"explanation\": \"点压法被用于治疗四肢损伤, 这表明它在中医骨伤科领域中具有重要应用。这种适应证可能对康复医学和治疗实践产生一定影响。[数据:关系 (1601)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"补肾壮筋汤与颞下颌关节脱位\",\n    \"summary\": \"社区以补肾壮筋汤为核心实体, 该中药方剂与颞下颌关节脱位等病症相关, 并与其他治疗类实体如养肝肾和利关节存在联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及中药方剂及其治疗用途, 对公共健康有一定影响, 但未显示出重大社会或法律风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"补肾壮筋汤是社区的核心实体\",\n            \"explanation\": \"补肾壮筋汤是这个社区的主要实体, 用于治疗多种慢性筋伤和关节病症, 包括颞下颌关节脱位的中后期。其高连接度表明它在社区中具有重要地位。[数据:实体 (4583), 关系 (4677 +more)]\"\n        },\n        {\n            \"summary\": \"补肾壮筋汤用于治疗颞下颌关节脱位\",\n            \"explanation\": \"补肾壮筋汤被明确用于治疗颞下颌关节脱位的中后期, 这表明它在特定医疗场景中具有应用价值。这种治疗用途可能对患者康复产生积极影响。[数据:关系 (4677)]\"\n        },\n        {\n            \"summary\": \"养肝肾和利关节是相关治疗目标\",\n            \"explanation\": \"养肝肾和利关节是与中药方剂相关的治疗目标, 且在社区中被提及。这些目标可能与补肾壮筋汤的治疗效果相关, 也可能与其他方剂如健步虎潜丸有关。[数据:实体 (4710, 4711), 关系 (4908, 4910)]\"\n        },\n        {\n            \"summary\": \"健步虎潜丸与养肝肾和利关节相关\",\n            \"explanation\": \"健步虎潜丸被用于养肝肾和利关节的治疗目的, 表明它在社区中与补肾壮筋汤具有相似的治疗功能。这可能意味着两种方剂在中医治疗中具有一定的关联性。[数据:关系 (4908, 4910)]\"\n        },\n        {\n            \"summary\": \"社区实体主要集中在中医治疗领域\",\n            \"explanation\": \"社区中的实体主要涉及中医治疗领域, 包括中药方剂及其治疗目标。这表明该社区可能与传统医学或特定医疗实践相关, 但未涉及更广泛的社会或法律问题。[数据:实体 (4583, 4710, 4711), 关系 (4677, 4908, 4910)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={(  \n    \"title\": \"桃红四物汤与活血化瘀治疗\",  \n    \"summary\": \"该社区围绕桃红四物汤这一中药方剂展开, 主要涉及其治疗作用及与相关中药材如土鳖虫和血竭的联系。这些实体在中医领域中具有重要地位, 且在临床应用中常用于治疗气滞血瘀、接骨续筋等病症。\",  \n    \"rating\": 3.0,  \n    \"rating_explanation\": \"该社区主要涉及中药治疗领域, 未发现直接的社会或法律风险, 影响严重程度较低。\",  \n    \"findings\": [  \n        {  \n            \"summary\": \"桃红四物汤是社区的核心实体\",  \n            \"explanation\": \"桃红四物汤是这个社区的主要焦点, 是一种用于治疗气滞血瘀证的中药方剂, 具有活血祛瘀、消肿止痛、行气止痛及舒筋通络的作用。它在临床中被广泛用于多种损伤和疾病初期的治疗, 并且可以与其他方剂合方化裁以适应不同的病机。[数据:实体 (1690); 关系 (2905 +more)]\"  \n        },  \n        {  \n            \"summary\": \"土鳖虫在社区中具有重要治疗作用\",  \n            \"explanation\": \"土鳖虫是一种中药材, 在社区中被用于初期活血化瘀, 同时也作为接骨续损和接骨续筋的外用药。其在治疗相关病症中的应用表明它在社区中具有一定的临床价值。[数据:实体 (3307); 关系 (2918)]\"  \n        },  \n        {  \n            \"summary\": \"血竭在社区中用于接骨续筋\",  \n            \"explanation\": \"血竭是另一种中药材, 在社区中主要用于初期活血化瘀, 并且作为一种外用药, 常用于接骨续筋。这表明血竭在治疗与骨骼和筋络相关的疾病中具有重要作用。[数据:实体 (3306); 关系 (2917)]\"  \n        },  \n        {  \n            \"summary\": \"桃红四物汤与活血化瘀密切相关\",  \n            \"explanation\": \"桃红四物汤的主要作用之一是活血化瘀, 这在社区中被明确提及。这种治疗作用是其在中医领域中广泛应用的基础, 也是其与其他中药材如土鳖虫和血竭形成联系的关键点。[数据:关系 (2905)]\"  \n        },  \n        {  \n            \"summary\": \"社区中的实体主要用于治疗特定病症\",  \n            \"explanation\": \"社区中的实体, 如桃红四物汤、土鳖虫和血竭, 主要用于治疗气滞血瘀、接骨续筋等特定病症。这些实体在中医治疗中具有明确的临床应用, 且在不同阶段和病机中被使用。[数据:实体 (1690, 3307, 3306); 关系 (2905, 2918, 2917)]\"  \n        }  \n    ]  \n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"药膏、酊剂与醋的社区\",\n    \"summary\": \"该社区围绕药膏、酊剂和醋等实体展开, 主要涉及这些实体在制作过程中的关系和用途。醋和白酒作为辅料, 与药膏和酊剂有直接联系, 并在传统医学中发挥重要作用。\",\n    \"rating\": 2.0,\n    \"rating_explanation\": \"该社区的影响严重程度较低, 因为它主要涉及传统医学中的辅料和制成品, 没有显示出对公共安全或法律合规的重大风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"醋是药膏和酊剂的重要辅料\",\n            \"explanation\": \"醋在药膏和酊剂的制作过程中扮演了关键角色, 被明确列为辅料之一。这种关系表明醋在传统医学中的重要性, 但同时也表明其用途较为有限, 主要用于特定的药用目的。[数据:实体 (1847), 实体 (1824), 关系 (1421, 1437)]\"\n        },\n        {\n            \"summary\": \"药膏与醋有直接关系\",\n            \"explanation\": \"药膏和醋之间的关系在数据中被明确记录, 醋是药膏的辅料之一。这种关系表明药膏的制作依赖于醋, 但并未显示出药膏在社区中具有广泛的影响力或潜在风险。[数据:关系 (1421)]\"\n        },\n        {\n            \"summary\": \"酊剂与白酒有直接关系\",\n            \"explanation\": \"酊剂的制作依赖于白酒作为辅料之一, 这种关系在数据中被明确记录。白酒在酊剂的药用效果中可能起到重要作用, 但其影响范围有限, 主要集中在药用领域。[数据:关系 (1437)]\"\n        },\n        {\n            \"summary\": \"醋在社区中具有较高的连接度\",\n            \"explanation\": \"醋在社区中具有较高的连接度, 与药膏和酊剂都有直接联系。这表明醋在该社区中是一个核心实体。然而其用途和影响主要局限于药用领域, 没有显示出更广泛的社会或法律影响。[数据:实体 (1847), 关系 (1421, 1437)]\"\n        },\n        {\n            \"summary\": \"白酒的连接度较低\",\n            \"explanation\": \"白酒在社区中仅与酊剂有直接联系, 连接度较低。这表明白酒在该社区中是一个较为边缘的实体, 仅在特定的药用制作过程中发挥作用。[数据:实体 (1854), 关系 (1437)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 3 column 1 (char 30)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"补筋丸与腕部扭挫伤治疗\",\n    \"summary\": \"该社区围绕补筋丸和腕部扭挫伤展开, 补筋丸是一种中药方剂, 用于治疗腕部扭挫伤的后期阶段, 而腕部扭挫伤则与多种治疗手段和症状相关, 如活血止痛胶囊、弹力护腕、腕部疼痛、腕部肿胀和腕关节活动受限等。\",\n    \"rating\": 2.0,\n    \"rating_explanation\": \"该社区主要涉及医疗健康领域, 且影响范围有限, 未涉及重大社会或法律风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"补筋丸是治疗腕部扭挫伤的重要药物\",\n            \"explanation\": \"补筋丸在社区中被描述为一种中药方剂, 主要用于治疗腕部扭挫伤的后期阶段, 具有消肿、舒筋活络、温经止痛等作用。此外, 它也可用于筋伤中期, 以舒筋活血、和营止痛。这表明补筋丸在治疗腕部扭挫伤的康复过程中具有重要作用。[数据:实体 (4848), 关系 (5427)]\"\n        },\n        {\n            \"summary\": \"腕部扭挫伤是社区的核心主题\",\n            \"explanation\": \"腕部扭挫伤是社区中被频繁提及的实体, 与多个治疗手段和症状相关, 如活血止痛胶囊、弹力护腕、腕部疼痛、腕部肿胀和腕关节活动受限等。这表明腕部扭挫伤是社区关注的中心问题, 并且与多种康复措施和症状相关。[数据:实体 (4488), 关系 (5464, 5469, 5470, 5472, 5473 +more)]\"\n        },\n        {\n            \"summary\": \"腕部扭挫伤的诊断依据包括下尺桡关节间隙增宽\",\n            \"explanation\": \"腕部扭挫伤的诊断依据之一是下尺桡关节间隙增宽。这一信息来源于腕部X线正位片的检查结果, 表明在诊断过程中, 医疗专业人员会关注这一解剖特征以确认损伤情况。[数据:关系 (5470)]\"\n        },\n        {\n            \"summary\": \"腕部扭挫伤的常见症状包括疼痛、肿胀和活动受限\",\n            \"explanation\": \"腕部扭挫伤的常见症状包括腕部疼痛、腕部肿胀和腕关节活动受限。这些症状在社区中被明确提及, 并且是腕部扭挫伤诊断和治疗的重要参考。[数据:关系 (5472, 5473, 5474)]\"\n        },\n        {\n            \"summary\": \"腕部扭挫伤的康复阶段使用多种辅助工具\",\n            \"explanation\": \"腕部扭挫伤的康复阶段使用了多种辅助工具, 如弹力护腕、金属球和核桃。这些工具用于固定后保护、后期练功活动等, 表明社区关注的是全面的康复方案。[数据:关系 (5469, 5477, 5478)]\"\n        },\n        {\n            \"summary\": \"活血止痛胶囊用于腕部扭挫伤的初期治疗\",\n            \"explanation\": \"活血止痛胶囊被描述为用于腕部扭挫伤初期的药物, 具有祛瘀消肿止痛的作用。这表明社区中存在针对不同阶段的治疗方案, 并且活血止痛胶囊是初期治疗的重要组成部分。[数据:关系 (5464)]\"\n        },\n        {\n            \"summary\": \"弹力护腕用于腕部扭挫伤的固定后保护\",\n            \"explanation\": \"弹力护腕被描述为用于腕部扭挫伤固定后保护腕部。这表明在治疗过程中, 除了药物治疗外, 还有物理辅助工具用于支持康复, 弹力护腕是其中的关键工具之一。[数据:关系 (5469)]\"\n        },\n        {\n            \"summary\": \"金属球和核桃用于腕部扭挫伤后期的练功活动\",\n            \"explanation\": \"金属球和核桃被描述为用于腕部扭挫伤后期的练功活动。这表明社区关注的是损伤后的功能恢复, 并且通过特定的工具进行康复训练。[数据:关系 (5477, 5478)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"股骨髁和骨骼牵引\",\n    \"summary\": \"社区以股骨髁和骨骼牵引为核心，涉及多种股骨骨折类型及相关的治疗方法和设备，如布朗氏架和股骨髁牵引。这些实体之间存在紧密的联系，表明社区主要围绕股骨骨折的治疗展开。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区的重要性评分较低，因为其主要涉及医学治疗领域，对公共安全或社会影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"股骨髁是社区的核心实体\",\n            \"explanation\": \"股骨髁是这个社区的关键实体，是股骨的一部分，位于股骨干下端。它与骨骼牵引和股骨髁牵引等治疗方法密切相关，表明其在医学治疗领域的重要性。[数据:实体 (3853); 关系 (3703, 3746 +more)]\"\n        },\n        {\n            \"summary\": \"骨骼牵引是主要治疗方法\",\n            \"explanation\": \"骨骼牵引是社区中的主要治疗方法，用于股骨上1/3骨折和股骨中1/3骨折的复位。它与布朗氏架等设备相关，表明其在治疗过程中的关键性。[数据:实体 (3869); 关系 (3721, 3722, 3740 +more)]\"\n        },\n        {\n            \"summary\": \"股骨上1/3骨折与骨骼牵引相关\",\n            \"explanation\": \"股骨上1/3骨折是社区中的一个重要实体，通常需要骨骼牵引进行复位。这种治疗方法的使用表明该骨折类型在医学领域中具有较高的关注度。[数据:实体 (3872); 关系 (3721 +more)]\"\n        },\n        {\n            \"summary\": \"股骨中1/3骨折的治疗方法\",\n            \"explanation\": \"股骨中1/3骨折需要外展伤肢，并通过术者手自断端的外侧向内挤按，以及前后内外夹挤进行整复。骨骼牵引是其常用治疗方法之一，表明该骨折类型在治疗过程中需要特别关注。[数据:实体 (3870); 关系 (3722 +more)]\"\n        },\n        {\n            \"summary\": \"布朗氏架是骨骼牵引的重要设备\",\n            \"explanation\": \"布朗氏架是一种用于骨骼牵引的设备，表明其在治疗过程中具有重要作用。这种设备的使用与骨骼牵引的治疗方法密切相关，是治疗股骨骨折的重要工具。[数据:实体 (3883); 关系 (3740 +more)]\"\n        },\n        {\n            \"summary\": \"股骨髁牵引是骨骼牵引的一种类型\",\n            \"explanation\": \"股骨髁牵引是骨骼牵引的一种类型，适用于上1/3骨折和远侧骨折端向后移位的下1/3骨折。这表明股骨髁牵引在特定骨折类型中具有针对性的治疗作用。[数据:实体 (3884); 关系 (3746 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"腕三角软骨损伤及其相关因素\",\n    \"summary\": \"社区以腕三角软骨损伤为核心, 与过度扭转外力、长期劳损、掌背侧韧带撕裂和腕部其他损伤等实体相关联。这些实体描述了损伤的原因和可能的并发症, 对理解腕部健康问题具有重要意义。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"腕三角软骨损伤及其相关因素对个体健康有一定影响, 但属于常见医学问题, 严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"腕三角软骨损伤是社区的核心实体\",\n            \"explanation\": \"腕三角软骨损伤是这个社区的中心实体, 与多个其他实体相关联, 包括其常见原因和可能的并发症。这种损伤主要影响青壮年群体, 并且具有较高的关联度, 表明其在社区中的重要性。[数据:实体 (293); 关系 (5493, 5494, 5495, 5498)]\"\n        },\n        {\n            \"summary\": \"过度扭转外力是常见原因\",\n            \"explanation\": \"过度扭转外力是腕三角软骨损伤的常见原因之一, 通常由突然的外力作用引起。这种外力可能在运动、事故或日常活动中发生, 导致腕部受伤。[数据:实体 (5138); 关系 (5493)]\"\n        },\n        {\n            \"summary\": \"长期劳损是另一常见原因\",\n            \"explanation\": \"长期劳损是腕三角软骨损伤的另一个常见原因, 通常与长时间重复性活动有关。这种类型的损伤可能在需要频繁使用手腕的职业中更为普遍, 如运动员、工人或办公室职员。[数据:实体 (5139); 关系 (5494)]\"\n        },\n        {\n            \"summary\": \"掌背侧韧带撕裂是可能的并发症\",\n            \"explanation\": \"掌背侧韧带撕裂是腕三角软骨损伤的可能并发症之一, 可能会影响腕关节的稳定性。这种并发症可能需要额外的医疗干预, 并可能延长康复时间。[数据:实体 (5140); 关系 (495)]\"\n        },\n        {\n            \"summary\": \"腕部其他损伤是可能的并发情况\",\n            \"explanation\": \"腕部其他损伤是腕三角软骨损伤的可能并发情况, 与腕部活动相关。这些并发损伤可能进一步增加患者的痛苦和治疗难度, 并可能影响其日常生活和工作能力。[数据:实体 (5141); 关系 (5498)]\"\n        },\n        {\n            \"summary\": \"腕部是损伤的关联部位\",\n            \"explanation\": \"腕部是腕三角软骨损伤的关联部位, 该损伤属于腕关节软骨损伤。腕部的健康状况与多种因素相关, 包括外力和劳损, 这些因素可能共同导致损伤的发生。[数据:实体 (213); 关系 (5498)]\"\n        }]\n    }.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"腕关节及其相关医疗设备与活动\",\n    \"summary\": \"社区以腕关节为中心, 与多种医疗设备和活动相关, 包括护腕、塑型夹板、石膏托等, 以及掌屈、三角软骨、尺骨小头等结构和活动表现。这些实体之间存在紧密联系, 主要围绕腕关节的固定、保护和活动受限展开。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区主要涉及医疗和康复领域, 对健康和安全有一定影响, 但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"腕关节是社区的核心实体\",\n            \"explanation\": \"腕关节是这个社区的中心实体, 与多个医疗设备和活动相关, 如护腕、塑型夹板、石膏托等。它在解剖结构和功能上具有重要性, 并且在受伤后需要特定的固定和保护措施。腕关节的活动受限和结构损伤是社区中其他实体关注的重点。[数据:实体 (1346); 关系 (5500, 5501, 5505, 4826, 4810 +more)]\"\n        },\n        {\n            \"summary\": \"护腕用于保护腕关节\",\n            \"explanation\": \"护腕是用于保护腕关节的医疗装备, 防止其在活动过程中受到过度扭转或损伤。这种保护措施在康复和日常活动中都具有重要意义, 有助于减少进一步的伤害风险。[数据:关系 (5505)]\"\n        },\n        {\n            \"summary\": \"塑型夹板用于固定腕关节于掌屈位\",\n            \"explanation\": \"塑型夹板是一种专门用于固定腕关节的设备, 通常用于保持腕关节在掌屈位, 以促进康复或防止进一步损伤。这种设备在腕关节受伤后的治疗过程中起着关键作用。[数据:关系 (4826)]\"\n        },\n        {\n            \"summary\": \"石膏托用于固定多个关节\",\n            \"explanation\": \"石膏托是一种广泛使用的医疗设备, 用于固定多个关节, 包括腕关节、踝关节、膝关节以及跖骨骨折部位。它在术后固定和防止病理性骨折方面具有重要作用, 但使用时需注意塑形合理以避免影响血液循环或压伤皮肤。[数据:实体 (2119); 关系 (1778, 4014)]\"\n        },\n        {\n            \"summary\": \"掌屈是腕关节活动受限的表现\",\n            \"explanation\": \"掌屈是腕关节活动受限的一种表现, 通常在腕关节受伤或固定后出现。这种活动受限可能影响日常功能, 并且在治疗过程中需要特别关注。[数据:实体 (3664); 关系 (4810)]\"\n        },\n        {\n            \"summary\": \"三角软骨损伤会导致腕部活动受限\",\n            \"explanation\": \"三角软骨是腕关节内的一个关键结构, 受挤压时会引起疼痛, 损伤可能导致腕部活动受限。这种结构的健康状况对腕关节的功能有直接影响, 是治疗和康复过程中需要关注的重点。[数据:实体 (5142); 关系 (5500)]\"\n        },\n        {\n            \"summary\": \"尺骨小头是腕关节的一部分\",\n            \"explanation\": \"尺骨小头是腕关节的一部分, 外伤后可能出现突出、移动度增大和压痛。这种结构的异常可能影响腕关节的整体功能, 并且在诊断和治疗过程中需要特别注意。[数据:实体 (5143); 关系 (5501)]\"\n        },\n        {\n            \"summary\": \"开放复位内固定与石膏托相关\",\n            \"explanation\": \"开放复位内固定是一种用于治疗跖骨骨折的方法, 通常需要术后使用石膏托进行固定。这种治疗方法和设备的结合对于确保骨折部位的稳定和恢复至关重要。[数据:关系 (4014)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"指骨骨折与治疗相关社区\",\n    \"summary\": \"该社区围绕指骨骨折及其相关治疗展开，核心实体包括指骨干骨折、指骨颈骨折、夹板、小木棒、玻璃瓶、舒筋活血药和反折手法。这些实体通过治疗和康复过程相互关联，反映了指骨骨折的医学处理和可能的并发症。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学治疗和康复过程，对公共健康有一定影响，但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"指骨干骨折是社区的核心实体\",\n            \"explanation\": \"指骨干骨折是该社区中最重要的实体之一，其治疗过程涉及夹板和舒筋活血药的使用。这表明该骨折类型在医学处理中具有较高的关注度和复杂性。[数据:实体 (3748), 关系 (3558, 3561 +more)]\"\n        },\n        {\n            \"summary\": \"指骨颈骨折与多种治疗手段相关\",\n            \"explanation\": \"指骨颈骨折与小木棒、玻璃瓶、反折手法等治疗手段密切相关，这些工具和方法用于固定和整复骨折。这表明该骨折类型在治疗过程中需要多种干预措施。[数据:实体 (3745), 关系 (3550, 3551, 3552 +more)]\"\n        },\n        {\n            \"summary\": \"夹板在指骨干骨折治疗中起关键作用\",\n            \"explanation\": \"夹板被明确用于指骨干骨折后的局部固定，这表明它是治疗过程中不可或缺的一部分。夹板的使用可能影响康复效果和患者舒适度。[数据:关系 (3558)]\"\n        },\n        {\n            \"summary\": \"舒筋活血药用于促进康复\",\n            \"explanation\": \"舒筋活血药在指骨干骨折的治疗中用于熏洗和功能锻炼，这表明它在康复阶段起着重要作用。这类药物可能对恢复手指功能和减少炎症有帮助。[数据:关系 (3561)]\"\n        },\n        {\n            \"summary\": \"指骨颈骨折可能导致创伤性关节炎\",\n            \"explanation\": \"指骨颈骨折如果整复不当，可能会导致掌指关节创伤性关节炎，这表明该骨折类型存在一定的并发症风险，需要专业处理。[数据:关系 (3542)]\"\n        },\n        {\n            \"summary\": \"指端与撕脱骨折相关\",\n            \"explanation\": \"指端是末节指骨基底背侧撕脱骨折的部位，这种骨折通常与暴力弯曲有关。指端的损伤可能影响手指的灵活性和功能。[数据:关系 (3544), 实体 (3757)]\"\n        },\n        {\n            \"summary\": \"指伸肌腱扩张与撕脱骨折相关\",\n            \"explanation\": \"指伸肌腱扩张位于末节指骨基底背侧，撕脱骨折时可能受损。这表明肌腱和骨骼结构的损伤可能同时发生，需要综合评估和治疗。[数据:关系 (3566), 实体 (3754)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"肱骨外髁与肱骨外髁骨折\",\n    \"summary\": \"社区以肱骨外髁为中心, 与肱骨外髁骨折和前臂伸肌群密切相关, 并涉及屈肘 $90^{\\text{circ}}$ 的治疗方法。这些实体之间的关系揭示了肱骨外髁骨折的成因和治疗方式。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区的重要性评分较低, 因为它主要涉及医学解剖和治疗方法, 对社会或法律影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"肱骨外髁是社区的核心实体\",\n            \"explanation\": \"肱骨外髁是这个社区的中心实体, 与肱骨外髁骨折和前臂伸肌群有直接关系。它在解剖学和医学领域中具有重要地位, 是骨折发生的关键部位。[数据:实体 (208); 关系 (168, 3200, 3204 +more)]\"\n        },\n        {\n            \"summary\": \"肱骨外髁骨折是社区的重要事件\",\n            \"explanation\": \"肱骨外髁骨折是社区中的关键事件, 与肱骨外髁和前臂伸肌群有直接联系。骨折的发生通常与跌倒时手部着地有关, 并可能因前臂伸肌群的牵拉而发生翻转移位。[数据:实体 (253); 关系 (168, 3200, 3204 +more)]\"\n        },\n        {\n            \"summary\": \"前臂伸肌群与肱骨外髁骨折的关系\",\n            \"explanation\": \"前臂伸肌群是肱骨外髁骨折的重要诱因和影响因素。其强烈收缩可能导致骨折, 并在骨折后牵拉骨折块发生翻转移位。这表明前臂伸肌群在社区中具有关键作用。[数据:实体 (3480); 关系 (3200 +more)]\"\n        },\n        {\n            \"summary\": \"屈肘 $90^{\\text{circ}}$ 是肱骨外髁骨折的治疗方法\",\n            \"explanation\": \"屈肘 $90^{\\text{circ}}$ 是肱骨外髁骨折的治疗方法之一, 适用于无明显移位的骨折。这表明社区中存在针对该骨折的治疗策略, 有助于理解其医学处理方式。[数据:实体 (3481); 关系 (3204 +more)]\"\n        },\n        {\n            \"summary\": \"肱骨外髁骨折的成因和影响\",\n            \"explanation\": \"肱骨外髁骨折通常由跌倒时手部着地引起, 并可能因前臂伸肌群的牵拉而发生翻转移位。这种骨折的成因和影响在社区中被详细描述, 有助于理解其医学和解剖学背景。[数据:实体 (253, 208, 3480); 关系 (168, 3200, 3204 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"伸踝试验、提踵试验与跟腱\",\n    \"summary\": \"社区以医学检查方法和相关解剖结构为中心，包括伸踝试验、提踵试验和跟腱等关键实体。这些实体之间通过检测功能和医学用途相互关联，表明它们在医学诊断中的重要性。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区的重要性主要体现在医学诊断领域，对公共健康有一定影响，但不涉及广泛的社会或安全风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"伸踝试验与跟腱的直接关联\",\n            \"explanation\": \"伸踝试验是一种用于检测跟腱断裂或深静脉血栓性静脉炎的医学检查方法。该试验与跟腱之间存在直接关系，表明其在诊断跟腱相关疾病中的关键作用。[数据:关系 (1148); 实体 (1487, 1214)]\"\n        },\n        {\n            \"summary\": \"提踵试验与跟腱的联系\",\n            \"explanation\": \"提踵试验用于检测跟腱断裂，是与跟腱直接相关的另一种医学检查方法。提踵试验和跟腱之间的联系表明其在临床评估中的重要性。[数据:关系 (1152); 实体 (1497, 1214)]\"\n        },\n        {\n            \"summary\": \"提踵试验与胫后肌和腓骨肌的关联\",\n            \"explanation\": \"提踵试验不仅用于检测跟腱断裂，还用于评估胫后肌和腓骨肌的功能。这表明提踵试验在诊断多种踝关节相关肌肉和肌腱问题中具有广泛的应用。[数据:关系 (1153, 1154); 实体 (1497, 1488, 1489)]\"\n        },\n        {\n            \"summary\": \"跟腱在足部解剖中的重要性\",\n            \"explanation\": \"跟腱是连接小腿肌肉与足部的重要肌腱，主要功能是使踝关节进行跖屈运动。其损伤可能导致严重的足部功能障碍，因此在医学检查中受到高度重视。[数据:实体 (1214); 关系 (1148, 1152)]\"\n        },\n        {\n            \"summary\": \"胫后肌和腓骨肌在踝关节功能中的作用\",\n            \"explanation\": \"胫后肌和腓骨肌分别位于小腿内侧和外侧，主要功能是协助踝关节背伸。这些肌肉在受压时可能出现无力，因此在医学检查中被评估。[数据:实体 (1488, 1489); 关系 (1153, 1154)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨擦感与整复治疗社区\",\n    \"summary\": \"该社区围绕骨擦感和整复治疗展开, 包括主治者、麻醉方式以及整复时的特定体位。这些实体之间存在紧密联系, 主要集中在骨折整复的医疗过程中。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区涉及医疗过程中的关键步骤和症状, 对医疗实践和患者安全有一定影响, 但影响程度较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨擦感是骨折整复中的关键症状\",\n            \"explanation\": \"骨擦感是骨折时可能出现的症状, 通过触诊可发现, 尤其在骨折断端相互抵触时更为明显。它常见于肱骨外髁骨折, 并且在整复过程中可能被矫正。[数据:实体 (3393), 关系 (3038)]\"\n        },\n        {\n            \"summary\": \"整复是治疗骨折的重要方法\",\n            \"explanation\": \"整复是一种用于恢复骨折或脱位骨骼正常位置的治疗方法, 常用于治疗有明显移位的骨折, 特别是踝关节骨折脱位。该方法可以通过手法或使用钢针撬拨、器具等方式进行, 旨在矫正骨骼移位并使其回到正确的位置。[数据:实体 (645), 关系 (1476, 1478, 1481, 1483, 3273 +more)]\"\n        },\n        {\n            \"summary\": \"主治者是整复操作的主要执行者\",\n            \"explanation\": \"主治者是负责整复操作的主要人员, 在整复过程中起着关键作用。他们的专业技能和判断力直接影响整复的效果和患者的康复过程。[数据:实体 (1884), 关系 (1478)]\"\n        },\n        {\n            \"summary\": \"麻醉是整复过程中的重要辅助手段\",\n            \"explanation\": \"麻醉是整复过程中用于止痛或使患者失去知觉的手段, 在整复操作中起到关键作用。不同的麻醉方式适用于不同部位的骨折, 例如臂丛神经阻滞麻醉用于上肢骨折整复, 坐骨神经阻滞麻醉用于下肢骨折整复。[数据:关系 (1476, 1481, 1483)]\"\n        },\n        {\n            \"summary\": \"伸直内收位是整复时前臂的特定位置\",\n            \"explanation\": \"伸直内收位是整复时前臂的位置, 用于确保骨折部位在整复过程中能够正确对齐。这种特定的体位对于成功完成整复操作至关重要。[数据:实体 (3542), 关系 (3273)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"尤因肉瘤与骨肿瘤相关疾病\",\n    \"summary\": \"该社区以尤因肉瘤为核心, 与骨肉瘤、骨囊肿、骨巨细胞瘤和骨转移性肿瘤等骨肿瘤相关疾病存在联系。这些实体之间的关系主要集中在疾病分类、鉴别诊断和治疗特性上, 有助于理解骨肿瘤的复杂性。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区的重要性评分较低, 因为它主要涉及医学知识和疾病分类, 对公共安全或社会影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"尤因肉瘤是社区的核心实体\",\n            \"explanation\": \"尤因肉瘤是这个社区的中心实体, 与X线检查有直接关系, 且在医学领域中具有较高的关注度。其描述详细, 包括临床表现、影像学特征和确诊方法, 表明其在骨肿瘤相关疾病中的重要性。[数据:实体 (766), 关系 (6803)]\"\n        },\n        {\n            \"summary\": \"骨肉瘤是骨肿瘤的一种\",\n            \"explanation\": \"骨肉瘤是骨肿瘤的一个子类, 与尤因肉瘤、骨巨细胞瘤和骨转移性肿瘤等存在关联。其描述表明它是一种恶性骨肿瘤, 但未提及具体临床表现或治疗方式。[数据:实体 (761), 关系 (518)]\"\n        },\n        {\n            \"summary\": \"骨囊肿需要与肩关节周围炎进行鉴别诊断\",\n            \"explanation\": \"骨囊肿是一种可能引起严重肿痛的瘤样病损, 需要与肩关节周围炎等其他骨病变进行鉴别诊断。这表明骨囊肿在临床诊断中具有一定的复杂性。[数据:实体 (768), 关系 (5301)]\"\n        },\n        {\n            \"summary\": \"骨巨细胞瘤与骨肉瘤的区分\",\n            \"explanation\": \"骨巨细胞瘤和骨肉瘤都属于骨肿瘤, 但骨巨细胞瘤对放射治疗具有中度敏感性, 而骨肉瘤是恶性肿瘤。这种区分对于治疗方案的选择至关重要。[数据:实体 (759), 关系 (7274)]\"\n        },\n        {\n            \"summary\": \"骨转移性肿瘤与骨肉瘤的关系\",\n            \"explanation\": \"骨转移性肿瘤和骨肉瘤都属于恶性骨肿瘤, 但骨肉瘤是原发性肿瘤, 而骨转移性肿瘤是继发性肿瘤。这种区分有助于理解肿瘤的来源和扩散特性。[数据:实体 (6507), 关系 (7276)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"腰痛及相关治疗方法\",\n    \"summary\": \"社区以腰痛为中心，与多种治疗方法和中医病因相关，包括磁疗、中药离子导入、活血止痛类膏药、承山、后溪、养老等实体，这些实体在治疗腰痛方面具有重要作用。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"腰痛是一种常见症状，与多种治疗方法和中医病因相关，但其影响程度相对较低，主要集中在医疗和健康领域。\",\n    \"findings\": [\n        {\n            \"summary\": \"腰痛是社区的核心实体\",\n            \"explanation\": \"腰痛是这个社区的关键实体，与多个治疗方法和病因相关。它在实体和关系中频繁出现，表明其在社区中的重要性。[数据:实体 (995); 关系 (5923, 5924, 5912, 5934, 5935 +more)]\"\n        },\n        {\n            \"summary\": \"磁疗用于减轻腰痛\",\n            \"explanation\": \"磁疗是社区中提到的一种物理治疗方法，用于减轻腰痛。这种疗法在社区中具有一定的应用价值，但其效果和普及程度可能因个体差异而有所不同。[数据:关系 (5923)]\"\n        },\n        {\n            \"summary\": \"中药离子导入用于减轻腰痛\",\n            \"explanation\": \"中药离子导入是社区中提到的另一种物理治疗方法，用于减轻腰痛。这种方法结合了中医理论和现代物理疗法，可能对某些患者有较好的疗效。[数据:关系 (5924)]\"\n        },\n        {\n            \"summary\": \"活血止痛类膏药用于缓解腰痛\",\n            \"explanation\": \"活血止痛类膏药是社区中提到的一种外用药物，用于缓解腰痛。这类膏药在中医治疗中被广泛应用，尤其适用于初期活血化瘀和行气止痛。[数据:关系 (5912)]\"\n        },\n        {\n            \"summary\": \"承山用于治疗腰痛\",\n            \"explanation\": \"承山是中医中用于治疗腰痛的重要针灸穴位，同时也用于治疗下肢筋膜间隔区综合征和胫神经损伤。该穴位在社区中具有较高的提及频率，表明其在治疗腰痛中的重要性。[数据:关系 (5934)]\"\n        },\n        {\n            \"summary\": \"后溪用于治疗腰痛\",\n            \"explanation\": \"后溪是中医中用于治疗腰痛的针灸穴位，同时也用于治疗后头痛和癫痫。该穴位的提及表明其在社区中具有一定的治疗应用价值。[数据:关系 (5935)]\"\n        },\n        {\n            \"summary\": \"养老用于治疗腰痛\",\n            \"explanation\": \"养老是中医中用于治疗腰痛的针灸穴位，同时也用于治疗上肢瘫痪。该穴位的提及表明其在社区中具有一定的治疗应用价值。[数据:关系 (5936)]\"\n        },\n        {\n            \"summary\": \"外感风寒湿邪是中医认为引起腰痛的常见病因\",\n            \"explanation\": \"外感风寒湿邪是中医中引起腰痛的常见病因之一，表明社区中对中医病因的关注。这种病因的提及有助于理解腰痛的成因和治疗方向。[数据:关系 (5867)]\"\n        },\n        {\n            \"summary\": \"脏腑经络与中医认为的腰痛病因密切相关\",\n            \"explanation\": \"脏腑经络是中医中与腰痛病因密切相关的概念，表明社区中对中医理论的关注。这一概念的提及有助于理解腰痛的复杂成因。[数据:关系 (5868)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 139, in _read_model_from_json\n    return json_model.model_validate(value)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\pydantic\\main.py\", line 705, in model_validate\n    return cls.__pydantic_validator__.validate_python(\npydantic_core._pydantic_core.ValidationError: 1 validation error for CommunityReportResponse\nfindings.2.summary\n  Field required [type=missing, input_value={' summary': '有衬垫...[数据:关系 (1786)]'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 115, in try_receive_json\n    model = self._read_model_from_json(raw_json, json_model)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 142, in _read_model_from_json\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response does not match the expected model, response={'title': '无衬垫石膏与固定效果', 'summary': '社区围绕无衬垫石膏和固定效果展开, 无衬垫石膏直接与皮肤接触, 需注意避免压伤, 而固定效果是无衬垫石膏的主要功能之一。此外, 有衬垫石膏多在手术后用于固定, 与无衬垫石膏形成对比。这些实体之间的关系反映了医疗护理中固定技术的应用和注意事项。', 'rating': 3.0, 'rating_explanation': '社区的重要性评分较低, 因为它主要涉及医疗护理中的固定技术, 对公共安全或社会影响较小。', 'findings': [{'summary': '无衬垫石膏与皮肤直接接触', 'explanation': '无衬垫石膏直接与皮肤接触, 这可能带来压伤等风险, 需要特别注意护理和使用方法。这种直接接触表明无衬垫石膏在医疗护理中的应用较为基础, 但同时也需要关注其对患者舒适度和安全的影响。[数据:关系 (1782)]'}, {'summary': '无衬垫石膏具有较好的固定效果', 'explanation': '无衬垫石膏的固定效果较好, 这是其在医疗护理中被广泛使用的重要原因。固定效果是无衬垫石膏的主要功能之一, 有助于骨折恢复。然而, 由于其直接接触皮肤, 需要确保其使用符合医疗规范以避免并发症。[数据:关系 (1784)]'}, {' summary': '有衬垫石膏多在手术后使用', 'explanation': '有衬垫石膏多在手术后用于固定, 这表明其在术后护理中具有特定的应用场景。与无衬垫石膏相比, 有衬垫石膏可能提供额外的保护, 以减少对皮肤的直接压力。这种使用场景反映了医疗护理中对不同固定技术的选择依据。[数据:关系 (1786)]'}, {'summary': '固定效果是无衬垫石膏的重要属性', 'explanation': '固定效果是无衬垫石膏的重要属性, 与石膏的使用目的密切相关。这一属性在医疗护理中具有关键作用, 直接影响骨折恢复的效果。固定效果的描述进一步强调了无衬垫石膏在医疗实践中的功能和重要性。[数据:实体 (2123), 关系 (1784)]'}, {'summary': '无衬垫石膏的使用需关注患者安全', 'explanation': '无衬垫石膏直接与皮肤接触, 需注意避免压伤, 这表明其使用过程中需要特别关注患者的安全和舒适度。这种关注点对于医疗护理人员来说是重要的, 以确保石膏的正确使用并减少潜在的医疗风险。[数据:关系 (1782)]'}]}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 33 column 13 (char 1437)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"慢性劳损与相关治疗方法\",\n    \"summary\": \"社区以慢性劳损为核心实体, 与肩部筋伤、颈椎病和股骨头缺血性坏死等疾病相关, 并与合理用枕、擦法、揉擦法和润滑剂等治疗方法及预防措施存在联系。这些实体共同构成了一个围绕慢性劳损的健康与治疗网络。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"慢性劳损及其相关治疗方法和预防措施对健康有中等影响, 但主要集中在治疗和预防领域, 不涉及重大社会或法律风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"慢性劳损是社区的核心实体\",\n            \"explanation\": \"慢性劳损是这个社区的中心实体, 与多种疾病和治疗方法相关。它在社区中具有较高的重要性, 因为它是多个实体的共同关联点, 包括肩部筋伤、颈椎病、股骨头缺血性坏死等。[数据:实体 (737); 关系 (5294, 5293, 1574, 1563, 1575 +more)]\"\n        },\n        {\n            \"summary\": \"慢性劳损与肩部筋伤有直接关系\",\n            \"explanation\": \"慢性劳损是肩部筋伤的常见发病原因, 这表明慢性劳损在肩部筋伤的发生过程中起着重要作用。这种关系对于理解肩部筋伤的成因和预防措施至关重要。[数据:关系 (5294)]\"\n        },\n        {\n            \"summary\": \"合理用枕可以预防慢性劳损\",\n            \"explanation\": \"合理用枕是一种预防慢性劳损的方法, 通过选择合适的高度和硬度, 保持良好的睡眠体位, 可以有效减少慢性劳损的发生。这表明预防措施在社区中占有重要地位。[数据:关系 (5293)]\"\n        },\n        {\n            \"summary\": \"擦法用于治疗慢性劳损\",\n            \"explanation\": \"擦法是一种用于治疗慢性劳损的手法, 通过在皮肤上摩擦以达到活血散瘀、消肿止痛、温经通络等效果。这种治疗方法适用于腰背部和肌肉丰厚部位的慢性劳损。[数据:实体 (1968), 关系 (1574)]\"\n        },\n        {\n            \"summary\": \"润滑剂在擦法中起保护作用\",\n            \"explanation\": \"润滑剂在擦法中用于防止擦伤皮肤, 这表明在实施擦法时, 保护皮肤是重要的考虑因素。润滑剂的使用可以提高擦法的安全性和舒适度。[数据:关系 (1575)]\"\n        },\n        {\n            \"summary\": \"揉擦法适用于风湿痹痛\",\n            \"explanation\": \"揉擦法是理筋常用手法, 适用于风湿痹痛的治疗。这表明社区中的治疗方法不仅针对慢性劳损, 还扩展到其他相关疾病, 如风湿痹痛。[数据:关系 (1563), 实体 (1965, 1978)]\"\n        },\n        {\n            \"summary\": \"揉擦法包含揉法和擦法\",\n            “explanation”: \"揉擦法是理筋常用手法, 包含揉法和擦法两种方法。这表明社区中的治疗方法是综合性的, 并结合了多种技术以达到更好的治疗效果。[数据:实体 (1965), 关系 (1560)]\"\n        :\n        {\n            \"summary\": \"慢性劳损与股骨头缺血性坏死有关\",\n            \"explanation\": \"慢性劳损与股骨头缺血性坏死有关, 这表明慢性劳损可能在某些情况下导致更严重的健康问题。这种关联对于理解慢性劳损的潜在影响和治疗需求非常重要。[数据:实体 (737)]\"\n        },\n        \"explanation\": \"慢性劳损与颈椎病有关, 这表明长期低头伏案工作或颈部活动频繁可能是颈椎病的重要诱因。这种关系对于制定预防和治疗策略具有重要意义。[数据:实体 (737)]\"\n        },\n        {\n            \"summary\": \"社区中的治疗方法主要针对慢性劳损和相关疾病\",\n            \"explanation\": \"社区中的治疗方法, 如擦法、揉擦法和润滑剂的使用, 主要针对慢性劳损及其相关疾病, 如风湿痹痛和肩部筋伤。这表明社区的重点在于慢性劳损的治疗和预防。[数据:实体 (1968, 1965, 1971), 关系 (1574, 1560, 1563, 1575)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"腰椎椎管狭窄症及其相关症状与病因\",\n    \"summary\": \"该社区以腰椎椎管狭窄症为核心实体，与多种症状和病因相关联，包括腰腿痛、腰部后伸受限、肾气不足、反复外伤等。这些实体之间通过病理机制、临床症状和诊查要点相互连接，构成了一个复杂的医学知识网络。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学知识，对公共健康有一定影响，但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"腰椎椎管狭窄症是核心实体\",\n            \"explanation\": \"腰椎椎管狭窄症是这个社区的中心实体，与多个症状和病因相关联。它在医学领域中具有重要地位，是理解该社区结构的关键。[数据:实体 (317); 关系 (6078, 6080, 6205, 6206, 6208 +more)]\"\n        },\n        {\n            \"summary\": \"腰腿痛是主要症状之一\",\n            \"explanation\": \"腰腿痛是腰椎椎管狭窄症的主要症状之一，且在中医学中被归为腰腿痛的范畴。这一症状与疾病密切相关，是诊断和治疗的重要依据。[数据:关系 (6078)]\"\n        },\n\n\n        {\n            \"summary\": \"腰部后伸受限是常见症状\",\n            \"explanation\": \"腰部后伸受限是腰椎椎管狭窄症的常见症状之一，与该疾病直接相关。这一症状可能影响患者的日常活动和生活质量，是疾病诊断的重要参考。[数据:关系 (6080)]\"\n        },\n\n\n        {\n           <\"summary\": \"               肾气不足是主要内因之一\",\n                                                     说明: \"肾气不足是腰椎椎管狭窄症的主要内因之一，表明该疾病在中医理论中与肾的功能密切相关。这一病因可能影响疾病的治疗和预防策略。[数据:关系 (6199)]\"\n\"explanation\": \"肾气不足是腰椎椎管狭窄症的主要内因之一，表明该疾病在中医理论中与肾的功能密切相关。这一病因可能影响疾病的治疗和预防策略。[数据:关系 (6199)]\"\n        },\n\n\n        {\n            \"summary\": \"反复外伤是常见外因之一\",\n            \"explanation\": \"反复外伤是腰椎椎管狭窄症的常见外因之一，表明外部因素在疾病的发生中起重要作用。这一信息对于制定预防措施和健康教育具有重要意义。[数据:关系 (6202)]\"\n        },\n\n\n        {\n            \"summary\": \"肾虚不固是病理机制之一\",\n            \"explanation\": \"肾虚不固是腰椎椎管狭窄症的病理机制之一，表明肾的功能失调可能导致疾病进展。这一机制在中医治疗中可能成为干预的重点。[数据:关系 (6205)]\"\n        },\n\n\n        {\n            \"summary\": \"邪阻经络是病理机制之一\",\n           <\"explanation\": \"                  邪阻经络是腰椎椎管狭窄症的病理机制之一，表明经络受阻可能加重病情。这一机制在中医理论中对治疗方案的设计具有指导意义。[数据:    关系 (6)\"\n        },\n\n\n        {\n            \"summary\": \"下肢麻木是主要临床症状\",\n            \"explanation\": \"下肢麻木是腰椎椎管狭窄症的主要临床症状之一，表明神经受压是该疾病的重要表现。这一症状可能对患者的生活质量产生较大影响。[数据:关系 (6211)]\"\n        },\n\n\n        {\n            \"summary\": \"苔厚腻是诊查要点之一\",\n            \"explanation\": \"苔厚腻是腰椎椎管狭窄症的诊查要点之一，表明中医在诊断该疾病时会关注舌苔的变化。这一诊查要点有助于疾病的辨证施治。[数据:关系 (6212)]\"\n        },\n\n\n        {\n            \"summary\": \"脉弦滑是诊查要点之一\",\n            \"explanation\": \"脉弦滑是腰椎椎管狭窄症的诊查要点之一，表明中医通过脉象来辅助诊断该疾病。这一诊查要点在中医诊疗中具有重要参考价值。[数据:关系 (6213)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting ',' delimiter: line 26 column 9 (char 1160)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"指间关节与相关损伤\",\n    \"summary\": \"社区以指间关节为中心, 与近侧指骨滑车、远侧指骨基底部、侧副韧带断裂和侧向活动等实体相关联。这些实体描述了指间关节的结构、损伤类型及其表现, 为理解其在医学和康复领域的重要性提供了基础。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学和解剖学领域, 对公共健康和医疗实践有中等影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"指间关节是社区的核心实体\",\n            \"explanation\": \"指间关节是这个社区的中心实体, 与多个其他实体有直接关系。它由近侧指骨滑车和远侧指骨基底部构成, 并且与侧副韧带断裂和侧向活动等损伤相关。这些关系表明指间关节在医学和康复领域的重要性。[数据:实体 (241), 关系 (4829, 4830, 4834, 4833, 197 +more)]\"\n        },\n        {\n            \"summary\": \"近侧指骨滑车是构成指间关节的重要部分\",\n            \"explanation\": \"近侧指骨滑车是构成指间关节的一部分, 与指间关节有直接关系。这种结构关系对于理解指间关节的功能和损伤机制至关重要。[数据:实体 (4682), 关系 (4829)]\"\n        },\n        {\n            \"summary\": \"远侧指骨基底部是构成指间关节的另一部分\",\n            \"explanation\": \"远侧指骨基底部是构成指间关节的另一部分, 与指间关节有直接关系。这种结构关系对于理解指间关节的功能和损伤机制至关重要。[数据:实体 (4677), 关系 (4830)]\"\n        },\n        {\n            \"summary\": \"侧副韧带断裂与指间关节脱位相关\",\n            \"explanation\": \"侧副韧带断裂是与指间关节脱位相关的常见损伤之一。这种损伤通常由外力引起, 并可能导致关节囊破裂。[数据:实体 (4675), 关系 (4834)]\"\n        },\n        {\n            \"summary\": \"侧向活动是侧副韧带断裂的表现\",\n            \"explanation\": \"侧向活动是伴侧副韧带断裂的指间关节脱位的表现。这种活动超出正常范围, 可能表明关节结构受损。[数据:实体 (4679), 关系 (4833)]\"\n        \"),\n        },\n        {\n            \"summary\": \"掌指关节及指间关节脱位是常见的损伤类型\",\n            \"explanation\": \"掌指关节及指间关节脱位是常见的损伤类型, 与指间关节有直接关系。这种损伤可能影响手指的正常功能, 并需要早期活动以防止功能障碍。[数据:实体 (197), 关系 (197)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"关节面与创伤性关节炎\",\n    \"summary\": \"该社区以关节面为核心，与骨折、创伤性关节炎、功能复位、关节内骨折等实体密切相关。关节面的损伤或复位不良可能导致创伤性关节炎和腕关节功能障碍，这些实体之间的关系揭示了骨折治疗对关节健康的重要性。\",\n    \"rating\": 6.`,\n    \"rating_explanation\": \"由于关节面损伤和骨折复位不良可能导致严重的关节疾病和功能障碍，因此影响严重程度评级为中高。\",\n    \"findings\": [\n        {\n            \"summary\": \"关节面是社区的核心实体\",\n            \"explanation\": \"关节面是这个社区的关键实体，其结构和完整性对关节稳定性有重要影响。骨折线可能从关节面开始，这表明关节面在骨折和关节疾病中起着重要作用。[数据:实体 (3487,   \"); 1562, 1382, 3224, 3273); 关系 (4512, 2736, 2859, 3449, 2851 +more)]\"\n        :\"\",\n            \"summary\": \"创伤性关节炎与多种骨折类型相关\",\n            \"explanation\": \"创伤性关节炎是社区中的重要疾病，与多种骨折类型如关节内骨折、骨干骨折成角畸形愈合、股骨髁间骨折、胫骨髁骨折等密切相关。这些骨折若未完全复位，可能导致关节面不平整，从而引发创伤性关节炎。[数据:实体 (1562); 关系 (2736, 2859, 2737, 2853, 2851 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"功能复位是骨折治疗中的重要目标，但若未达到功能复位，可能导致创伤性关节炎。功能复位的实现程度因患者年龄、职业和骨折部位的不同而有所区别。[数据:实体 (3273); 关系 (2853, 2857, 2851, 3450, 2737 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"关节内骨折是导致创伤性关节炎的主要原因之一。若未完全复位，关节面不平整，活动时可能出现疼痛，并可能引发关节退行性变和骨端边缘骨质增生。[数据:实体 (1382); 关系 (2736, 2859, 2851, 3449, 3450 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"骨折线通过关节面可能导致创伤性关节炎或腕关节功能障碍。骨折线的可见性和整复情况对关节健康至关重要，尤其是在尺骨骨折和股骨颈骨折中。[数据:实体 (3224); 关系 (4512, 3449, 3450, 2851, 2853 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"腕关节功能障碍可能是骨折对位不良的后果，尤其与关节面和骨折线的整复情况相关。这种功能障碍可能影响患者的日常生活和活动能力。[数据:实体 (3666); 关系 (3450, 2851, 2737, 2859, 2736 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"肘三角与肘直线试验是检测肘关节脱位或关节内骨折的重要方法。这种检查手段有助于早期发现关节面损伤，从而采取适当的治疗措施。[数据:实体 (1435); 关系 (1074, 2736, 2859, 2851, 3449 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"前臂双骨折是社区中较为复杂的骨折类型，其诊断和治疗需要特别关注，以避免对关节面和腕关节功能造成不良影响。[数据:实体 (3169); 关系 (2695, 2736, 2859, 2851, 3449 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"干骺端骨折对位要求较高，需力争功能复位以避免后续关节问题。这种骨折类型与创伤性关节炎和腕关节功能障碍有潜在联系。[数据:实体 (3274); 关系 (2857, 2736, 2859, 2851, 3449 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"解剖复位是骨折治疗中的理想目标，但若未达到解剖复位，可能导致创伤性关节炎。解剖复位的实现程度对关节面的恢复和功能至关重要。[数据:实体 (3224); 关系 (2364, 2851, 2736, 2859, 3449 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"创伤性关节炎可能伴随骨刺形成、月骨脱位或坏死等并发症，这些因素进一步影响关节面的结构和功能。[数据:实体 (1562); 关系 (2736, 2859, 2851, 3449, 2737 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"该社区的实体之间存在复杂的相互关系，骨折、关节面、功能复位和创伤性关节炎等实体构成了一个影响关节健康的网络。这些关系表明，骨折的治疗和复位质量对关节功能和长期健康有深远影响。[数据:实体 (3487, 1562, 3169, 1382, 3273); 关系 (4512, 2695, 2853, 2736, 2859 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,,,\n            \"explanation\": \"骨折线的可见性和整复情况是评估关节面恢复和功能复位的重要指标，尤其是在尺骨骨折和股骨颈骨折中。[数据:实体 (3224); 关系 (4512, 3449, 2851, 2736, 2859 +more)]\"\n        ,\n                \"summary\": \"社区中存在多种骨折类型，每种类型都可能影响关节面和关节功能\",\n            \"explanation\": \"社区中涉及的骨折类型包括前臂双骨折、干骺端骨折、骨干骨折成角畸形愈合等，这些骨折类型都可能对关节面造成损伤，进而引发创伤性关节炎或腕关节功能障碍。[数据:实体 (3169, 3274, 3205); 关系 (2695, 2857, 2737, 2859, 3449 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"创伤性关节炎的潜在影响包括疼痛、关节退行性变和骨端边缘骨质增生，这些症状可能对患者的生活质量产生重大影响。[数据:实体 (1562); 关系 (2736, 2859, 2851, 3449, 2737 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"该社区的实体关系表明，骨折的治疗和复位质量是预防创伤性关节炎和腕关节功能障碍的关键因素。因此，医疗专业人员在处理这些骨折时需要特别关注关节面的恢复情况。[数据:实体 (3487, 1562, 3273, 1382, 3224); 关系 (4512, 2853, 2736, 2859, 3449 +more)]\"\n        ,\n         \"\":\n            \"summary`: \"  ,\n            \"explanation\": \"腕关节功能障碍是骨折对位不良的直接后果，这可能影响患者的日常活动和生活质量。[数据:实体 (3666); 关系 (3450, 2851, 2737.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"神经损伤及其相关医学处理\",\n    \"summary\": \"该社区以神经损伤为核心实体，与多种医学处理方法、症状和神经结构相关联。神经损伤可导致肌肉瘫痪、感觉障碍、TINEL征、神经失用症等，并与神经吻合术、神经束膜吻合术、神经外膜吻合术、神经束膜外膜联合吻合术等治疗方法相关。此外，神经损伤还与腰丛、骶丛、股神经等神经结构相关，其恢复效果与手术操作的细致程度密切相关。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"神经损伤及其相关处理方法在医学领域具有重要性，但其影响主要局限于医疗和康复领域，对社会整体影响有限。\",\n    \"findings\": [\n        {\n            \"summary\": \"神经损伤是社区的核心实体\",\n            \"explanation\": \"神经损伤是该社区的中心实体，与多个其他实体如肌肉瘫痪、感觉障碍、TINEL征、神经失用症、神经吻合术等存在直接关系。这表明神经损伤是理解该社区结构和动态的关键点。[数据:实体 (1362); 关系 (2298, 2724, 2302, 2305, 2335 +more)]\"\n        },\n        {\n            \"summary\": \"神经损伤可导致多种症状\",\n            \"explanation\": \"神经损伤可引发肌肉瘫痪、感觉障碍、TINEL征和神经失用症等。这些症状是神经损伤的直接后果，对患者的生理功能和生活质量有显著影响。[数据:关系 (2298, 2724, 2302, 2305, 2340 +more)]\"\n        },\n        {\n            \"summary\": \"神经损伤的治疗涉及多种神经吻合术\",\n            \"explanation\": \"神经损伤的治疗包括神经吻合术、神经束膜吻合术、神经外膜吻合术和神经束膜外膜联合吻合术等。这些手术方法根据损伤部位和程度进行选择，以最大程度地恢复神经功能。[数据:关系 (2335, 2337, 2338, 2339, 2741 +more)]\"\n        },\n        //{\n        \"summary\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        \"explanation\"  ,\n        //{\n        \"summary\"  ,\n        \"explanation\"  ,\n        \"explanation\"  \n\n        ],\n        \"explanation\": \"手术探查是用于治疗严重内出血的医疗方法，与神经损伤相关联，特别是在处理伴有深度而持久休克的患者时。手术探查的实施可能对患者的恢复效果产生重要影响。[数据:实体 (3460); 关系 (6394)]\"\n    \n\n```.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨膜下脓肿与骨髓炎相关病理\",\n    \"summary\": \"该社区以骨膜下脓肿为核心实体，与死骨、局限性脓肿、弥漫性骨髓炎、蜂窝织炎等病理现象密切相关，同时与干骺端、骨骺损伤、单纯骨结核等骨骼疾病和中医病因病机存在联系。这些实体共同构成了骨髓炎及其相关并发症的病理网络。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"该社区涉及多种骨骼疾病和感染性病理，可能对患者健康造成中等程度影响，但主要为医学领域内的病理关联。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨膜下脓肿是核心病理实体\",\n            \"explanation\": \"骨膜下脓肿是该社区的核心实体，与多个病理现象和骨骼疾病存在直接关系。它可导致死骨、局限性脓肿、弥漫性骨髓炎、蜂窝织炎和急性炎症等病理变化，表明其在骨骼感染和损伤中的重要性。[数据:实体 (6039), 关系 (6774, 6777, 6778, 6779, 6780 +more)]\"\n        },\n        {\n            \"summary\": \"骨膜下脓肿与死骨的形成密切相关\",\n            \"explanation\": \"骨膜下脓肿可导致死骨的形成，这是骨髓炎发展过程中的重要病理特征。死骨的形成通常与供血被阻塞有关，可能影响骨骼的修复和功能。[数据:关系 (6774), 实体 (6040)]\"\n        },\n        {\n            \"summary\": \"骨膜下脓肿可扩散至软组织\",\n            \"explanation\": \"骨膜下脓肿不仅局限于骨骼内部，还可能扩散至软组织，形成蜂窝织炎或软组织脓肿。这种扩散可能增加感染的复杂性，并对周围组织造成进一步损害。[数据:关系 (6780, 6781), 实体 (6045, 6046)]\"\n        },\n        {\n            \"summary\": \"骨膜下脓肿与骨髓炎的转归相关\",\n            \"explanation\": \"骨膜下脓肿是骨髓炎发展过程中可能出现的病理现象，其进一步发展可能导致弥漫性骨髓炎。这种转归表明骨膜下脓肿可能成为更严重骨骼感染的前兆。[数据:关系 (6779), 实体 (6044)]\"\n        },\n        {\n            \"summary\": \"干骺端与骨骺损伤存在直接联系\",\n            \"explanation\": \"干骺端是骨骼的一部分，与多种骨骺损伤类型直接相关，包括Ⅱ型和Ⅳ型骨骺损伤。这些损伤通常表现为骨折块的形成和骨膜的断裂，是骨骼疾病中的重要病理特征。[数据:关系 (4524, 4525, 4526), 实体 (1542, 4515, 4517)]\"\n        },\n        {\n            \"summary\": \"单纯骨结核与骨质破坏和空洞形成相关\",\n            \"explanation\": \"单纯骨结核是该社区中的重要实体，与骨质破坏和空洞形成密切相关。这些病理特征是单纯骨结核的典型表现，可能影响骨骼结构和功能。[数据:关系 (6963, 6969), 实体 (6178, 6196, 1597)]\"\n        },\n        {\n            \"summary\": \"中医病因病机与骨骼感染相关\",\n            \"explanation\": \"热毒注骨和创口毒盛是中医中与骨骼感染相关的病因病机，它们可导致骨膜下脓肿的形成。这表明中医理论在解释骨骼感染的成因方面具有一定的关联性。[数据:关系 (6766, 6767), 实体 (6027, 6028)]\"\n        },\n        {\n            \"summary\": \"骨髓腔是脂肪栓塞综合征的来源\",\n            \"explanation\": \"骨髓腔是骨骼内部的空腔，其中含有骨髓，是脂肪栓塞综合征中脂肪滴的来源部位。在骨折不愈合的情况下，骨髓腔可能被封闭，影响骨骼的修复过程。[数据:实体 (2861), 关系 (2428)]\"\n        },\n        {\n            \"summary\": \"炎症吸收是骨膜下脓肿的转归之一\",\n            \"explanation\": \"骨膜下脓肿可能通过炎症吸收这一过程得到缓解，这是其可能的转归之一。然而，如果未能吸收，可能进一步发展为其他更严重的病理状态。[数据:关系 (6777), 实体 (6048)]\"\n        },\n        {\n            \"summary\": \"骨骺损伤的类型与干骺端的病理特征相关\",\n            \"explanation\": \"Ⅱ型和Ⅳ型骨骺损伤是干骺端的典型病理表现，分别表现为三角形或片状骨折块以及较长的骨折块和骨膜断裂。这些损伤类型在骨骼疾病中具有重要意义。[数据:关系 (4525, 4526), 实体 (1542, 4515, 4517)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"皮肤感觉障碍与椎间盘突出相关神经根\",\n    \"summary\": \"该社区围绕皮肤感觉障碍和不同椎间盘突出病症展开, 其中皮肤感觉障碍与多个神经根相关, 并由椎间盘突出病症引起。这些实体之间通过神经根的压迫关系相互连接, 表明了它们在医学和病理学上的紧密联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学病理信息, 对公共健康有一定影响, 但不具有直接的社会或法律风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"皮肤感觉障碍是核心实体\",\n            \"explanation\": \"皮肤感觉障碍是该社区的核心实体, 与多个神经根相关, 并由椎间盘突出病症引起。它在社区中具有较高的连接度, 表明其在病理学上的重要性。[数据:实体 (5438); 关系 (6063)]\"\n        },\n        {\n            \"summary\": \"椎间盘突出病症与神经根的压迫关系\",\n            \"explanation\": \"椎间盘突出病症与特定神经根之间存在直接的压迫关系, 这些关系是理解皮肤感觉障碍症状的关键。例如, 腰3、4椎间盘突出压迫腰4神经根, 腰4、5椎间盘突出压迫腰5神经根, 腰5骶1椎间盘突出压迫骶1神经根。[数据:关系 (6081, 6082, 6083)]\"\n        },\n        {\n            \"summary\": \"不同椎间盘突出病症影响不同区域\",\n            \"explanation\": \"不同椎间盘突出病症影响不同的皮肤感觉区域。例如, 腰3、4椎间盘突出影响大腿前侧、小腿前内侧, 腰4、5椎间盘突出影响小腿前外侧、足背前内侧和足底, 腰5骶1椎间盘突出影响小腿后外侧和足背外侧。[数据:实体 (5451, 5452, 5453)]\"\n        },\n        {\n            \"summary\": \"神经根实体具有较低的连接度\",\n            \"explanation\": \"神经根实体如腰4神经根、腰5神经根和骶1神经根在社区中具有较低的连接度, 表明它们主要作为中间实体, 与椎间盘突出病症和皮肤感觉障碍相关联。[数据:实体 (5464, 5465, 5466); 关系 (6081, 6082, 6083)]\"\n        },\n        {\n            \"summary\": \"皮肤感觉障碍与神经根的直接关系\",\n            \"explanation\": \"皮肤感觉障碍与神经根之间存在直接关系, 说明其症状是由神经根受累引起的。这种关系对于诊断和治疗具有重要意义。[数据:关系 (6063)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"脊柱推扳法与腰部相关疾病\",\n    \"summary\": \"该社区以脊柱推扳法为核心, 与腰部、腰椎结核、腰肌痉挛、神经根粘连、椎体破坏等实体存在紧密联系。脊柱推扳法是一种理筋手法, 用于调理脊柱问题, 并与多种腰部疾病相关。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"脊柱推扳法与多种腰部疾病相关, 可能对患者健康产生一定影响, 但其作为治疗手段的潜在风险尚不明确。\",\n    \"findings\": [\n        {\n            \"summary\": \"脊柱推扳法是社区的核心实体\",\n            \"explanation\": \"脊柱推扳法是该社区的关键实体, 与椎间盘、神经根粘连、椎体破坏等实体有直接关系。它是一种理筋手法, 用于使突出的椎间盘回纳、松解神经根粘连以及调理因椎体破坏导致的脊柱问题。[数据:实体 (5473), 关系 (6109, 6111, 6107, 6093, 6031 +more)]\"\n        },\n        {\n            \"summary\": \"腰部是社区的重要组成部分\",\n            \"explanation\": \"腰部是社区中的一个关键实体, 与多种疾病和症状相关, 包括腰肌痉挛、腰部扭挫伤等。其作为脊柱推扳法的关联实体, 表明了其在治疗和疾病表现中的重要性。[数据:实体 (337), 关系 (230, 6031, 6109, 6092, ...) +more)]\"\n        },\n        {\n            \"summary\": \"腰椎结核与多种症状和治疗手段相关\",\n            \n            \n        \"explanation\": \"腰椎结核是社区中的重要疾病实体, 与腰肌痉挛、椎体破坏、寒性脓肿等实体相关, 并且可以通过手法治疗进行缓解。这表明腰椎结核在社区中具有较高的复杂性和关联性。[数据:实体 (1)...\"\n        },\n        {\n            \"summary\": \"腰肌痉挛是多种脊柱疾病的症状\",\n            \"explanation\": \"腰肌痉挛是社区中的一个关键症状, 与腰椎间盘突出症、腰椎结核等疾病相关。脊柱推扳法可用于缓解腰肌痉挛, 这表明该症状在社区中具有较高的临床相关性。[数据:实体 (5416), 关系 (6031, 6092, ...) +more)]\"\n        },\n        {\n            \"summary\": \"...\",\n            \"explanation\": \"...\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"肱骨干骨折及其相关治疗与并发症\",\n    \"summary\": \"社区以肱骨干骨折为中心, 与移位、分离移位、短缩、虎口区感觉异常等骨折相关问题以及上1/3骨折复位法、中1/3骨折复位法等治疗方法紧密相关。此外, 创伤骨科微创技术也被提及为减少相关并发症风险的重要手段。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"肱骨干骨折及其相关并发症和治疗方法对患者康复和医疗资源分配有一定影响, 但总体风险可控。\",\n    \"findings\": [\n        {\n            \"summary\": \"肱骨干骨折是社区的核心实体\",\n            \"explanation\": \"肱骨干骨折是该社区的关键实体, 与多种骨折表现和治疗方法相关。它在社区中具有高度连接性, 与移位、分离移位、短缩、虎口区感觉异常等实体以及上1/3骨折复位法、中1/3骨折复位法等治疗方法存在直接关系。[数据:实体 (183), 关系 (156, 3073, 3074, 3076, 3080, 3082 +more)]\"\n        },\n        {\n            \"summary\": \"移位是肱骨干骨折的常见表现\",\n            \"explanation\": \"移位是肱骨干骨折的常见表现之一, 并且在骨折治疗过程中可能进一步恶化。移位可能导致骨折端错位, 需要通过X线检查或调节外固定器予以矫正。[数据:实体 (2246), 关系 (2689)]\"\n        },\n        {\n            \"summary\": \"上1/3和中1/3骨折复位法是主要治疗方法\",\n            \"explanation\": \"上1/3骨折复位法和中1/3骨折复位法是针对肱骨干骨折的两种主要治疗方法。这两种方法在社区中被频繁提及, 表明它们在治疗肱骨干骨折中的重要性。[数据:关系 (3073, 3074)]\"\n        },\n        {\n            \"summary\": \"肱骨干骨折可能导致多种并发症\",\n            \"explanation\": \"肱骨干骨折可能引发多种并发症, 包括迟缓愈合、不愈合、内固定失效、应力遮挡和局部血运破坏。这些并发症可能对患者的康复过程产生重大影响, 并增加治疗的复杂性。[数据:实体 (2355, 2356, 2352, 2353, 2354), 关系 (2015, 2016, 2011, 2012, 2013 +more)]\"\n        },\n        {\n            \"summary\": \"创伤骨科微创技术用于减少并发症风险\",\n            \"explanation\": \"创伤骨科微创技术被提及为减少肱骨干骨折相关并发症风险的重要手段。它被用于降低迟缓愈合、不愈合、内固定失效、应力遮挡和局部血运破坏的发生概率。[数据:关系 (2015, 2016, 2011, 2012, 2013 +more)]\"\n        },\n        {\n            \"summary\": \"虎口区感觉异常是桡神经损伤的重要指标\",\n            \"explanation\": \"虎口区感觉异常是检查桡神经是否受损的重要指标, 与肱骨干骨折直接相关。这表明骨折可能对周围神经造成影响, 并需要在治疗过程中加以关注。[数据:实体 (3415), 关系 (3082)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 6 column 4 (char 286)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"脊柱微创技术与相关治疗方法\",\n    \"summary\": \"该社区围绕脊柱微创技术展开, 与多种治疗方法和设备相关联, 包括脊柱内镜、手术器械、经皮椎间切吸术、经皮穿刺化学髓核溶解术、经皮椎间盘髓核消融术和经皮椎体成形术。这些实体之间存在紧密的技术和应用关系, 体现了脊柱微创技术在骨伤科领域的重要地位。\",\n    \"rating\": 7.5,\n    \"rating_explanation\": \"脊柱微创技术及其相关治疗方法在骨伤科领域具有较高的重要性, 并且涉及多种关键设备和应用方式, 因此影响严重程度评级为较高。\",\n   <\"findings\": [  \"    :\"\",\n        \"summary\": \"脊柱微创技术是社区的核心实体\",\n        \"explanation\": \"脊柱微创技术是该社区的关键实体, 与多种治疗方法和设备有直接关系。它在骨伤科领域中被广泛应用, 并且是其他疗法的重要组成部分。这种技术的重要性体现在其与多个实体的联系上, 包括手术器械、脊柱内镜以及各种具体的手术方法。[数据:实体 (170), 关系 (2024, 2025, 2020, 2021, 2022 +more)]\"\n    }.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"创口与骨伤科\",\n    \"summary\": \"社区以创口为中心, 创口是创伤造成的伤口, 与骨伤科、创缘、创腔、创底等实体相关。这些实体共同构成了与伤口及其处理相关的知识网络, 用于评估损伤性质和护理方式。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区的重要性评分较低, 因为它主要涉及医学术语和护理流程, 对公共安全或社会影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"创口是社区的核心实体\",\n            \"explanation\": \"创口是这个社区的中心实体, 是创伤造成的伤口, 并且在骨伤科患者中是常见的表现。创口与多个其他实体(如创缘、创腔、创底)有直接关系, 表明其在医学知识网络中的重要性。[数据:实体 (1138); 关系 (2087, 2088, 2089, 899)]\"\n        },\n        {\n            \"summary\": \"创口与骨伤科的关联\",\n            \"explanation\": \"创口与骨伤科之间存在直接关系, 骨伤科处理创口这一常见损伤。这种关系表明创口在骨伤科领域的重要性, 并可能影响后续的治疗和护理流程。[数据:关系 (899)]\"\n        },\n        {\n            \"summary\": \"创口的组成部分\",\n            \"explanation\": \"创口包含多个组成部分, 包括创缘、创腔和创底。这些组成部分是评估创口性质和处理方式的重要因素。[数据:关系 (2087, 2088, 2089)]\"\n        },\n        {\n            \"summary\": \"创面与开窗处理的关系\",\n            \"explanation\": \"创面需要开窗处理以确保伤口透气和护理。这种处理方式是石膏固定后护理的重要步骤, 与创面的性质和位置密切相关。[数据:关系 (1800)]\"\n        },\n        {\n            \"summary\": \"创口的医学评估重要性\",\n            \"explanation\": \"创口的大小、深浅及污染情况是判断损伤性质的重要依据。详细询问创口的形成时间、处理经过及出血情况有助于全面评估伤情。[数据:实体 (1138)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"上海市伤骨科研究所与中医骨伤科\",\n    \"summary\": \"社区以上海市伤骨科研究所为中心, 该研究所是中医骨伤科的重要研究机构, 与石筱山、王子平等知名骨伤科专家以及《正骨疗法》等代表性著作存在联系。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"该社区主要涉及中医骨伤科领域, 其影响主要体现在医学研究和传承方面, 严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"上海市伤骨科研究所是中医骨伤科的重要研究机构\",\n            \"explanation\": \"上海市伤骨科研究所是20世纪50年代首先成立的骨伤科研究机构, 属于中医骨伤科领域。这一信息表明该研究所在医学研究和传承方面具有重要地位。[数据:实体 (683), 关系 (439)]\"\n        },\n        {\n            \"summary\": \"王子平与上海市伤骨科研究所存在潜在联系\",\n            \"explanation\": \"王子平是上海骨伤科八大家之一, 与上海市伤骨科研究所存在潜在联系, 可能与研究所的建立有关。这表明王子平在该社区中可能扮演了重要角色。[数据:实体 (664), 关系 (449)]\"\n        },\n        {\n            \"summary\": \"石筱山是中医骨伤科的重要人物\",\n            \"explanation\": \"石筱山是上海著名的骨伤科医生, 其著作《正骨疗法》具有代表性。这表明他在中医骨伤科领域有重要贡献, 并且与该社区的核心内容密切相关。[数据:实体 (662), 关系 (445)]\"\n        },\n        {\n            \"summary\": \"《正骨疗法》是社区的重要文献\",\n            \"explanation\": \"《正骨疗法》是石筱山的著作, 在中医骨伤科领域具有代表性。该文献可能是社区内医学研究和实践的重要参考, 对传承和发展中医骨伤科有深远影响。[数据:实体 (673), 关系 (445)]\"\n        },\n        {\n            \"summary\": \"社区成员之间存在历史和学术联系\",\n            \"explanation\": \"上海市伤骨科研究所与王子平、石筱山等历史人物和《正骨疗法》等学术著作存在联系, 这表明社区成员之间有历史和学术上的纽带, 有助于理解中医骨伤科的发展脉络。[数据:关系 (439, 449, 445)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"中医骨伤科及其相关理论与治疗方法\",\n    \"summary\": \"该社区以中医骨伤科为核心，与骨伤科医院、中医学院、中医学校、多种治疗方法及脏腑学说等实体紧密相连，反映了中医骨伤科在医学体系中的重要地位及其理论和实践的广泛影响。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"中医骨伤科作为传统医学的重要分支，其治疗方法和理论体系对医疗实践和学术研究具有广泛影响，因此影响严重程度评级为较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"中医骨伤科是社区的核心\",\n            \"explanation\": \"中医骨伤科是该社区的中心实体，与多个实体如骨伤科医院、中医学院、中医学校、治疗方法和脏腑学说等存在直接联系。这表明中医骨伤科在医学体系中具有重要地位，并且是多个相关活动和理论的基础。[数据:实体 (395), 关系 (435, 440, 441, 469, 470 +more)]\"\n        },\n        {\n            \"summary\": \"骨伤科医院是中医骨伤科的实践载体\",\n            \"explanation\": \"骨伤科医院是中医骨伤科通过实践形式发展的集中体现，为中医骨伤科的诊疗技术提供了实际应用的平台。这种实体关系反映了中医骨伤科从理论到临床的转化过程。[数据:关系 (435)]\"\n        },\n        {\n            \"summary\": \"中医学院和中医学校为中医骨伤科培养人才\",\n            \"explanation\": \"中医学院和中医学校是中医骨伤科发展的重要支撑，它们为中医骨伤科培养了大批专业人才。这种教育机构与医学分支的联系对于中医骨伤科的持续发展和传承至关重要。[数据:关系 (440, 441)]\"\n        },\n        {\n            \"summary\": \"多种治疗方法与中医骨伤科密切相关\",\n            \"explanation\": \"中医骨伤科使用了多种治疗方法，如中药外治、练功方法、动静结合、筋骨并重、内外兼治和医患合作等。这些方法构成了中医骨伤科治疗骨折和骨病的重要组成部分。[数据:关系 (469, 470, 471, 472, 473 +more)]\"\n        },\n        {\n            \"summary\": \"脏腑学说指导中医骨伤科治疗\",\n            \"explanation\": \"中医骨伤科通过脏腑学说指导治疗，如肝主筋、肾主骨、脾主肌肉等理论，这些理论为中医骨伤科的治疗方法提供了理论依据。脏腑学说与中医骨伤科的联系体现了中医整体观念在骨病治疗中的应用。[数据:关系 (6755, 6759, 6760, 6761, 6763 +more)]\"\n        },\n        {\n            \"summary\": \"中华中医药学会骨伤科分会推动学术研究\",\n            \"explanation\": \"中华中医药学会骨伤科分会是中医骨伤科领域的重要学术组织，自1986年成立以来，一直致力于推动中医骨伤科学术研究。这种组织与医学分支的联系有助于提升该领域的专业水平和影响力。[数据:关系 (479)]\"\n        },\n        {\n            \"summary\": \"世界中医药学会联合会骨伤科专业委员会促进国际交流\",\n            \"explanation\": \"世界中医药学会联合会骨伤科专业委员会自2005年成立以来，促进了海内外骨伤科学术交流，这表明中医骨伤科在国际医学界具有一定的影响力和认可度。[数据:关系 (480)]\"\n        },\n        {\n            \"summary\": \"中医骨伤科治疗多种骨病\",\n            \"explanation\": \"中医骨伤科采用多种治疗方法，包括治疗骨缺血性坏死、治疗骨髓炎、治疗骨关节炎和治疗跑外翻及相关畸形等。这些治疗方法的广泛应用表明中医骨伤科在骨病治疗领域具有重要地位。[数据:关系 (482, 486, 487, 488)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 20 column 13 (char 966)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"踝关节扭伤与感染相关医疗社区\",\n    \"summary\": \"该社区以踝关节扭伤和感染为核心，涉及多种医疗设备和治疗方法，如绷带、胶布、导尿管、包扎法、酒精、中药方剂等。这些实体之间通过治疗、预防和并发症等关系相互关联，反映了医疗处理中感染风险和相关应对措施的重要性。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"由于感染是多种医疗情况中的常见并发症，且与多个关键医疗实体相关，因此影响严重程度评级为中高。\",\n    \"findings\": [\n        {\n            \"summary\": \"踝关节扭伤是社区的核心实体\",\n            \"explanation\": \"踝关节扭伤是该社区的主要焦点，其描述中提到需要理筋手法进行治疗，并且与韧带松弛和习惯性踝关节扭伤等实体相关。这表明踝关节扭伤在社区中具有较高的重要性，并可能引发一系列相关医疗问题。[数据:实体 (5302), 关系 (5817, 5828, 5838 +more)]\"\n        },\n        {\n            \"summary\": \"感染是社区中的关键并发症\",\n            \"explanation\": \"感染是多个医疗实体的共同关联点，包括导尿管、绷带、胶布、包扎法、酒精、中药方剂等。感染可能由多种医疗操作不当引起，如伤口处理、针眼清洁、导尿管使用等，因此在社区中具有较高的影响性。[数据:实体 (2105, 2231), 关系 (4335, 2062, 2063, 2064, 2067 +more)]\"\n        },\n        {\n            \"summary\": \"绷带和胶布用于外固定和皮肤牵引\",\n            \"explanation\": \"绷带和胶布是用于外固定和皮肤牵引的医疗设备，它们在固定肢体和防止感染方面起着重要作用。这些设备的使用需要遵循特定的包扎方法，以确保其效果并减少并发症。[数据:实体 (2056, 2105), 关系 (1682, 1817 +more)]\"\n        },\n        {\n            医疗设备和方法在预防感染中起关键作用\n            \"explanation\": \"环形包扎法、螺旋形包扎法、保护性包扎、钳夹止血法等医疗方法和设备被明确用于预防感染。这些方法通过保护创面、减少伤口暴露和保持无菌环境来降低感染风险，表明社区对感染预防的高度重视。[数据:关系 (2062, 2063, 2064, 2066, 2067 +more)]\"\n        },\n        {\n            \"summary\": \"中药方剂用于控制感染\",\n            \"explanation\": \"八正散、导赤散、龙胆泻肝汤和清瘟败毒饮等中药方剂被明确用于控制感染。这些方剂在社区中与感染实体有直接关系，表明传统医学在感染治疗中的重要性。[数据:关系 (4336, 4337, 6381, 6382 +more)]\"\n        },\n        {\n            \"summary\": \"导尿管与感染和结石相关\",\n            \"explanation\": \"导尿管是社区中与感染和结石相关的医疗设备。长时间留置导尿管可能导致尿路感染和结石，这表明导尿管的使用需要特别注意预防措施，以减少并发症的发生。[数据:实体 (3190), 关系 (2732, 2733, 4335 +more)]\"\n        },\n        {\n            \"summary\": \"掌骨干骨折与手法整复相关\",\n            \"explanation\": \"掌骨干骨折是社区中的一个关键实体，其描述中提到可采用手法整复进行治疗。这表明社区中存在针对骨折的特定治疗方法，并且与骨折相关的处理和修复措施紧密相连。[数据:实体 (3726), 关系 (3527 +more)]\"\n        },\n        {\n            \"summary\": \"无效腔是感染的潜在诱因\",\n            \"explanation\": \"无效腔是社区中与感染相关的实体，其描述中提到缝合时不能留有无效腔，否则易积液感染。这表明在医疗处理中，避免无效腔的形成是预防感染的重要步骤。[数据:实体 (2506), 关系 (2145 +more)]\"\n        },\n        {\n            \"summary\": \"二期缝合和植皮修复用于感染伤口\",\n            \"explanation\": \"二期缝合和植皮修复是社区中与感染伤口相关的修复方法。这些方法被用于处理感染伤口，以减少进一步的并发症并促进愈合。[数据:实体 (2509, 2510), 关系 (2147, 2148 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"牵引与骨折治疗社区关系网络\",\n    \"summary\": \"该社区围绕牵引这一核心医疗技术展开，涉及多种骨折类型、整复方法和相关医疗工具。牵引与移位骨折、股骨颈骨折、肱骨干骨折等实体有直接联系，同时与屈髋屈膝法、提按、骨圆针等实体存在功能性关系，表明其在骨科治疗中的重要性。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"牵引在多种骨折治疗中扮演关键角色，其应用广泛且技术复杂，因此对医疗实践和患者康复具有较高影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"牵引是社区的核心实体\",\n            \"explanation\": \"牵引是该社区的关键医疗技术，与多个骨折类型和整复方法相关联，包括移位骨折、股骨颈骨折、肱骨干骨折等。它在骨折治疗中具有重要作用，如纠正骨折移位、维持骨折段稳定等。[数据:实体 (1511); 关系 (1660, 3622, 4901, 4902)]\"\n        },\n        {\n            \"summary\": \"移位骨折与复位方法密切相关\",\n            \"explanation\": \"移位骨折是需要复位治疗的骨折类型，而复位是用于治疗移位骨折的方法。这种关系表明移位骨折的治疗过程需要专业复位操作，以确保骨折的正确整复。[数据:实体 (3647); 关系 (3433)]\"\n        },\n        {\n            \"summary\": \"屈髋屈膝法包含多个关键步骤\",\n            \"explanation\": \"屈髋屈膝法是一种用于纠正股骨颈骨折的整复方法，其中包含外展内旋、伸直下肢和手掌试验等步骤。这些步骤分别用于纠正成角畸形、使骨折面紧密接触以及判断复位是否成功。[数据:实体 (3798); 关系 (3623, 3624, 3625)]\"\n        },\n        {\n            \"summary\": \"骨圆针是牵引的重要辅助工具\",\n            \"explanation\": \"骨圆针是一种用于骨科牵引和骨折复位的医疗设备，常用于贯穿大转子部前后位以辅助侧方牵引，也可用于撬拨复位跟骨骨折。相比克氏针，骨圆针在某些情况下更为稳妥。[数据:实体 (2201); 关系 (3986)]\"\n        },\n        {\n            \"summary\": \"持续牵引复位法是牵引的一种应用方式\",\n            \"explanation\": \"持续牵引复位法是牵引在临床中的具体应用，用于骨折复位过程中维持牵引效果。该方法通常需要结合带环螺丝钉等工具进行操作，以确保牵引的稳定性和有效性。[数据:实体 (4197); 关系 (4901, 4894)]\"\n        },\n        {\n            \"summary\": \"术者在整复操作中发挥关键作用\",\n            \"explanation\": \"术者是执行整复操作的医疗人员，负责进行正骨手法操作，如拔伸等。术者在骨折治疗过程中直接参与复位和牵引操作，其专业技能和操作准确性对治疗效果有直接影响。[数据:实体 (1912); 关系 （1489）]\"\n        },\n        {\n            \"summary\": \"旋转用于矫正肱骨干骨折的旋转畸形\",\n            \"explanation\": \"旋转是关节活动方式的一种，用于矫正肱骨干骨折的旋转畸形。这种操作在骨折复位过程中至关重要，以确保骨骼正确对齐并恢复功能。[数据:实体 (1341); 关系 (1490)]\"\n        },\n        {\n            \"summary\": \"提按用于矫正股骨干骨折的侧方移位\",\n            \"explanation\": \"提按是正骨手法中用于矫正骨折侧方移位的操作，也是骨折复位时常用的基本手法之一。该手法在股骨干骨折的治疗中尤为重要，以确保骨折部位的正确复位。[数据:实体 (1906); 关系 (1498)]\"\n        },\n        {\n            \"summary\": \"髋臼骨折需要牵引直至愈合\",\n            \"explanation\": \"髋臼骨折是一种骨盆骨折，其治疗过程中需要牵引，且牵引需等到骨折愈合后才能解除。这种长期依赖表明牵引在髋臼骨折治疗中的重要性和持续性。[数据:实体 (4412); 关系 (4902)]\"\n        },\n        {\n            \"summary\": \"手掌试验用于判断股骨颈骨折复位是否成功\",\n            \"explanation\": \"手掌试验是用于判断股骨颈骨折是否复位成功的检查方法。该方法在屈髋屈膝法中被使用，是评估治疗效果的重要工具，有助于确保患者得到适当的后续治疗。[数据实体 (3801); 关系 (3625)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"叉手托上和肩肘部运动练习\",\n    \"summary\": \"社区以叉手托上为中心，这是一种肩肘部运动练习，与手指爬墙、健肢、患臂等实体相关。这些实体共同构成了一个与康复训练相关的网络，其中叉手托上和手指爬墙是主要的练习方法，健肢和患侧是练习中的关键身体部位，而滑车装置则用于另一种康复训练方法——手拉滑车。\",\n    \"rating\": 2.0,\n    \"rating_explanation\": \"社区的影响严重程度较低，因为它主要涉及康复训练方法和身体部位，与公共安全或重大社会事件无关。\",\n    \"findings\": [\n        {\n            \"summary\": \"叉手托上是社区的核心实体\",\n            \"explanation\": \"叉手托上是社区中描述最详细、关联度最高的实体，它与手指爬墙、健肢、患臂等实体有直接关系。这种练习方法在康复训练中具有重要作用，表明其在社区中的中心地位。[数据:实体 (2313); 关系 (1976, 1978, 1977)]\"\n        },\n        {\n            \"summary\": \"手指爬墙是另一种肩肘部运动练习\",\n            \"explanation\": \"手指爬墙是社区中的另一个关键实体，它与叉手托上一样，属于肩肘部的运动练习。这种练习方法通过患侧手指沿墙爬行来帮助康复，表明社区中存在多种康复训练方法。[数据:实体 (2314); 关系 (1976, 1979)]\"\n        },\n        {\n            \"summary\": \"健肢在康复训练中起辅助作用\",\n            \"explanation\": \"健肢是社区中的重要实体，它在叉手托上练习中用于帮助患臂摆动。这种辅助作用表明健肢在康复训练中具有关键功能，是患者恢复过程中的重要组成部分。[数据:实体 (2318); 关系 (1978)]\"\n        },\n        {\n            \"summary\": \"患臂是叉手托上练习中的主要目标\",\n            \"explanation\": \"患臂是社区中的一个关键实体，它在叉手托上练习中被帮助摆动。这表明患臂是康复训练中的主要关注点，其状态和恢复情况对整个训练过程至关重要。[数据:实体 (2317); 关系 (1977)]\"\n        },\n        {\n            \"summary\": \"患侧是手指爬墙练习中的关键部位\",\n            \"explanation\": \"患侧是社区中的一个实体，它在手指爬墙练习中被使用，表明患侧是康复训练中的重要组成部分。这种练习方法通过患侧手指沿墙爬行来帮助康复，进一步强调了患侧在社区中的重要性。[数据:实体 (2344); 关系 (1979)]\"\n        },\n        {\n            \"summary\": \"滑车装置用于手拉滑车康复训练\",\n            \"explanation\": \"滑车装置是社区中的一个实体，它与手拉滑车练习直接相关。这种设备在康复训练中起到关键作用，表明社区中存在多种康复训练方法和工具。[数据:实体 (2335); 关系 (1982)]\"\n        },\n        {\n            \"summary\": \"手拉滑车是另一种康复训练方法\",\n            \"explanation\": \"手拉滑车是社区中的一个实体，它需要滑车装置进行训练。这种康复训练方法通过健肢带动患肢进行拉绳动作，表明社区中存在多种针对肩肘部的康复练习方式。[数据:实体 (2323); 关系 (1982)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"功能部位与一期缝合\",\n    \"summary\": \"该社区围绕功能部位和一期缝合展开, 涉及多个身体部位如胸腹部伤口、头面颈部、外生殖器、阴囊和手部。这些实体之间的关系表明, 一期缝合是处理这些伤口的重要步骤, 以避免影响功能。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区的重要性评分较低, 因为它主要涉及医学处理流程, 对公共安全或社会影响较小。\",\n    \"findings\": [\n        {\n            \"summary\": \"功能部位是核心实体\",\n            \"explanation\": \"功能部位是这个社区的核心实体, 与多个身体部位如关节、胸腹部伤口、头面颈部、外生殖器、阴囊和手部相关。这些部位的伤口处理都强调了一期缝合的重要性, 表明功能部位在医学处理中的关键作用。[数据:实体 (2520); 关系 (2125)]\"\n        },\n        {\n            \"summary\": \"一期缝合是关键处理步骤\",\n            \"explanation\": \"一期缝合是这个社区中的关键处理步骤, 与多个身体部位如胸腹部伤口、头面颈部、外生殖器、阴囊和手部相关。这些关系表明一期缝合在医学处理中被广泛强调, 以确保伤口愈合不会影响身体功能。[数据:实体 (2503); 关系 (2122, 2126, 2128, 2130, 2132 +more)]\"\n        },\n        {\n            \"summary\": \"胸腹部伤口的处理流程\",\n            \"explanation\": \"胸腹部伤口的处理流程包括清创和一期缝合。清创是胸腹部伤口处理的必要步骤, 以确保伤口适合一期缝合。这表明在医学处理中, 清创和一期缝合是紧密相连的步骤。[数据:实体 (2491, 2519); 关系 (2122, 2123)]\"\n        },\n        {\n            \"summary\": \"头面颈部伤口的特殊性\",\n            \"explanation\": \"头面颈部的伤口应尽量一期缝合以避免影响功能。这表明头面颈部在医学处理中具有特殊性, 因为其功能要求较高, 一期缝合对于保持其外观和功能至关重要。[数据:实体 (2492); 关系 (2126)]\"\n        },\n        {\n            \"summary\": \"手部伤口的处理要求\",\n            \"explanation\": \"手部的伤口应尽量一期缝合以避免影响功能。手部是上肢的一部分, 用于操作, 其功能要求灵活性高于稳定性。这表明手部伤口的处理在医学上具有较高的优先级。[数据:实体 (2503, 2495); 关系 (2132)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 139, in _read_model_from_json\n    return json_model.model_validate(value)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\pydantic\\main.py\", line 705, in model_validate\n    return cls.__pydantic_validator__.validate_python(\npydantic_core._pydantic_core.ValidationError: 1 validation error for CommunityReportResponse\nfindings\n  Field required [type=missing, input_value={'title': '瘀血化热...939), 关系 (6670)]'}]}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 115, in try_receive_json\n    model = self._read_model_from_json(raw_json, json_model)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 142, in _read_model_from_json\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response does not match the expected model, response={'title': '瘀血化热与活血散瘀汤', 'summary': '该社区围绕瘀血化热这一病症展开, 与活血散瘀汤、蒲公英、紫花地丁、金银花和栀子等中药方剂和药材密切相关。这些实体通过治疗关系相互连接, 形成一个以瘀血化热为中心的医疗网络。', 'rating': 3.0, 'rating_explanation': '瘀血化热是一种需要特定中药治疗的病症, 社区的严重性评级较低, 因为它主要涉及医疗领域, 且未显示对公共安全或社会秩序的直接影响。', 'findINGS': [{'summary': '瘀血化热是社区的核心病症', 'explanation': '瘀血化热是这个社区的关键实体, 与多个中药方剂和药材存在治疗关系。它在损伤初期可能出现, 需要活血散瘀和清热解毒的治疗方式。[数据:实体 (1233), 关系 (6830, 6880, 6881, 6882, 6884 +more)]'}, {'summary': '活血散瘀汤是主要治疗方剂', 'explanation': '活血散瘀汤是治疗瘀血化热的主要中药方剂, 与瘀血化热有直接的治疗关系。它通常与其他药材如蒲公英、紫花地丁、金银花和栀子配合使用以增强疗效。[数据:实体 (5938), 关系 (6880, 6669)]'}, {'summary': '蒲公英在治疗中起辅助作用', 'explanation': '蒲公英是一种清热解毒类中药, 常用于治疗瘀血化热的早期阶段, 通常与活血散瘀汤配合使用。它在治疗过程中起到辅助作用, 有助于减轻炎症和促进恢复。[数据:实体 (1840), 关系 (6883)]'}, {'summary': '湿敷洗涤是治疗瘀血化热的常用方法', 'explanation': '湿敷洗涤是一种用于治疗创伤和炎症的药物应用方式, 与多种中药如金银花煎水、野菊花煎水和黄柏溶液相关。这些药物常用于瘀血化热的治疗过程中, 以辅助清热解毒和消炎。[数据:实体 (1836), 关系 (1454, 1455, 1456)]'}, {'summary': '多种中药用于瘀血化热的治疗', 'explanation': '瘀血化热的治疗涉及多种中药, 包括金银花、野菊花、黄柏、紫花地丁和栀子。这些药材通常配合活血散瘀汤使用, 以达到活血散瘀和清热解毒的双重效果。[数据:实体 (4783, 6089, 6090, 1837, 1838, 1839), 关系 (6881, 6882, 6884)]'}, {'summary': '五神汤是瘀血化热的辅助治疗方剂', 'explanation': '五神汤是一种用于治疗瘀血化热的中药方剂, 通常与活血散瘀汤配合使用。虽然其使用频率较低, 但它在某些情况下可能被用于增强治疗效果。[数据:实体 (5939), 关系 (6670)]'}]}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 33 column 16 (char 1640)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"髋关节脱位及其相关医学实体\",\n    \"summary\": \"该社区围绕髋关节脱位展开，包括其多种类型如前脱位、中心性脱位、上脱位和下脱位，以及与之相关的医学实体，如闭孔神经、股动静脉、耻骨支和关节软骨。这些实体之间存在多种关联，包括损伤、治疗方式和解剖结构影响。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"髋关节脱位及其相关医学实体对健康和治疗有中等影响，但主要限于医学领域。\",\n    \"findings\": [\n        {\n            \"summary\": \"前脱位是髋关节脱位的重要类型\",\n            \"explanation\": \"前脱位是一种根据脱位方向分类的髋关节脱位类型，表现为远侧骨端向前移位，常伴有患髋疼痛、功能障碍以及患肢外展、外旋和轻度屈曲的典型畸形。前脱位还可能引起股动、静脉受压，导致下肢血循环障碍，同时股骨头停留在耻骨支水平或闭孔内，进一步影响相关结构。[数据:实体 (4543); 关系 (4856, 4859, 4860 +more)]\"\n        },\n        {\n            \"summary\": \"闭孔神经损伤与髋关节脱位相关\",\n            \"explanation\": \"闭孔神经损伤可能由髋关节脱位引起，特别是当股骨头停留在闭孔内时，可能压迫闭孔神经，导致大腿内收侧群瘫痪和大腿内侧面皮肤感觉障碍。这种损伤可能需要手术复位以解除压力。[ 数据:实体 (3846); 关系 (4424, 4860 +more)]\"\n        },\n        {\n            \"summary\": \"中心性脱位由外侧暴力作用于大转子引起\",\n            \"explanation\": \"中心性脱位是一种髋关节脱位类型，指骨端向关节中心移位，通常由外侧暴力作用于大转子引起，导致股骨头移位至盆腔内并可能伴随髋臼骨折。这种类型的脱位通常较为严重，可能需要复杂的治疗手段。[数据:实体 (4547); 关系 (4861 +more)]\"\n        },\n        {\n            \"summary\": \"关节软骨在髋关节脱位中起关键作用\",\n            \"explanation\": \"关节软骨是关节内部的重要结构，主要覆盖在骨骺上，为骨骺提供血供。在髋关节中心性脱位时，关节软骨通常损伤较严重，可能引发关节纤维性或骨性强直。此外，骨骺分离时，关节软骨的血管常遭破坏，引起骨骺和骺板缺血。[数据:实体 (873); 关系 (4504, 4547 +more)]\"\n        },\n        {\n            \"summary\": \"受伤史是诊断关节脱位的重要依据\",\n            \"explanation\": \"受伤史是诊断关节脱位的重要依据，包括暴力大小、方向、性质和受伤姿势。了解受伤史有助于确定脱位的类型和严重程度，从而制定合适的治疗方案。[数据:实体 (4548); 关系 (4573 +more)]\"\n        },\n        {\n            \"summary\": \"闭合复位是治疗关节脱位的一种方法\",\n            \t\t\t\"explanation\": \"闭合复位是用于治疗关节脱位的一种方法，通常在整复成功时可听到入臼声，表示关节已复位。然而，并非所有关节脱位都适合闭合复位，部分病例可能需要牵引治疗或手术干预。[数据:实体 (1190); 关系 (1918, 4573 +more)]\"\n        },\n        {\n            \"summary\": \"血管神经损伤可能伴随多种骨折\",\n            \t\t\t'explanation': \"血管神经损伤可能伴随肱骨髁上骨折，也可能因髋关节脱位导致股动、静脉受压，从而引发下肢血循环障碍。这种损伤通常需要及时诊断和治疗，以避免进一步的并发症。[数据:实体 (2342); 关系 (3194, 4856 +more)]' \"\n       \t\t:\n       \t{\n            \"summary\": \"先天性脱位是关节脱位的一种类型\",\n            \t\t\t\"explanation\": \"先天性脱位是由于胚胎发育异常或胎儿在母体内受外界因素影响引起的脱位，属于关节脱位的一种类型。这种脱位可能在出生时就存在，需要早期诊断和干预以防止长期功能障碍。[数据:实体 (4542); 关系 (4566 +more)]\"\n       \t\t},\n       \t\t\"explanation\": \"上脱位和下脱位是根据脱位方向分类的关节脱位类型，分别指远侧骨端向上或向下移位。这些分类有助于理解脱位的机制和影响，从而指导治疗方案的选择。[数据:实体 (4545, 4546); 关系 (4569, 4570 +more)]\"\n       \t\t},\n       \t\t{\n            \"summary\": \"髋关节脱位可能引发多种并发症\",\n            \t\t\t\"explanation\": \"髋关节脱位可能引发多种并发症，包括血管神经损伤、关节软骨破坏、骨骺缺血等。这些并发症可能需要多学科的治疗方法，如手术复位、牵引治疗或药物干预，以确保患者康复。[数据:实体 (1132, 3442, 4543, 4547, 873); 关系 (4566, 4569, 4570, 4573, 4856 +more)]\"\n       \t\t}\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"膝关节及其相关损伤与治疗\",\n    \"summary\": \"社区以膝关节为中心，涉及多种膝关节损伤、病理表现及治疗方式，包括膝关节脱位、肿胀、疼痛、功能障碍、弹响声等，以及治疗手段如中草药熏洗、股四头肌舒缩锻炼、长腿夹板固定等。此外，多个穴位如解溪、髀关、伏兔、双膝眼、阴陵泉等也与膝关节损伤的治疗相关。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"膝关节是人体重要关节，其损伤和病理表现可能对个体健康和生活质量造成中等影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"膝关节是社区的核心实体\",\n            \"explanation\": \"膝关节是本社区的关键实体，其结构、功能和损伤情况与多个其他实体相关，如膝关节脱位、肿胀、疼痛、功能障碍、弹响声等。膝关节的复杂性及其在下肢功能中的重要性表明其在社区中的中心地位。[数据:实体 (243); 关系 (199, 5694, 5695, 5696, 5697 +more)]\"\n        },\n        {\n            \"summary\": \"膝关节损伤与多种病理表现相关\",\n            \"explanation\": \"膝关节损伤可能导致多种病理表现，包括膝关节脱位、肿胀、疼痛、功能障碍、弹响声、积液、交锁征和关节内血肿。这些症状可能影响患者的行动能力和康复过程。[数据:关系 (199, 5693, 5694, 5695, 5696 +more)]\"\n        },\n        {\n            \"summary\": \"膝关节损伤的治疗方式多样\",\n            \"explanation\": \"膝关节损伤的治疗方式包括中草药熏洗、股四头肌舒缩锻炼、长腿夹板固定、膝关节镜检查等。这些方法旨在恢复膝关节功能并防止进一步损伤。[数据:关系 (3832, 5718, 4959, 5700, 4735 +more)]\"\n        },\n        {\n            \"summary\": \"多个穴位用于治疗膝关节损伤\",\n            \"explanation\": \"多个穴位如解溪、髀关、伏兔、双膝眼、阴陵泉等与膝关节损伤的治疗相关。这些穴位在中医治疗中被广泛应用，以缓解疼痛、恢复功能和理顺经络。[数据:关系 (5765, 5759, 5760, 5761, 5763 +more)]\"\n        },\n        {\n            \"summary\": \"膝关节损伤与康复训练密切相关\",\n            \"explanation\": \"膝关节损伤后，康复训练如旋转摇膝、踝关节屈伸活动、股四头肌舒缩锻炼等是恢复下肢功能的重要手段。这些训练方法在治疗过程中起到关键作用。[数据:关系 (1990, 4961, 5718 +more)]\"\n        },\n        {\n            \"summary\": \"膝关节损伤可能引发慢性症状\",\n            \"explanation\": \"膝关节损伤可能导致慢性症状，如交锁征和膝关节不能过伸和屈曲。这些症状在行走时可能突然发作，严重影响患者的日常活动。[数据:关系 (5697, 5699 +more)]\"\n        },\n        {\n            \"summary\": \"膝关节损伤与多种疾病相关\",\n            \"explanation\": \"膝关节损伤与多种疾病相关，如膝痹病、膝骨关节炎、化脓性关节炎及筋伤等。这些疾病可能进一步影响膝关节的功能和稳定性。[数据:实体 (243); 关系 (5693, 5694, 5695, 5696 +more)]\"\n        },\n        {\n            \"summary\": \"膝关节的结构复杂，易受损伤\",\n            \"explanation\": \"膝关节由股骨下端、胫骨平台及髌骨组成，其稳定性依赖于交叉韧带、侧副韧带、半月板和肌肉等结构。这些结构的复杂性使其容易受到损伤，如侧副韧带损伤或外翻、内翻畸形。[数据:实体 (243); 关系 (5659, 5660, 5693, 5694, 5695 +more)]\"\n        },\n        {\n            \"summary\": \"膝关节损伤的诊断依赖膝关节镜检查\",\n            \"explanation\": \"膝关节镜检查是用于明确膝关节损伤诊断的重要检查方法。它能够直接观察关节内部结构，如半月板、韧带和关节囊，从而帮助制定治疗方案。[数据:关系 (5700 +more)]\"\n        },\n        {\n            \"summary\": \"中草药在膝关节损伤康复中起辅助作用\",\n            \"explanation\": \"中草药熏洗常用于膝关节损伤的康复过程中，以辅助关节功能恢复。这种方法在中医治疗中被广泛应用，通常与练功活动结合使用。[数据:关系 (3832 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"小腿间隔区综合征及其相关治疗\",\n    \"summary\": \"该社区围绕小腿间隔区综合征展开, 包括其症状、治疗方法和中医辨证分型。主要实体包括小腿间隔区综合征、切开减压、瘀滞经络、改善血循环、组织紧张和肌肉无力等, 它们之间通过治疗、症状和辨证关系相互关联。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"小腿间隔区综合征是一种严重的病症, 其治疗和症状管理对患者健康有重要影响, 因此影响严重程度评级为中等偏高。\",\n    \"findings\": [\n        {\n            \"summary\": \"小腿间隔区综合征是核心实体\",\n            \"explanation\": \"小腿间隔区综合征是该社区的核心实体, 与多个其他实体如切开减压、瘀滞经络、改善血循环、组织紧张和肌肉无力有直接关系。这种病症的严重性及其治疗需求使其成为社区的中心。[数据:实体 (2972); 关系 (2549, 2551, 2550, 2554, 2556 +more)]\"\n        },\n        {\n            \"summary\": \"切开减压是主要治疗方法\",\n            \"explanation\": \"切开减压是治疗小腿间隔区综合征的主要方法, 通过解除筋膜间隔区的高压来恢复血运。这种方法在社区中具有重要地位, 是应对该病症的关键手段。[数据:关系 (2549, 2557, 2559, 2558)]\"\n        },\n        {\n            \"summary\": \"瘀滞经络是中医辨证分型之一\",\n            \"explanation\": \"瘀滞经络是小腿间隔区综合征的中医辨证分型之一, 常见症状包括患肢肿胀灼痛、压痛明显、屈伸无力和皮肤麻木。中医治疗以活血化瘀、疏经通络为主, 圣愈汤是常用方剂之一。[数据:实体 (2980); 关系 (2551, 2563)]\"\n        },\n        {\n            \"summary\": \"改善血循环是重要治疗原则\",\n            \"explanation\": \"改善血循环是治疗小腿间隔区综合征的重要原则之一, 包括解除外固定和将患肢放置水平位以避免缺血加重。这一原则在社区中被广泛提及, 与切开减压等治疗方法相辅相成。[数据:关系 (2550)]\"\n        },\n        {\n            \"summary\": \"组织紧张和肌肉无力是典型症状\",\n            \"explanation\": \"组织紧张和肌肉无力是小腿间隔区综合征的典型症状, 出现在不同间隔区。这些症状对患者的日常活动和生活质量有显著影响, 并且是诊断和治疗过程中的重要参考。[数据:关系 (2554, 2556)]\"\n        },\n        {\n            \"summary\": \"切口是切开减压的外科操作\",\n            \"explanation\": \"切口是用于切开减压的外科手术操作, 通常沿肢体纵轴方向进行。这一操作直接针对筋膜间隔区, 以达到减压目的, 是治疗该病症的关键步骤之一。[数据:关系 (2559)]\"\n        },\n        {\n            \"summary\": \"背屈踝关节疼痛与后侧浅部间隔区压力增高相关\",\n            \"explanation\": \"背屈踝关节会引起疼痛, 这是后侧浅部间隔区压力增高时的症状之一。切开减压可以缓解这种疼痛, 表明该症状与治疗手段之间存在直接联系。[数据:关系 (2558)]\"\n        },\n        {\n            \"summary\": \"圣愈汤用于治疗瘀滞经络\",\n            \"explanation\": \"圣愈汤是中医治疗瘀滞经络的常用方剂, 具有补养气血的作用。它在治疗正虚邪侵和瘀阻经脉方面被广泛应用, 并常与桃红四物汤合方化裁使用。[数据:实体 (2609); 关系 (2563)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"闭证与开窍活血法\",\n    \"summary\": \"社区以闭证为中心，闭证是一种神志昏迷类型，与开窍活血法、苏合香丸、血瘀气闭、牙关紧闭、四肢痉厥等实体密切相关。开窍活血法是治疗闭证的主要方法之一，苏合香丸和复苏汤是常用的方剂，而许叔微和《普济本事方》则提供了历史和医学依据。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及医学领域，其影响主要集中在医疗实践和学术研究方面，严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"闭证是社区的核心实体\",\n            \"explanation\": \"闭证是这个社区的中心实体，它是一种神志昏迷类型，属于实证。闭证与多个其他实体如昏迷、牙关紧闭、四肢痉厥等有直接关系，表明其在社区中的重要性。[数据:实体 (1717); 关系 (6346, 6347, 6348)]\"\n        },\n        {\n            \"summary\": \"开窍活血法是治疗闭证的主要方法\",\n            \"explanation\": \"开窍活血法是这个社区的另一个关键实体，它是一种中医治疗方法，适用于闭证等危重症。开窍活血法与苏合香丸、复苏汤等方剂有直接关系，表明其在治疗过程中的核心地位。[数据:实体 (1702); 关系 (1341, 1342)]\"\n        },\n        {\n            \"summary\": \"苏合香丸是治疗闭证的重要方剂\",\n            \"explanation\": \"苏合香丸是这个社区的重要实体，它是一种辛香开窍、活血化瘀的中药方剂，主要用于治疗血瘀气闭患者。苏合香丸与闭证、血瘀气闭等实体有直接关系，表明其在治疗中的关键作用。[数据:实体 (564); 关系 (6537, 1341)]\"\n        },\n        {\n            \"summary\": \"血瘀气闭是闭证的典型表现\",\n            \"explanation\": \"血瘀气闭是这个社区的重要实体，它表现为气闭昏绝、两手握固、牙关紧闭、苔白、脉沉迟。血瘀气闭与苏合香丸、黎润丸等方剂有直接关系，表明这些方剂在治疗该病症中的应用。[数据:实体 (5831); 关系 (6537, 6538)]\"\n        },\n        {\n            \"summary\": \"许叔微和《普济本事方》提供了历史依据\",\n            \"explanation\": \"许叔微是记载使用苏合香丸救治跌伤重症的医学家，而《普济本事方》是许叔微所著的医学著作，记载了苏合香丸的使用。这表明该社区的医学实践有历史和文献支持。[数据:实体 (562, 563); 关系 (381)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"创伤性休克及其相关医学指标\",\n    \"summary\": \"社区以创伤性休克为核心, 与多种外伤类型、临床表现、诊断指标及治疗措施相关联。创伤性休克是因严重外伤引发的全身反应综合征, 与血压、意识、脉搏、呼吸、DIC、心肌缺氧、心律失常等实体存在直接关系, 并涉及多个医学指标和救治方法。\",\n    \"rating\": 8.0,\n    \"rating_explanation\": \"创伤性休克是一种危及生命的综合征, 与多种严重外伤和并发症相关, 因此影响严重程度评级较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"创伤性休克是核心实体\",\n            \"explanation\": \"创伤性休克是这个社区的中心实体, 与多个外伤类型、临床表现、诊断指标和治疗措施相关。它在医学领域中具有高度重要性, 因为它可能导致严重的生理功能障碍甚至死亡。[数据:实体 (176); 关系 (149, 2385, 2382, 2384, 2386 +more)]\"\n        },\n        {\n            \"summary\": \"多种外伤是创伤性休克的诱因\",\n            \"explanation\": \"创伤性休克可能由多种外伤类型引发, 包括高处坠落、机器绞伤、重物打击、火器伤和连枷胸等。这些外伤类型在医学上被认为是导致创伤性休克的重要原因, 并且通常需要紧急处理。[数据:关系 (2375, 2376, 2377, 2411, 2102 +more)]\"\n        },\n        {\n            \"summary\": \"创伤性休克的临床表现多样\",\n            \"explanation\": \"创伤性休克的临床表现包括血压降低、意识改变、脉搏异常、呼吸困难和尿量减少等。这些表现对于诊断和评估休克的严重程度至关重要, 并且可能影响患者的预后。[数据:关系 (2385, 2382, 2384, 2386, 2387 +more)]\"\n        },\n        {\n            \"summary\": \"DIC 是创伤性休克的严重并发症\",\n            \"explanation\": \"弥散性血管内凝血 (DIC) 是创伤性休克可能引发的严重并发症, 常见于骨盆骨折等创伤情况。DIC 会导致凝血功能障碍, 增加出血风险, 并可能危及生命。[数据:实体 (2814); 关系 (4366)]\"\n        },\n        {\n            \"summary\": \"补充血容量是关键救治措施\",\n            \"explanation\": \"补充血容量是创伤性休克救治的根本措施, 用于恢复有效循环血量并改善组织灌注。这一措施在临床实践中被高度重视, 是治疗创伤性休克的首要步骤。[数据:关系 (2407)]\"\n        },\n        {\n                    \"summary\": \"休克可能导致心肌缺氧和心律失常\",\n                    \"explanation\": \"创伤性休克可能导致心肌缺氧, 从而引发心律失常。心肌缺氧是由于组织灌注不足导致的, 而心律失常是其常见表现之一, 可能进一步加重休克的病理生理过程。[数据:关系 (2400, 2401)]\"\n                },\n                {\n                    \"summary\": \"电解质紊乱是休克的重要表现\",\n                    \"explanation\": \"创伤性休克可能导致高钾低钠血症等电解质紊乱, 这是由于细胞损伤和休克状态下的生理变化引起的。电解质紊乱可能进一步影响心脏功能和神经系统的稳定性。[数据:关系 (2391, 2398)]\"\n        \n        },\n        {\n            \"summary\": \"乳酸和儿茶酚胺是休克的重要指标\",\n            \"explanation\": \"乳酸浓度升高和儿茶酚胺浓度升高是创伤性休克时的重要指标。乳酸升高反映组织缺氧状态, 而儿茶酚胺升高则表明交感神经兴奋, 两者都对休克的诊断和治疗具有指导意义。[数据:关系 (2394, 2395)]\"\n        },\n        {\n            \"summary\": \"动脉血氧分压是判断组织缺氧的关键\",\n            \"explanation\": \"动脉血氧分压降低是判断创伤性休克中组织是否进入无氧状态的重要指标。这一指标能够帮助医生评估患者的氧合状态, 并决定是否需要进一步的干预措施。[数据:关系 (2396)]\"\n        },\n        {\n            \"summary\": \"颅内压增高与意识变化密切相关\",\n            \"explanation\": \"颅内压增高会导致意识变化, 是脑挫裂伤、脑水肿或颅内血肿的常见症状。这种变化可能进一步影响患者的神经系统功能, 并在休克状态下加重病情。[数据:关系 (6499, 6500)]\"\n        }\n    ]\n```.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 139, in _read_model_from_json\n    return json_model.model_validate(value)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\pydantic\\main.py\", line 705, in model_validate\n    return cls.__pydantic_validator__.validate_python(\npydantic_core._pydantic_core.ValidationError: 1 validation error for CommunityReportResponse\nfindings.3.summary\n  Field required [type=missing, input_value={' summary': '神经轴...; 关系 (2279, 2280)]'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 115, in try_receive_json\n    model = self._read_model_from_json(raw_json, json_model)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 142, in _read_model_from_json\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response does not match the expected model, response={'title': '周围神经损伤及其相关病理和治疗方法', 'summary': '该社区以周围神经损伤为核心，涉及多种病理现象、合并损伤部位以及治疗方法。周围神经损伤与暴力牵拉、肌肉肌腱、神经轴索、髓鞘、施万细胞、沃勒变性、神经膜细胞、假性神经瘤、神经修复术、神经移植术、神经吻合、肌细胞、爪形指、猿手、神经缺血、瘢痕和针刀疗法等实体存在紧密联系，这些实体共同构成了周围神经损伤的病理机制和治疗体系。', 'rating': 6.0, 'rating_explanation': '由于周围神经损伤可能导致严重功能障碍，并涉及多种治疗手段和病理变化，因此影响严重程度评级为中等偏高。', 'findings': [{'summary': '周围神经损伤是核心实体', 'explanation': '周围神经损伤是该社区的核心实体，与多个其他实体存在直接关系，包括暴力牵拉、肌肉肌腱、神经轴索、髓鞘、施万细胞等。这些关系表明周围神经损伤是多种病理现象和治疗手段的基础。[数据:实体 (175); 关系 (2258, 2262, 2279, 2280, 2281 +more)]'}, {'summary': '暴力牵拉是主要致病原因', 'explanation': '暴力牵拉是导致周围神经损伤的主要原因之一，这表明在某些情况下，如外伤或事故，周围神经损伤的发生风险较高。暴力牵拉与周围神经损伤之间的关系在数据中被多次提及，强调了其重要性。[数据:关系 (2258)]'}, {'summary': '周围神经损伤常合并肌肉肌腱损伤', 'explanation': '周围神经损伤常与肌肉肌腱损伤同时发生，这表明在创伤急救中，这两种损伤可能需要同时处理。肌肉肌腱作为周围神经损伤的常见合并损伤部位，其影响可能进一步加重患者的症状和恢复难度。[数据:关系 (2262)]'}, {' summary': '神经轴索和髓鞘在损伤后发生坏死碎裂', 'explanation': '周围神经损伤后，远端神经轴索和髓鞘会发生坏死碎裂，而近端神经轴索在一定条件下可以再生。这一过程是神经损伤后病理变化的重要组成部分，可能影响神经功能的恢复。[数据:实体 (2648, 2643, 5644); 关系 (2279, 2280)]'}, {'summary': '施万细胞和沃勒变性参与损伤后的清除过程', 'explanation': '施万细胞在周围神经损伤后参与清除远端神经轴索和髓鞘的坏死碎裂，这一过程称为沃勒变性。沃勒变性是周围神经损伤后的一种自然病理反应，有助于为神经再生创造条件。[数据:实体 (2646, 2645); 关系 (2281, 2282)]'}, {'summary': '神经修复术是主要治疗方法', 'explanation': '神经修复术是治疗周围神经损伤的主要方法之一，通过吻合断离的神经来促进功能恢复。该方法在数据中被多次提及，表明其在临床实践中的重要性。[数据:实体 (2648); 关系 (2284)]'}, {'summary': '未修复的损伤可能导致假性神经瘤', 'explanation': '如果周围神经损伤未得到及时修复，近端再生的神经纤维可能与施万细胞及结缔组织形成假性神经瘤，这是一种异常结构，可能引起疼痛或其他症状。假性神经瘤的形成是神经损伤后未修复的潜在后果之一。[数据:实体 (2649); 关系 (2285)]'}, {'summary': '神经缺血可能导致瘢痕形成', 'explanation': '神经缺血是神经损伤的一种病理过程，可能导致神经束间形成瘢痕，进而引起功能障碍。瘢痕的形成是神经缺血的常见结果，而针刀疗法被用于松解瘢痕以缓解疼痛。[数据:实体 (2351, 2632); 关系 (2275, 2006)]'}, {'summary': '神经失用表现为神经传导功能障碍', 'explanation': '神经失用是周围神经损伤的一种类型，表现为神经传导功能障碍，但神经结构保持完整。这种类型的损伤可能在早期难以察觉，但会显著影响神经功能，需要及时诊断和治疗。[数据:实体 (2639); 关系 (2277)]'}, {'summary': '轴索断裂可能导致神经传导功能障碍', 'explanation': '轴索断裂是神经损伤的一种表现，可能导致神经传导功能障碍。这种断裂可能影响神经信号的传递，进而导致肌肉控制和感觉功能的丧失。[数据:实体 (2640); 关系 (2277)]'}]}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 139, in _read_model_from_json\n    return json_model.model_validate(value)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\pydantic\\main.py\", line 705, in model_validate\n    return cls.__pydantic_validator__.validate_python(\npydantic_core._pydantic_core.ValidationError: 5 validation errors for CommunityReportResponse\nfindings.5.explanation\n  Field required [type=missing, input_value={'summary': '腰背肌锻...31, 4177, 4178 +more)]'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nfindings.6.explanation\n  Field required [type=missing, input_value={'summary': '脊柱关节...44, 5945, 4174 +more)]'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nfindings.7.explanation\n  Field required [type=missing, input_value={'summary': '多种腰部...71, 5974, 5978 +more)]'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nfindings.8.explanation\n  Field required [type=missing, input_value={'summary': '慢性腰肌...98, 5965, 5957 +more)]'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nfindings.9.explanation\n  Field required [type=missing, input_value={'summary': '慢性腰肌...78, 4174, 5971 +more)]'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 115, in try_receive_json\n    model = self._read_model_from_json(raw_json, json_model)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 142, in _read_model_from_json\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response does not match the expected model, response={'title': '慢性腰肌劳损与腰部锻炼方法', 'summary': '社区以慢性腰肌劳损为中心, 与多种腰部锻炼方法和相关症状及治疗方式有关。慢性腰肌劳损与飞燕点水法、湿热蕴结、髂嵴后部、骶骨后面、正红花油等实体有直接联系, 并且与腰背肌、脊柱关节僵硬挛缩、四点支撑法、五点支撑法、三点支撑法等实体存在间接关系。', 'rating': 3.0, 'rating_explanation': '慢性腰肌劳损及其相关治疗和症状对个人健康有中等影响, 但对社会整体影响较小。', 'findings': [{'summary': '慢性腰肌劳损是社区的核心实体', 'explanation': '慢性腰肌劳损是这个社区的中心实体, 与多个其他实体有直接联系, 包括飞燕点水法、湿热蕴结、髂嵴后部、骶骨后面和正红花油等。这些实体涉及慢性腰肌劳损的治疗、症状和相关证型。[数据:实体 (314), 关系 (5976, 5961, 5944, 5945, 5957 +more)]'}, {'summary': '飞燕点水法是治疗慢性腰肌劳损的重要方法', 'explanation': '飞燕点水法是一种用于治疗慢性腰肌劳损的腰部锻炼方法, 与慢性腰肌劳损有直接关系。此外, 飞燕点水法还与腰背肌、三点支撑法等实体相关, 表明其在社区中的重要性。[数据:实体 (5388), 关系 (5976, 5978, 5974, 5971 +more)]'}, {'summary': '湿热蕴结是慢性腰肌劳损的一种证型', 'explanation': '湿热蕴结是慢性腰肌劳损的一种证型, 与慢性腰肌劳损有直接关系。四妙散是用于治疗湿热蕴结型慢性腰肌劳损的中药方剂, 说明该证型在治疗方案中具有重要地位。[数据:实体 (5387), 关系 (5961, 5965 +more)]'}, {'summary': '髂嵴后部和骶骨后面是慢性腰肌劳损的常见压痛点', 'explanation': '髂嵴后部和骶骨后面是慢性腰肌劳损的常见压痛点位置。这些区域的炎症和疼痛是慢性腰肌劳损的重要临床表现之一, 与慢性腰肌劳损有直接关系。[数据:实体 (5341, 5377), 关系 (5944, 5945 +more)]'}, {'summary': '正红花油是慢性腰肌劳损的局部外擦药物', 'explanation': '正红花油是用于慢性腰肌劳损的局部外擦药物, 与慢性腰肌劳损有直接关系。这种药物在治疗过程中可能被广泛使用, 但其作用主要局限于局部治疗。[数据:实体 (5378), 关系 (5957 +more)]'}, {'summary': '腰背肌锻炼与慢性腰肌劳损密切相关', 'description': '腰背肌锻炼是慢性腰肌劳损治疗的重要组成部分, 与多种锻炼方法如飞燕点水法、四点支撑法、五点支撑法和三点支撑法相关。这些方法在社区中被频繁提及, 表明其在治疗和预防慢性腰肌劳损中的重要性。[数据:实体 (4181), 关系 (4174, 231, 4177, 4178 +more)]'}, {'summary': '脊柱关节僵硬挛缩是慢性腰肌劳损的晚期症状', 'description': '脊柱关节僵硬挛缩是慢性腰肌劳损可能引发的晚期症状, 与腰背肌锻炼有直接关系。腰背肌锻炼可以减少这种症状的发生, 表明锻炼在预防慢性腰肌劳损恶化中的作用。[数据:实体 (4195), 关系 (5944, 5945, 4174 +more)]'}, {'summary': '多种腰部锻炼方法相互关联', 'description': '五点支撑法、三点支撑法和飞燕点水法等锻炼方法之间存在关联, 例如五点支撑法和三点支撑法都是仰卧位腰部锻炼方法, 而三点支撑法和飞燕点水法都用于治疗慢性腰肌劳损。这些方法在社区中相互补充, 形成一个完整的锻炼体系。[数据:关系 (5971, 5974, 5978 +more)]'}, {'summary': '慢性腰肌劳损的治疗涉及多种方式', 'description': '慢性腰肌劳损的治疗包括腰部练功活动、中药方剂如四妙散以及外擦药物如正红花油。这些方法在社区中被频繁提及, 表明慢性腰肌劳损的治疗方案是多方面的。[数据:实体 (5405, 5380, 5378), 关系 (5998, 5965, 5957 +more)]'}, {'summary': '慢性腰肌劳损的预防和调护依赖于腰背肌锻炼', 'description': '腰背肌锻炼对于慢性腰肌劳损的预防和调护至关重要, 与多种锻炼方法如飞燕点水法、四点支撑法、五点支撑法和三点支撑法相关。这些方法被广泛用于帮助复位和减少晚期症状的发生。[数据:实体 (4181), 关系 (7, 4177, 4178, 4174, 5971 +more)]'}]}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"脑挫裂伤及其相关医学并发症\",\n    \"summary\": \"该社区以脑挫裂伤为核心实体，与多种医学并发症、治疗手段和解剖结构相关联。脑挫裂伤可导致蛛网膜下腔出血、脑水肿、抽搐、失语症等严重症状，并与车祸、暴力打击等外部因素相关。治疗手段包括营养神经、针灸、脱水药物等，这些关系共同构成了一个复杂的医学信息网络。\",\n    \"rating\": 7.0,\n    \"rating_explanation\": \"由于脑挫裂伤可能导致严重并发症，如生命中枢衰竭、抽搐、偏瘫等，因此影响严重程度评级为较高。\",\n    \"findings\": [\n        {\n            \"summary\": \"脑挫裂伤是社区的核心实体\",\n            \"explanation\": \"脑挫裂伤是这个社区的中心实体，与多个医学症状、并发症和治疗手段相关联。它在社区中具有高度连接性，表明它在医学信息网络中的重要性。[数据:实体 (5703); 关系 (6453, 6498, 6470, 6597, 6480 +more)]\"\n        },\n        {\n            \"summary\": \"脑挫裂伤可能导致蛛网膜下腔出血\",\n            \"explanation\": \"脑挫裂伤与蛛网膜下腔出血之间存在直接因果关系，蛛网膜下腔出血是脑挫裂伤的常见并发症之一。这种出血可能引发脑膜刺激征，如 Kerning 征和 Brudzinski 征阳性，进一步加重病情。[数据:关系 (6498, 6505, 6507, 6595, 6596 +more)]\"\n        },\n        {\n            \"summary\": \"脑挫裂伤与多种治疗手段相关\",\n            \"explanation\": \"脑挫裂伤与多种治疗手段相关，包括营养神经、针灸、脱水药物和肾上腺皮质激素等。这些治疗手段旨在缓解脑水肿、促进神经恢复或减轻颅内压。[数据:关系 (6499, 6455, 6529, 6530, 6470 +more)]\"\n        },\n        {\n            \"summary\": \"脑挫裂伤可能引发多种神经症状\",\n            \"explanation\": \"脑挫裂伤可能导致多种神经症状，如抽搐、单瘫、失语症、动眼神经麻痹、偏瘫及三偏征等。这些症状与脑挫裂伤发生的部位密切相关，如左侧额叶、内囊、中脑等。[数据:关系 (6684, 6482, 6486, 6489, 6490 +more)]\"\n        },\n        {\n            \"summary\": \"车祸是脑挫裂伤的主要诱因\",\n            \"explanation\": \"车祸是导致脑挫裂伤的主要外部因素之一，与脑挫裂伤之间存在直接关系。车祸可能引发脑组织损伤，进而导致脑挫裂伤及其相关并发症。[数据:关系 (1597, 6597, 6498, 6470, 6480 +more)]\"\n        },\n        {\n            \"summary\": \"脑挫裂伤可能引发脑水肿\",\n            \"explanation\": \"脑挫裂伤后，脑组织出血和水肿是常见表现，这可能导致颅内压增高，进一步引发脑脊液循环通路梗阻、脑静脉回流减慢等并发症。[数据:关系 (6470, 6475, 6476, 6477, 6478 +more)]\"\n        },\n        {\n            \"summary\": \"脑挫裂伤可能发生在多个大脑区域\",\n            \"explanation\": \"脑挫裂伤可能发生在多个大脑区域，包括左侧额叶、矢状窦、大脑外侧裂、内囊和中脑等。这些区域的损伤可能导致不同的神经症状，如上肢瘫痪、下肢瘫痪、偏瘫及三偏征等。[数据:关系 (6597, 6490, 6491, 6492, 6493 +more)]\"\n        },\n        {\n            \"summary\": \"脑挫裂伤与脑脊液变化密切相关\",\n            \"explanation\": \"脑挫裂伤可能导致脑脊液混有血液，这是其特征之一。此外，脑脊液的循环、吸收和产生速度可能因脑挫裂伤而发生代偿性变化，以应对颅内压增高。[数据:关系 (6519, 6475, 6478, 6477, 6479 +more)]\"\n        },\n        {\n            \"summary\": \"创伤性蛛网膜下腔出血与脑挫裂伤相关\",\n            \"explanation\": \"创伤性蛛网膜下腔出血是脑挫裂伤的并发症之一，且与车祸密切相关。治疗手段包括使用止血剂如 6-氨基己酸、酚磺乙胺和对羧基苄胺，以及护胃治疗。[数据:关系 (6498, 6595, 6596, 6603)]\"\n        },\n        {\n            \"summary\": \"脑挫裂伤的治疗手段多样\",\n            \"explanation\": \"脑挫裂伤的治疗手段包括营养神经、针灸、脱水药物、肾上腺皮质激素等。这些手段旨在缓解症状、减轻脑水肿和促进神经恢复，是社区中重要的医疗信息节点。[数据:关系 (6499, 6455, 12529, 12588, 12530 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"万应宝珍膏与筋伤初、中期治疗\",\n    \"summary\": \"该社区围绕万应宝珍膏和筋伤初、中期治疗展开，涉及多种膏药和油膏，以及它们的辅料和用途。这些实体之间存在紧密的联系，表明它们在中医治疗领域的重要性。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"该社区主要涉及传统中药膏药和油膏的使用，其影响程度较低，但可能在特定医疗或健康相关场景中具有一定的作用。\",\n    \"findings\": [\n        {\n            \"summary\": \"万应宝珍膏是社区的核心实体\",\n            \"explanation\": \"万应宝珍膏是这个社区的关键实体，用于舒筋活络，特别是在骨折后期的治疗中。它与筋伤初、中期治疗密切相关，表明其在中医治疗中的重要性。[数据:实体 (3316); 关系 (2930)]\"\n        },\n        {\n            \"summary\": \"筋伤初、中期治疗是社区的共同主题\",\n            \"explanation\": \"筋伤初、中期治疗是多个实体的共同主题，包括茴香酒、跌打万花油、定痛散、四黄散等。这些实体都与治疗筋伤初、中期有关，表明该主题在社区中占据重要地位。[数据:实体 (4877); 关系 (5130, 5135, 5132, 5133)]\"\n        },\n        {\n            \"summary\": \"膏药和油膏是治疗的主要形式\",\n            \"explanation\": \"膏药和油膏是该社区中用于治疗筋伤和相关症状的主要形式。膏药包括万应宝珍膏、狗皮膏、万灵膏等，而油膏包括跌打万花油、活络油膏等。这些实体之间的关系表明它们在中医治疗中的广泛应用。[数据:实体 (1774, 1827, 1818); 关系 (1423, 1424, 1439, 1440, 1441)]\"\n        },\n        {\n            \"summary\": \"香油、黄蜡和白蜡是重要的辅料\",\n            \"explanation\": \"香油、黄蜡和白蜡是膏药和油膏制作中的重要辅料。这些辅料在多个实体中被提及，表明它们在治疗过程中具有关键作用。[数据:实体 (1849, 1855, 1862); 关系 (1425, 1443, 1444, 1426)]\"\n        },\n        {\n            \"summary\": \"多种药物具有舒筋活血的作用\",\n            \"explanation\": \"社区中提到的多种药物，如万应宝珍膏、茴香酒、跌打万花油、定痛散和四黄散，都具有舒筋活血的作用。这些药物的共同功能表明它们在治疗筋伤和相关症状时可能被联合使用。[数据:实体 (3316, 4867, 1828, 4865, 4866); 关系 (2930, 5130, 5135, 5132, 5133)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={(  \n    \"title\": \"行气消瘀法与相关中药方剂\",  \n    \"summary\": \"社区以行气消瘀法为核心，该方法是中医治疗气滞血瘀的常用手段，与多个中药方剂如复元通气散、顺气活血汤、金铃子散等密切相关，同时与伤气、瘀血阻滞等病症及治疗法如逐瘀法、和营止痛法、接骨续筋法等存在联系。\",  \n    \"rating\": 4.0,  \n    \"rating_explanation\": \"行气消瘀法及其相关方剂在中医治疗中具有重要地位，但其影响主要集中在医疗领域，对公共安全或社会秩序的潜在影响有限。\",  \n    \"findings\": [  \n        {  \n            \"summary\": \"行气消瘀法是核心治疗法\",  \n            \"explanation\": \"行气消瘀法是该社区的核心实体，属于中医‘消法’，具有消散瘀血的作用，适用于损伤后气滞血瘀的治疗。该方法与多个中药方剂和病症相关，表明其在中医治疗体系中的重要性。[数据:实体 (1689); 关系 (1325, 1323, 1324, 1333, 4079 +more)]\"  \n        },  \n        {  \n            \"summary\": \"复元通气散是行气消瘀法的重要方剂\",  \n            \"explanation\": \"复元通气散是行气消瘀法中以行气为主的常用方剂，用于治疗筋膜间隔区综合征。其与行气消瘀法的紧密联系表明它在该治疗法中的关键作用。[数据:实体 (1693); 关系 (2561)]\"  \n        },  \n        {  \n            \"summary\": \"顺气活血汤与行气消瘀法并重\",  \n            \"explanation\": \"顺气活血汤是行气消瘀法中用于治疗腹壁损伤的常用方剂，具有行气止痛和活血祛瘀的双重作用。它与行气消瘀法的关联表明其在治疗气滞血瘀相关病症中的重要性。[数据:实体 (1697); 关系 (1333, 6688)]\"  \n        },  \n        {  \n            \"summary\": \"金铃子散用于伤气为主的初期治疗\",  \n            \"explanation\": \"金铃子散是行气消瘀法中以行气为主的常用方剂，主要用于伤气为主的初期治疗，具有理气止痛的功效。其与行气消瘀法和伤气的联系表明其在治疗特定病症中的应用价值。[数据:实体 (1694); 关系 (4082, 4079)]\"  \n        },  \n        {  \n            \"summary\": \"瘀血阻滞是行气消瘀法的重要治疗目标\",  \n            \"explanation\": \"瘀血阻滞是中医中的一种综合征，表现为少腹胀满、小便不利等，与行气消瘀法密切相关。膈下逐瘀汤和活血祛瘀汤均用于治疗瘀血阻滞，表明该病症在社区中的重要性。[数据:实体 (4216); 关系 (4205, 4316, 4208)]\"  \n        },  \n        {  \n            \"summary\": \"逐瘀法与行气消瘀法存在关联\",  \n            \"explanation\": \"逐瘀法与行气消瘀法都用于损伤治疗，但逐瘀法更侧重于攻逐瘀血，而行气消瘀法侧重于行气消瘀。两者在治疗过程中可能互补，但目标和方法有所不同。[数据:关系 (1320, 1323, 1324)]\"  \n        },  \n        {  \n            \"summary\": \"柴胡疏肝散用于治疗伤气型病症\",  \n            \"explanation\": \"柴胡疏肝散是用于治疗伤气型病症的中药方剂，具有疏肝理气、活血化瘀、行气止痛的作用，尤其适用于筋伤初期。其与行气消瘀法和伤气的联系表明其在治疗体系中的重要性。[数据:实体 (1692); 关系 (4081, 4079, 6614)]\"  \n        },  \n        {  \n            \"summary\": \"接骨续筋法用于损伤中期治疗\",  \n            \"explanation\": \"接骨续筋法属于‘续法’，适用于损伤中期，筋骨已有连接但未坚实的情况。其与逐瘀法的关联表明在损伤治疗的不同阶段可能需要不同的方法。[数据:实体 (1705); 关系 (1324)]\"  \n        },  \n        {  \n            \"summary\": \"五苓散用于治疗瘀血阻滞\",  \n            \"explanation\": \"五苓散是一种内服中药方剂，用于治疗水湿潴留及湿阻经脉的病症，具有行气利水的作用。其与瘀血阻滞的联系表明它在中医治疗中的辅助作用。[数据:实体 (2612); 关系 (4208)]\"  \n        },  \n        {  \n            \"summary\": \"消瘀止痛药膏用于局部治疗\",  \n            \"explanation\": \"消瘀止痛药膏是一种局部外敷药物，用于治疗软组织挫伤、瘀血和疼痛，适用于筋伤的初、中期。其与行气消瘀法的关联表明它在治疗体系中的辅助地位。[数据:实体 (1811); 关系 (3046)]\"  \n        }  \n    ]  \n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 39 column 9 (char 1613)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={\n    \"title\": \"桃红四物汤与接骨续筋治疗\",\n    \"summary\": \"该社区围绕桃红四物汤和接骨续筋治疗展开，包含多种中药方剂和药材，如接骨续筋药膏、土鳖虫、接骨续筋膏、肢伤二方、自然铜、血竭等，这些实体在治疗骨折、筋伤和瘀血积滞等方面有密切联系。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区主要涉及传统中药治疗，影响严重程度较低，但对特定医疗场景具有重要性。\",\n    \"findings\": [\n        {\n            \"summary\": \"桃红四物汤是核心治疗方剂\",\n            \"explanation\": \"桃红四物汤是该社区中最重要的实体之一，具有活血化瘀、消肿止痛等作用，常用于治疗损伤和疾病初期的气滞血瘀证 [数据:实体 (1690); 关系 (2905)]。\"\n        },\n        {\n            \"summary\": \"接骨续筋治疗是社区的共同主题\",\n            \"explanation\": \"多个实体，如接骨续筋药膏、土鳖虫、接骨续筋膏、肢伤二方、自然铜、血竭等，都与接骨续筋治疗相关，表明这是该社区的核心主题 [数据:实体 (1814, 3307, 3308, 3304, 3305, 3306); 关系 (2989, 2918, 3051, 2915, 2916, 2917, 2924, 3061, 2914, 2926, 2927, 2928 +more)]。\"\n        },\n        {\n            \"summary\": \"接骨续筋药膏用于锁骨骨折的中期治疗\",\n            \"explanation\": \"接骨续筋药膏是用于锁骨骨折中期治疗的外用药膏，具有接骨续筋的功效 [数据:关系 (2989)]。\"\n        },\n        {\n            \"summary\": \"土鳖虫用于初期活血化瘀\",\n            \"explanation\": \"土鳖虫是一种中药材，主要用于初期活血化瘀，同时也被用作接骨续损和接骨续筋的外用药 [数据:实体 (3307); 关系 (2418)]。\"\n        },\n        {\n            \"summary\": \"接骨续筋膏用于老年患者中后期治疗\",\n            \"explanation\": \"接骨续筋膏是一种用于老年患者中后期治疗的外敷药物，主要作用是接骨续筋，常用于中期外治 [数据:实体 (3394); 关系 (3051)]。\"\n        },\n        {\n        \t \"summary\": \"肢伤二方用于中期关节脱位治疗\",\n            \"explanation\": \"肢伤二方是一种用于中期关节脱位治疗的内服中药方剂，主要功效为接骨续筋 [数据:实体 (3304); 关系 (2915)]。\"\n        },\n        {\n            \"summary\": \"自然铜用于接骨续筋\",\n            \"explanation\": \"自然铜是一种用于接骨续筋的中药，常作为外用药使用，具有接骨续筋的功效 [数据:实体 (3305); 关系 (2916)]。\"\n        },\n        {\n            \"summary\": \"血竭用于初期活血化瘀\",\n            \"explanation\": \"血竭是一种中药材，主要用于初期活血化瘀，同时也是一种外用药，常用于接骨续筋 [数据:实体 (3306); 关系 (2197)]。\"\n        },\n        ,\n        {\n            \"summary\": \"骨碎补、接骨膏、外敷接骨散、驳骨散、碎骨丹都用于接骨续筋\",\n            \"explanation\": \"骨碎补、接骨膏、外敷接骨散、驳骨散、碎骨丹等外用药膏和药物都用于接骨续筋治疗，表明该社区中存在多种外治方法 [数据:关系 (2924, 3061, 2926, 2927, 2928 +more)]。\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"桡侧腕伸肌腱周围炎及其相关实体\",\n    \"summary\": \"社区以桡侧腕伸肌腱周围炎为中心, 该疾病与腱膜、消炎止痛膏、硬纸板、木工、砖瓦工、局部灼热感、腕部活动受限和捻发音等实体相关。这些实体共同构成了与该疾病相关的医疗、职业和症状网络。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"该社区的重要性评分较低, 因为它主要涉及医学和职业相关的信息, 对公共安全或社会影响有限。\",\n    \"findings\": [\n        {\n            \"summary\": \"桡侧腕伸肌腱周围炎是核心实体\",\n            \"explanation\": \"桡侧腕伸肌腱周围炎是这个社区的核心实体, 与多个其他实体有直接关系, 包括腱膜、消炎止痛膏、硬纸板、木工、砖瓦工、局部灼热感、腕部活动受限和捻发音。这表明该疾病在社区中具有高度的关联性, 并且是理解社区结构的关键。[数据:实体 (199); 关系 (212, 5480, 5482, 5484, 5486 +more)]\"\n        },\n        {\n            \"summary\": \"腱膜缺乏保护与疾病相关\",\n            \"explanation\": \"腱膜是覆盖前臂桡侧腕伸肌腱的一层疏松组织, 缺乏腱鞘保护, 这与桡侧腕伸肌腱周围炎的发生密切相关。这种缺乏保护可能是导致肌腱劳损和炎症的重要因素。[数据:实体 (5125); 关系 (5480)]\"\n        },\n        {\n            \"summary\": \"消炎止痛膏用于治疗该疾病\",\n            \"explanation\": \"消炎止痛膏是治疗桡侧腕伸肌腱周围炎的常用局部外敷药物。这种治疗方法表明该疾病在临床上有明确的干预手段, 以减轻症状和促进康复。[数据:实体 (5126); 关系 (5482)]\"\n        },\n        {\n            \"summary\": \"硬纸板用于固定腕关节\",\n            \"explanation\": \"硬纸板在治疗桡侧腕伸肌腱周围炎时用于固定腕关节, 通常与夹板配合使用以减轻肿痛。这种固定方法有助于限制活动并缓解症状, 是治疗过程中的重要辅助手段。[数据:实体 (5127); 关系 (5484)]\"\n        },\n        {\n            \"summary\": \"木工和砖瓦工是高发职业群体\",\n            \"explanation\": \"木工和砖瓦工是桡侧腕伸肌腱周围炎的高发职业群体, 这表明这些职业中频繁的腕部活动可能是导致该疾病的主要原因。职业群体与疾病之间的关系对于预防和干预措施的制定具有重要意义。[数据:实体 (5132, 5133); 关系 (5486, 5487)]\"\n        },\n        {\n            \"summary\": \"局部灼热感是典型症状\",\n            \"explanation\": \"局部灼热感是桡侧腕伸肌腱周围炎的典型症状, 表现为肌腱周围区域的发热感。这种症状有助于疾病的早期识别和诊断, 并且可能对患者的日常生活造成一定影响。[数据:实体 (5134); 关系 (5490)]\"\n        },\n        {\n            \"summary\": \"腕部活动受限是典型症状\",\n            \"explanation\": \"腕部活动受限是桡侧腕伸肌腱周围炎的典型症状, 表现为腕部活动范围减少。这种症状可能限制患者的日常活动和工作能力, 对其生活质量产生影响。[数据:实体 (5135); 关系 (5491)]\"\n        },\n        {\n            \"summary\": \"捻发音是疾病的一个典型症状\",\n            \"explanation\": \"捻发音是桡侧腕伸肌腱周围炎的典型症状, 表现为腕部活动时出现类似捻干燥头发的异常声音。这种症状在临床检查中具有诊断价值, 并且可能与肌腱的炎症和劳损有关。[数据:实体 (1204); 关系 (887)]\"\n        }\n    ]\n```.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"切开复位内固定手术与克氏针\",\n    \"summary\": \"该社区围绕骨科手术方法和相关医疗器械展开, 其中切开复位内固定手术和克氏针是核心实体。这些实体与多种骨折类型和手术治疗方法相关, 并通过多种关系相互连接。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"该社区主要涉及医疗领域, 其影响严重程度较低, 但与多种骨折治疗和手术方法相关, 可能对患者健康和医疗资源分配产生一定影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"切开复位内固定手术是社区的核心实体\",\n            \"explanation\": \"切开复位内固定手术是该社区的重要实体, 用于治疗严重移位或合并其他损伤的锁骨骨折。它与多种其他实体有关系, 包括钢板螺钉和克氏针等医疗器械, 表明其在骨科手术中的广泛应用。[数据:实体 (3359), 关系 (3001, 3003)]\"\n        },\n        {\n            \"summary\": \"克氏针是社区中使用最广泛的医疗器械之一\",\n            \"explanation\": \"克氏针作为一种常用的骨科手术内固定器材, 与多种骨折类型和手术方法相关, 包括尺骨鹰嘴牵引、股骨髁部骨牵引等。其使用频率较高, 但固定效果不如骨圆针稳妥, 需要特别注意使用方法。[数据:实体 (2179), 关系 (1834, 3003, 3772)]\"\n        },\n        {\n            \"summary\": \"股骨髁部是社区中常见的骨折部位\",\n            \"explanation\": \"股骨髁部是社区中一个重要的实体, 市数值表明其在社区中具有较高的连接度。它与克氏针和冰钳等医疗器械有关系, 表明其在骨科手术中经常被提及和处理。[数据:实体 (3898), 关系 (3772, 3773)]\"\n        },\n        {\n            \"summary\": \"切开整复是治疗距骨颈骨折的重要方法\",\n            \"explanation\": \"切开整复是用于治疗距骨颈骨折的一种手术方法, 在失败或复杂情况下可能需要进一步的手术, 如距跟关节融合术或胫距关节融合术。这表明切开整复在社区中是一个关键步骤, 但其风险和复杂性也需要关注。[数据:实体 (4023), 关系 (3003, 3965, 3964)]\"\n        },\n        {\n            \"summary\": \"**加压螺钉**在手术中用于固定骨折\",\n            \"explanation\": \"加压螺钉是用于手术切开整复时固定骨折的工具, 与切开整复有直接关系。这种工具在骨科手术中具有重要作用, 但其使用通常依赖于手术的成功与否。[数据:实体 (4021), 关系 (3959)]\"\n        },\n        {\n            \"summary\": \"**距跟关节融合术**是复杂骨折的后续治疗手段\",\n            \"explanation\": \"距跟关节融合术是用于治疗创伤性关节炎、距骨体缺血性坏死以及距骨粉碎性骨折等疾病的手术方法。它与切开整复有关系, 表明其在某些复杂或失败的手术情况下被使用。[数据:实体 (4028), 关系 (3965)]\"\n        },\n        {\n            \"summary\": \"**胫距关节融合术**用于处理特定类型的骨折\",\n            \"explanation\": \"胫距关节融合术是用于治疗距骨体缺血性坏死和距骨粉碎性骨折的手术方法。它与切开整复有关系, 表明其在某些复杂或失败的手术情况下被使用。[数据:实体 (4028), 关系 (3964)]\"\n        },\n        {\n            \"summary\": \"**冰钳**用于骨牵引治疗\",\n            \"explanation\": \"冰钳是用于骨牵引治疗股骨髁上骨折的医疗器械, 与股骨髁部有直接关系。这种工具在骨科手术中用于固定骨骼, 但其使用通常与特定的骨折类型相关。[数据:实体 (3899), 关系 (3773)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"踝关节与相关医学检查及治疗\",\n    \"summary\": \"社区以踝关节为中心，涉及多种医学检查方法、损伤类型以及康复训练。踝关节与踝部内翻骨折、踝部外翻骨折、提踵试验等实体有直接联系，同时与康复训练如踝部伸屈和搓滚舒筋相关联。这些实体共同构成了一个与足部和踝部损伤及治疗相关的医学网络。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"社区主要涉及医学检查和康复训练，对公共健康有一定影响，但未涉及高风险或广泛社会影响的事件。\",\n    \"findings\": [\n        {\n            \"summary\": \"踝关节是社区的核心实体\",\n            \"explanation\": \"踝关节是这个社区的中心实体，与多种损伤类型和医学检查方法相关联，如踝部内翻骨折、踝部外翻骨折和提踵试验。这些关系表明踝关节在医学领域的重要性，特别是在诊断和治疗足部和踝部损伤方面。[数据:实体 (1347), 关系 (1160, 3926, 3927, 1991, 1728 +more)]\"\n        },\n        {\n            \"summary\": \"提踵试验与多个实体相关\",\n            \"explanation\": \"提踵试验是一种用于检测踝关节相关功能的医学检查方法，与跟腱、胫后肌、腓骨肌等实体有直接联系。这表明提踵试验在评估踝关节和周围肌肉、肌腱功能方面具有重要作用。[数据:关系 (1160, 1152, 1153, 1154)]\"\n        },\n        {\n            \"summary\": \"踝关节损伤类型多样\",\n            \"explanation\": \"踝关节社区中包含了多种损伤类型，如踝部内翻骨折和踝部外翻骨折，这些损伤类型通常由外力作用引起，且可能引发严重的并发症，如创伤性关节炎。这些信息表明踝关节在运动和日常活动中容易受伤，需特别关注。[数据:实体 (4007, 4001), 关系 (3926, 3927)]\"\n        },\n        {\n            \"summary\": \"康复训练在社区中占据重要位置\",\n            \"explanation\": \"踝关节社区中包含多种康复训练方法，如踝部伸屈和搓滚舒筋。这些方法用于恢复踝关节和足部的功能，表明社区不仅关注诊断，还涉及治疗和康复过程。[数据:实体 (2331, 2333), 关系 (1991, 1993)]\"\n        },\n        {\n            \"summary\": \"X线片在诊断骨折中起关键作用\",\n            \"explanation\": \"X线片是社区中用于诊断骨折的重要工具，能够显示骨折的部位、类型、移位方向和对位情况，辅助制定复位方案。这表明X线片在骨折诊断和治疗中具有不可替代的作用。[数据:实体 (1602), 关系 (2878)]\"\n        },\n        {\n            \"summary\": \"塔形垫和梯形垫用于支撑和固定\",\n            \"explanation\": \"塔形垫和梯形垫是社区中用于支撑和固定的工具，分别适用于踝关节和肘关节的凹陷或斜坡处。这些工具在康复和治疗过程中起到辅助作用，帮助稳定和支撑受伤部位。[数据:实体 (2078, 2079), 关系 (1726, 1728)]\"\n        },\n        {\n            \"summary\": \"骨折整复与局部麻醉注射相关\",\n            \"explanation\": \"骨折整复是一种用于纠正骨折部位移位的治疗手段，通常需要配合局部麻醉注射以减轻疼痛。这表明骨折整复过程需要多步骤的医疗干预，以确保患者舒适并提高治疗效果。[数据:实体 (3683, 3684), 关系 (3465)]\"\n        },\n        {\n            \"summary\": \"跖骨头挤压试验用于检测多种足部疾病\",\n            \"explanation\": \"跖骨头挤压试验是一种用于检测跖痛症、扁平足和莫顿病的医学检查方法。这表明该检查方法在足部疾病的诊断中具有广泛的应用，能够帮助识别多种病理特征。[数据:关系 (1156, 1157, 1158)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={(title: \"纤维肉瘤与纤维来源相关肿瘤社区\"\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t \n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n    \t\t\t\n.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response={(  \n    \"title\": \"指间关节与上肢练功社区\",  \n    \"summary\": \"社区以指间关节为中心，涉及多种相关损伤和功能活动，包括掌指关节及指间关节脱位、侧副韧带断裂、屈伸活动和自动伸屈活动障碍等。这些实体之间通过损伤、治疗和康复活动相互关联，表明该社区在医学和康复领域的重要性。\",  \n    \"rating\": 4.0,  \n    \"rating_explanation\": \"该社区主要涉及医学和康复领域，其影响主要体现在对上肢功能恢复的潜在风险和重要性，因此影响严重程度评级为较低。\",  \n    \"findings\": [  \n        {  \n            \"summary\": \"指间关节是社区的核心实体\",  \n            \"explanation\": \"指间关节是这个社区的中心实体，其描述涵盖了结构、功能以及与多种损伤和活动的关联。它在上肢练功中尤为重要，因为早期活动可以防止功能障碍。[数据:实体 (241); 关系 (4822, 4832, 4829, 4830, 4833 +more)]\"  \n        },  \n        {  \n            \"summary\": \"掌指关节及指间关节脱位是常见损伤\",  \n            \"explanation\": \"掌指关节及指间关节脱位是社区中提到的常见损伤，与指间关节和掌指关节的结构和功能密切相关。这种损伤可能影响手部的正常活动，需要特别关注。[数据:实体 (287); 关系 (197, 196, 4839 +more)]\"  \n        },  \n        {  \n            \"summary\": \"上肢练功对恢复功能至关重要\",  \n            \"explanation\": \"上肢练功是社区中提到的重要康复活动，旨在恢复手的功能，特别强调指间关节和指掌关节的早期活动。这种活动对于防止因脱位或骨折导致的功能障碍具有重要意义。[数据:实体 (2301); 关系 (1961, 1962 +more)]\"  \n        },  \n        {  \n            \"summary\": \"侧副韧带断裂与指间关节脱位相关\",  \n            \"explanation\": \"侧副韧带断裂是社区中提到的与指间关节脱位相关的损伤，通常由外力引起，如过度伸展或侧方挤压。这种损伤可能进一步影响关节的稳定性，增加康复难度。[数据:实体 (4675); 关系 (4834, 4833 +more)]\"  \n        },  \n        {  \n            \"summary\": \"自动伸屈活动障碍是脱位的共同表现\",  \n            \"explanation\": \"自动伸屈活动障碍是掌指关节和指间关节脱位的共同表现，表明这种功能障碍可能是多种损伤的后果。它对康复过程和治疗方案的选择具有重要影响。[数据:实体 (4678); 关系 (4832 +more)]\"  \n        },  \n        {  \n            \"summary\": \"掌骨颈骨折与掌骨头屈转相关\",  \n            \"explanation\": \"掌骨颈骨折可能导致掌骨头屈转，这与掌指关节的结构和功能密切相关。这种骨折可能需要整复和康复训练，以恢复手部的正常活动能力。[数据:实体 (3732, 3730); 关系 (3524, 3526 +more)]\"  \n        },  \n        {  \n            \"summary\": \"近节指骨头用于整复掌骨颈骨折\",  \n            \"explanation\": \"近节指骨头在掌骨颈骨折的整复过程中起到压顶作用，帮助恢复骨骼的正常位置。这种操作是康复治疗中的关键步骤，需要专业人员进行。[数据:实体 (4677, 3731); 关系 (3525 +more)]\"  \n        },  \n        {  \n            \"summary\": \"屈伸活动是掌指关节的重要功能\",  \n            \"explanation\": \"屈伸活动是掌指关节的重要功能，与多种损伤和康复活动相关。这种活动的恢复对于手部功能的正常运作至关重要，尤其是在上肢练功中。[数据:实体 (4674, 4673); 关系 (4822, 4839 +more)]\"  \n        }  \n    ]  \n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"肌肉萎缩及相关疾病社区\",\n    \"summary\": \"该社区以肌肉萎缩为核心, 与多种疾病相关联, 包括多发性神经炎、小儿麻痹后遗症、进行性肌萎缩症和肌萎缩性侧索硬化症。这些疾病在不同程度上导致肌肉萎缩, 并且在医学和康复领域具有重要影响。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"肌肉萎缩是多种严重疾病的表现, 其影响可能涉及长期健康问题和康复需求, 因此社区的重要性评分为中等偏高。\",\n    \"findings\": [\n        {\n            \"summary\": \"肌肉萎缩是核心实体\",\n            \"explanation\": \"肌肉萎缩是这个社区的中心实体, 与多种疾病相关联, 并且在多个记录中被提及。它在医学和康复领域具有重要性, 因为它可能影响患者的行动能力和生活质量。[数据:实体 (1103); 关系 (814, 813, 815, 816 +more)]\"\n        },\n        {\n            \"summary\": \"多发性神经炎与肌肉萎缩的关联\",\n            \"explanation\": \"多发性神经炎是导致肌肉萎缩的一个关键因素, 通常表现为两侧手足下垂和肌肉萎缩。这种疾病可能对患者的神经功能造成严重影响, 并需要长期的康复治疗。[数据:关系 (814)]\"\n        },\n        {\n            \"summary\": \"小儿麻痹后遗症导致肌肉萎缩\",\n            \"explanation\": \"小儿麻痹后遗症是导致受累肢体肌肉萎缩的重要原因。这种后遗症可能对患者的身体功能和日常活动能力产生长期影响, 并需要针对性的康复训练。[数据:关系 (813)]\"\n        },\n        {\n            \"summary\": \"进行性肌萎缩症的特征\",\n            \"explanation\": \"进行性肌萎缩症是一种导致四肢对称近端肌萎缩的疾病, 其症状可能逐渐恶化, 对患者的生活质量造成严重影响。这种疾病通常需要长期的医疗管理和康复干预。[数据:关系 (815)]\"\n        },\n        {\n            \"summary\": \"肌萎缩性侧索硬化症的临床表现\",\n            \"explanation\": \"肌萎缩性侧索硬化症是一种导致双前臂广泛萎缩并伴有肌束颤动的严重疾病。它属于运动神经元疾病, 可能导致患者行动能力逐渐丧失, 需要高度关注和专业治疗。[数据:关系 (816)]\"\n        },\n        {\n            \"summary\": \"肌肉萎缩的预防和治疗\",\n            \"explanation\": \"肌肉萎缩可以通过适当的锻炼和康复疗法进行预防和治疗, 例如股四头肌舒缩锻炼和练功疗法。这些方法在膝关节制动期间尤为重要, 以防止肌肉萎缩的发生。[数据:实体 (1103)]\"\n        },\n        {\n            \"summary\": \"肌肉萎缩与脾胃气虚的联系\",\n            \"explanation\": \"肌肉萎缩与中医中的脾胃气虚有关, 是痿证的主要临床表现之一。这种联系表明, 在治疗肌肉萎缩时, 可能需要结合中西医方法, 以达到更好的康复效果。[数据:实体 (1103)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨伤科与肌肉相关症状\",\n    \"summary\": \"社区以骨伤科为中心, 与多种肌肉相关症状如畸形、挛缩、肌张力、肌力等有密切联系。这些实体相互关联, 用于评估和诊断肌肉及骨骼的损伤和功能状态。\",\n    \"rating\": 3.0,\n    \"rating_explanation\": \"社区主要涉及医学领域中的肌肉和骨骼症状, 对公共健康有一定影响, 但严重性较低。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨伤科是社区的核心\",\n            \"explanation\": \"骨伤科是这个社区的中心实体, 与畸形这一常见症状有直接关系。骨伤科处理与骨骼和肌肉相关的多种症状, 是理解社区结构的关键。[数据:实体 (890); 关系 (898)]\"\n        },\n        {\n            \"summary\": \"畸形是骨伤科的重要症状\",\n            \"explanation\": \"畸形是骨伤科患者常见的主诉之一, 通常表现为肢体外形异常或骨骼形状改变。它可能与暴力作用、肌肉或韧带牵拉、搬运不当等因素有关, 导致断端移位。[数据:实体 (890)]\"\n        },\n        {\n            \"summary\": \"挛缩与骨伤科相关\",\n            \"explanation\": \"挛缩是骨伤科患者常见的症状之一, 表现为筋脉或关节囊缩短和僵硬。此外, 挛缩也可在肌容量检查中被观察到, 表现为肢体外形的异常。[数据:实体 (1220); 关系 (1637)]\"\n        },\n        {\n            \"summary\": \"肌容量检查与肌肉状态评估相关\",\n            \"explanation\": \"肌容量检查用于观察肢体外形有无肌肉萎缩、挛缩、畸形, 是评估肌肉状态的重要方法。肌容量与肌张力之间存在联系, 两者共同用于全面评估肌肉状态。[数据:实体 (1352); 关系 (993)]\"\n        },\n        {\n            \"summary\": \"肌张力是肌肉状态评估的重要指标\",\n            \"explanation\": \"肌张力是指静止状态下肌肉的紧张度, 通常通过被动运动和触诊来评估其软硬度。在脊髓损伤的情况下, 肌张力可能发生变化, 早期脊髓损伤或马尾神经损伤时, 常表现为肌张力降低, 而脊髓完全性横断损伤则可能导致肌张力消失。[数据:实体 (1353); 关系 (998, 999, 1000)]\"\n        },\n        {\n            \"summary\": \"肌力与肌肉功能评估相关\",\n            \"explanation\": \"肌力是指肌肉主动运动时的力量、幅度和速度, 用于评估肌肉发育和神经损伤情况。肌力测定是用于评估肌力的检查方法, 与肌力有直接关系。[数据:实体 (1354, 1359); 关系 (1001)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨盆骨折与内伤相关社区\",\n    \"summary\": \"该社区以骨盆骨折为核心，涉及多种内伤类型及其并发症，如内脏损伤、失血性休克、膀胱损伤等。骨盆骨折与多种医学检查、治疗方法及中医理论中的内伤、经络、气血等概念密切相关，表明其在医学领域的重要性。\",\n    \"rating\": 7.5,\n    \"rating_explanation\": \"骨盆骨折可能导致严重内伤及并发症，如失血性休克和内脏损伤，对患者生命安全构成重大威胁。\",\n    \"findings\": [\n        {\n            \"summary\": \"骨盆骨折是社区的核心实体\",\n            \"explanation\": \"骨盆骨折是该社区的关键实体，与多种内伤和并发症相关，如内脏损伤、失血性休克、膀胱损伤等。其高关联度表明其在医学领域的重要性。[数据:实体 (185), 关系 (4358, 4353, 4354, 4356, 4359 +more)]\"\n        },\n        {\n            \"summary\": \"内伤是骨盆骨折的常见并发症\",\n            \"explanation\": \"内伤是骨盆骨折可能引发的并发症，涉及多个器官和系统，如腹腔脏器、尿道、输尿管、子宫、阴道等。内伤的严重性取决于其影响的部位和程度。[数据:关系 (4358, 6290, 6292, 6297, 6299 +more)]\"\n        },\n        {\n            \"summary\": \"失血性休克是骨盆骨折的严重后果\",\n            \"explanation\": \"失血性休克是骨盆骨折可能引发的严重后果，由于骨盆骨折可能导致大量出血，进而引发休克，成为患者死亡的主要原因之一。[数据:关系 (4363), 实体 (4365)]\"\n        },\n        {\n            \"summary\": \"多种医学检查与骨盆骨折相关\",\n            \"explanation\": \"骨盆骨折的诊断依赖于多种医学检查，如X线透视、骨盆挤压试验、骨盆分离试验和骨盆纵向挤压试验。这些检查帮助医生判断骨折的类型和严重程度。[数据:关系 (1895, 1049, 1050, 1051, 4355 +more)]\"\n        },\n        {\n            \"summary\": \"中医理论在内伤治疗中发挥重要作用\",\n            \"explanation\": \"中医理论中的经络、气血、筋等概念与内伤的发生和治疗密切相关。经络瘀阻、气血运行不畅可能导致内伤症状加重，而理筋手法和针灸治疗则被用于缓解症状和促进恢复。[数据:实体 (989, 410, 408), 关系 (731, 732, 6285, 6278, 6279 +more)]\"\n        },\n        {\n            \"summary\": \"内伤的内因包括七情、六欲和劳倦\",\n            \"explanation\": \"内伤的发生不仅与外因如外力有关，还与内因如七情、六欲和劳倦密切相关。这些因素可能在不同情况下诱发内伤，影响患者的康复过程。[数据:关系 (6278, 6279, 6280, 6281, 6287 +more)]\"\n        },\n        {\n            \"summary\": \"骨盆骨折可能引发多种内伤症状\",\n            \"explanation\": \"骨盆骨折可能引发多种内伤症状，如腰背部疼痛、腹部伤气、胸胁满闷等。这些症状可能影响患者的生活质量，并需要综合治疗方案。[数据:关系 (6296, 6297, 6294, 6299, 6300 +more)]\"\n        },\n        {\n            \"summary\": \"针灸在治疗内伤和相关症状中被广泛应用\",\n            \"explanation\": \"针灸是治疗内伤及其相关症状的重要手段，如治疗眩晕、酸麻感等。素髎穴和足三里等穴位在特定情况下被用于辅助治疗。[数据:关系 (6265, 6393, 6396, 4363, 6437 +more)]\"\n        },\n        {\n            \"summary\": \"内伤的治疗需要心理支持\",\n            \"explanation\": \"内伤患者在康复过程中可能需要心理治疗，以帮助其正确认识病情并积极配合治疗。心理治疗是康复的重要环节之一。[数据:关系 (6396), 实体 (978)]\"\n        },\n        {\n            \"summary\": \"内伤可能伴随多种全身症状\",\n            \"explanation\": \"内伤可能伴随多种全身症状，如自汗、冷汗战栗、汗出如油、口渴烦躁、神志淡漠等，这些症状可能提示病情的严重程度。[数据:关系 (6281, 6311, 6313, 6316, 6317 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"股骨头缺血性坏死与相关骨病\",\n    \"summary\": \"该社区以股骨头缺血性坏死为核心，涉及多种骨病、检查方法、治疗手段及并发症。股骨头缺血性坏死与骨痹、骨软化症、关节结核等疾病存在关联，同时与多种诊断和治疗技术如放射性核素扫描、关节穿刺、钻孔减压术等密切相关。\",\n    \"rating\": 6.5,\n    \"rating_explanation\": \"股骨头缺血性坏死及相关骨病具有较高的医学重要性，可能引发严重并发症并需要多种治疗手段，因此影响严重程度评级为中高。\",\n    \"findings\": [\n        {\n            \"summary\": \"股骨头缺血性坏死是核心疾病\",\n            \"explanation\": \"股骨头缺血性坏死是该社区的关键实体，与多种检查和治疗方法相关，如Trendelenburg征、4”字试验、放射性核素扫描等。它还与国际骨循环研究协会的分期方法及股骨头钻孔减压术等治疗手段有直接联系。[数据:实体 (333), 关系 (7024, 7025, 7029, 7030, 7039 +more)]\"\n        },\n        {\n            \"summary\": \"多种检查方法用于诊断股骨头缺血性坏死\",\n            \"explanation\": \"股骨头缺血性坏死的诊断依赖于多种检查方法，包括Trendelenburg征、4”字试验、放射性核素扫描等。这些方法在临床中被广泛应用，以确保早期发现和干预。[数据:关系 (7024, 7025, 7029)]\"\n        },\n        {\n            \"summary\": \"股骨头缺血性坏死与骨病密切相关\",\n            \"explanation\": \"股骨头缺血性坏死被归类为骨病的一种，与骨痹、骨软化症等其他骨病存在联系。这些疾病共同构成了一个与骨骼健康和功能障碍相关的医学社区。[数据:实体 (333, 858, 755), 关系 (247, 513)]\"\n        },\n        {\n            \"summary\": \"关节结核与多种症状和治疗方法相关\",\n            \"explanation\": \"关节结核是该社区中的重要疾病，与午后潮热、关节肿胀、肢体萎缩、关节活动度减小等典型症状相关。其治疗方法包括关节穿刺、关节镜灌注疗法、切开排脓等，这些方法在治疗过程中起到关键作用。[数据:实体 (6076), 关系 (6846, 6849, 6850, 6851, 6852 +more)]\"\n        },\n        {\n            \"summary\": \"骨痹涵盖多种骨骼和关节疾病\",\n            \"explanation\": \"骨痹是中医中与骨骼和关节相关的疾病范畴，包括风湿性关节炎、类风湿关节炎、骨质疏松症、强直性脊柱炎等。股骨头缺血性坏死也被归入骨痹的范畴，表明其在中医辨证中的重要性。[数据:实体 (755), 关系 (513)]\"\n        },\n        {\n            \"summary\": \"股骨转子间骨折与老年人密切相关\",\n            \"explanation\": \"股骨转子间骨折是老年人常见的骨科问题，与老年人的骨质疏松和身体虚弱有关。该骨折可能引发髋内翻畸形、股骨头坏死等并发症，因此在老年患者中需特别关注。[数据:实体 (268, 809), 关系 (552, 3650, 3651, 3670, 3671 +more)]\"\n        },\n        {\n            \"summary\": \"正虚邪侵是骨病的重要病因病机\",\n            \"explanation\": \"正虚邪侵是中医病因病机之一，与骨肿瘤、骨质疏松症及骨痨的发生有关。该病机表现为骨痛、腰背疼痛、腿膝酸软，且患者易发生骨折，说明其在骨病发展中的关键作用。[数据:实体 (6029), 关系 (6768)]\"\n        },\n        {\n            \"summary\": \"多种治疗手段用于处理关节结核\",\n            \"explanation\": \"关节结核的治疗涉及多种方法，包括关节穿刺、关节镜灌注疗法、闭合式持续冲洗吸引疗法、切开排脓及使用生肌散、透脓散等中药。这些方法在不同阶段的治疗中发挥重要作用。[数据:关系 (6852, 6854, 6855, 6856, 6857 +more)]\"\n        },\n        {\n            \"summary\": \"风湿性关节炎具有游走性和对称性特征\",\n            \"explanation\": \"风湿性关节炎的典型表现包括游走性多关节炎和对称性关节炎，且常伴随环形红斑、皮下小结等皮肤症状。这些特征有助于其与其他关节疾病如类风湿关节炎进行鉴别。[数据:实体 (2817, 1121), 关系 (6868, 6873, 6874, 6871, 6872 +more)]\"\n        },\n        {\n            \"summary\": \"骨痨后期可能导致慢性消耗性病容\",\n            \"explanation\": \"骨痨在后期可能表现为慢性消耗性病容，这是由于气血耗损严重所致。此外，骨痨还可能引发倦怠无力、舌淡苔白、脉濡细等气血两虚的症状，提示其对患者整体健康状况的深远影响。[数据:实体 (754), 关系 (785, 786, 787, 788)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"骨折治疗与康复社区\",\n    \"summary\": \"该社区围绕骨折治疗及其康复展开，核心实体包括钢板、复位、手术治疗等，这些实体之间存在紧密的关联。社区还涉及多种治疗方法、康复训练和并发症，如坚积性肺炎和气血循环等，反映了骨折治疗的复杂性和多维度。\",\n    \"rating\": 4.0,\n    \"rating_explanation\": \"该社区主要涉及医疗领域，其影响主要体现在治疗和康复过程中，对公共健康有一定影响，但不具有广泛的社会或安全风险。\",\n    \"findings\": [\n        {\n            \"summary\": \"钢板是骨折治疗中的关键内固定器材\",\n            \"explanation\": \"钢板被广泛用于骨折的内固定，特别是在手术切开复位内固定过程中，能够有效限制骨折部位的旋转。它与多种骨折类型相关，如肱骨外科颈骨折、髂骨翼骨折、开书型损伤和侧方压缩型骨折等。[数据:实体 (2257), 关系 (2887, 4474, 4475, 155, 3036 +more)]\"\n        },\n        {\n            \"summary\": \"复位是骨折治疗的核心步骤\",\n            \"explanation\": \"复位是将骨折部位恢复到正常解剖位置的关键步骤，适用于多种骨折和脱位情况，如桡骨骨折、下尺桡关节脱位、跟骨骨折等。复位与固定紧密相关，是骨折治疗的基础。[数据:实体 (64), 关系 (2831, 2821, 2823, 2830, 2835 +more)]\"\n        },\n        {\n            \"summary\": \"手术治疗涵盖多种骨折和损伤类型\",\n            \"explanation\": \"手术治疗是处理严重骨折和损伤的重要手段，适用于包括股骨干骨折、距跟关节面塌陷、髂前上棘撕脱骨折、侧方压缩型骨折、骶髂关节骨折脱位等复杂情况。手术治疗还涉及多种内固定方法，如钢板螺丝钉、髓内针固定、接骨板固定等。[数据:实体 (3388), 关系 (3110, 3998, 3758, 3759, 3833 +more)]\"\n        },\n        {\n            \"summary\": \"练功活动促进康复和生理功能恢复\",\n            \"explanation\": \"练功活动是骨折康复的重要组成部分，包括上举、内旋、外旋、前屈、后伸、环转、体后拉手和甩手等多种动作。这些活动有助于恢复关节功能和肌肉力量，同时与气血循环和新陈代谢密切相关。[数据:实体 (3016), 关系 (5363, 5364, 5365, 5366, 5367 +more)]\"\n        },\n        {\n            \"summary\": \"坚积性肺炎是骨折长期卧床的并发症\",\n        \"explanation\": \"坚积性肺炎是由于骨折患者长期卧床导致肺功能减弱、痰涎积聚和咳出困难而引发的呼吸系统感染。该并发症与下肢和脊柱骨折密切相关，预防和治疗方法包括深呼吸和主动按胸咳嗽。[数据:实体 (3170), 关系 (2718, 2719, 2720, 2721, 2726 +more)]\"\n        },\n        {\n            \"summary\": \"中医在骨折治疗中具有重要作用\",\n            \"explanation\": \"中医在骨折治疗中积累了丰富的固定经验，并强调传统理论和经验的继承。中医的内外用药和热敷等方法被用于辅助骨折治疗和康复，特别是在练功活动前的准备中。[数据:实体 (2012, 539), 关系 (2821, 2838, 5579 +more)]\"\n        },\n        {\n            \"summary\": \"外固定器具用于维持复位后的关节稳定性\",\n            \"explanation\": \"外固定器具是骨折复位后维持关节稳定性的常用设备，尤其适用于需要长期固定或术后恢复的患者。它与复位步骤紧密相关，是骨折治疗的重要组成部分。[数据:实体 (455), 关系 (4601, 2831, 3028, 3110 +more)]\"\n        },\n        {\n            \"summary\": \"功能疗法用于复杂骨折后的康复\",\n            \"explanation\": \"功能疗法是针对严重粉碎性骨折的治疗方法，包括卧床、抬高患肢和主动活动等。它在骨折治疗后期可能涉及处理创伤性关节炎等并发症，与弹力绷带等设备结合使用。[数据:实体 (4049), 关系 (4000, 4001, 4002 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"神经损伤与相关治疗及症状\",\n    \"summary\": \"该社区以神经损伤为核心，涉及多种症状如肌肉瘫痪、感觉障碍、腱反射消失等，以及多种治疗方法如神经吻合术、神经转移术、神经松解术等。这些实体之间通过临床表现、治疗手段和病理机制相互关联，反映了神经损伤的复杂性和治疗的重要性。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"神经损伤及其相关症状和治疗手段对患者的生理功能和生活质量有显著影响，因此影响严重程度评级为中高。\",\n    \"findings\": [\n        {\n            \"summary\": \"神经损伤是社区的核心实体\",\n            \"explanation\": \"神经损伤是该社区的关键实体，与多种症状和治疗方法相关联。它直接导致肌肉瘫痪、感觉障碍、腱反射消失等临床表现，并与神经吻合术、神经转移术、神经松解术等治疗手段密切相关。[数据:实体 (1362), 关系 (2302, 2298, 2724, 2305, 2335 +more)]\"\n        },\n        {\n            \"summary\": \"多种治疗方法用于修复神经损伤\",\n            \"explanation\": \"神经损伤的修复涉及多种手术方法，包括神经吻合术、神经束膜吻合术、神经外膜吻合术、神经束膜外膜联合吻合术和神经转移术。这些方法根据神经损伤的位置和严重程度进行选择，以恢复肌肉功能和神经传导。[数据:关系 (2335, 2337, 2338, 2339, 2342 +more)]\"\n        },\n        {\n            \"summary\": \"肌肉瘫痪是神经损伤的常见表现\",\n            \"explanation\": \"肌肉瘫痪是神经损伤后常见的临床表现之一，其严重程度可通过肌力检查来评估。肌肉瘫痪可能影响患者的运动能力，需要结合其他症状如肌张力变化和病理征来进一步判断损伤类型。[数据:实体 (2660), 关系 (2298, 4285, 4286, 4288, 4289 +more)]\"\n        },\n        {\n            \"summary\": \"感觉障碍是神经损伤的定位症状\",\n            \"explanation\": \"感觉障碍是神经损伤的定位症状之一，表现为对侧躯体深浅感觉减退。它在早期诊断中具有重要意义，可能提示需要进行切开减压或其他神经修复手术。[数据:实体 (3101), 关系 (2724, 2340, 2341, 2342, 2343 +more)]\"\n        },\n        {\n            \"summary\": \"腱反射消失是脊髓损伤的常见表现\",\n            \"explanation\": \"腱反射消失是脊髓损伤后常见的临床表现，也可作为神经损伤的指标。这一症状可能提示神经传导受阻，需要进一步评估损伤程度和治疗方案。[数据:实体 (2668), 关系 (4244, 2340, 2341, 2342, 2343 +more)]\"\n        },\n        {\n            \"summary\": \"按压踩骄法用于治疗多种症状\",\n            \"explanation\": \"按压踩骄法是一种治疗多种症状的方法，包括肢体麻木、酸痛、挛缩、肢体关节扭伤和小关节错位。它结合了按压法和踩骄法，具有通络止痛和放松肌肉的作用。[数据:关系 (1636, 1638, 1640, 1643, 1644 +more)]\"\n        },\n        {\n            \"summary\": \"肌张力变化是评估神经损伤的重要指标\",\n            \"explanation\": \"肌张力的变化是评估神经损伤的重要指标，上运动神经元性瘫痪表现为肌张力增高，而下运动神经元性瘫痪则表现为肌张力降低。肌张力与肌容量、肌力等指标共同用于全面评估肌肉状态。[数据:实体 (1353), 关系 (993, 4285, 4289, 998, 999 +more)]\"\n        },\n        {\n            \"summary\": \"黄芪桂枝五物汤用于神经损伤的后期治疗\",\n            \"explanation\": \"黄芪桂枝五物汤是用于神经损伤后期治疗的中药方剂，具有益气通络、祛风壮筋的作用。它通常在神经再生和功能恢复阶段使用，以辅助改善神经功能。[数据:实体 (4742), 关系 (4970, 4971, 2340, 2341, 2342 +more)]\"\n        },\n        {\n            \"summary\": \"神经缺损可能需要神经转移术或游离神经移植术\",\n            \"explanation\": \"神经缺损是神经损伤的一种严重类型，可能需要通过神经转移术或游离神经移植术进行修复。这些手术方法适用于无法直接吻合的神经缺损情况，以重建肌肉功能。[数据:实体 (2749), 关系 (2343, 2345, 2344, 2335, 2337 +more)]\"\n        },\n        {\n            \"summary\": \"肝失调畅可能引发肢体麻木和关节挛缩\",\n            \"explanation\": \"肝失调畅是中医中的一种病理状态，可能引发肢体麻木和关节挛缩。这些症状与神经损伤相关，可能需要结合理筋手法和中药治疗进行综合干预。[数据:实体 (1024), 关系 (745, 746, 1636, 1638, 1640 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"手法复位与骨折治疗社区\",\n    \"summary\": \"社区以手法复位为核心，涉及多种骨折类型和治疗工具，如X线片、夹板、折顶手法等，这些实体相互关联，共同构成骨折诊断和治疗的流程。社区中还包括与骨折相关的解剖结构、症状和并发症，如骨间膜、关节面、骨缺血性坏死等。\",\n    \"rating\": 6.0,\n    \"rating_explanation\": \"该社区涉及多种骨折类型和治疗方式，具有较高的医学重要性，可能对患者康复和治疗效果产生显著影响。\",\n    \"findings\": [\n        {\n            \"summary\": \"手法复位是骨折治疗的核心方法\",\n            \"explanation\": \"手法复位是一种非手术治疗骨折和脱位的重要方法，适用于多种骨折类型，如月骨脱位、小儿挠骨头半脱位、尺骨上1/3骨折合并桡骨头脱位等。其操作要求及时、稳妥、准确，以避免进一步损伤并确保一次成功复位。[数据:实体 (2362); 关系 (2017 +more)]\"\n        },\n        {\n            \"summary\": \"X线片在骨折诊断中起关键作用\",\n            \"explanation\": \"X线片是常用的医学影像学工具，用于诊断骨折的部位、类型和移位方向，尤其在脊柱、腕部、距骨、指骨等部位的骨折诊断中具有重要意义。然而，在某些情况下，X线片可能无法提供足够的信息，需结合其他影像学方法进行评估。[数据:实体 (1604, 2233); 关系 (1241, 1896 +more)]\"\n        },\n        {\n            \"summary\": \"夹板是骨折固定的重要工具\",\n            \"explanation\": \"夹板是一种外固定设备，用于固定多种骨折部位，如桡骨远端、尺桡骨干双骨折、胫骨、股骨干、肱骨干等。夹板通常由竹板、木板或纸板制成，其使用需配合布带捆扎或固定器材以确保稳定。若使用不当，可能导致筋膜间隔区综合征等并发症。[数据:实体 (1883); 关系 (1709, 1710, 1711, 3241 +more)]\"\n        },\n        {\n            \"summary\": \"肘关节是多种骨折和脱位的常见部位\",\n            \"explanation\": \"肘关节是骨折和脱位的常见部位，如肱骨髁上骨折、肘关节后脱位等。其损伤可能导致多种症状，如靴样畸形、肘关节僵硬、伸屈功能受限等，同时需要通过X线片、夹板、理疗设备等进行诊断和治疗。[数据:实体 (2362, 237); 关系 (3143, 3148, 4765, 4766 +more)]\"\n        },\n        {\n            \"summary\": \"骨折可能导致多种并发症和后遗症\",\n            \"explanation\": \"骨折可能引发多种并发症，如骨缺血性坏死、血肿钙化、关节面损伤、前臂旋转功能障碍等。这些后遗症可能影响患者的长期功能和生活质量，因此在治疗过程中需特别注意复位的准确性和固定的有效性。[数据:实体 (3529, 3512, 3443, 3444, 728 +more)]\"\n        },\n        {\n            \"summary\": \"折顶手法用于矫正尺桡骨干双骨折的重叠移位\",\n            \"explanation\": \"折顶手法是一种专门用于矫正尺桡骨干双骨折重叠未完全矫正的整复方法，通过拇指挤压突出的骨折端并进行反折，以达到复位的目的。该手法在骨折治疗中具有重要作用，尤其在需要精确对位的情况下。[数据:实体 (1924); 关系 (1513 +more)]\"\n        },\n        {\n            \"summary\": \"骨间膜对骨折移位方向有显著影响\",\n            \"explanation\": \"骨间膜是连接尺骨和桡骨的结构，其作用使骨折断端易向对侧骨移位，尤其在掌面着地时可能被劈裂，从而导致桡骨头向前方脱位。该结构在骨折整复过程中需特别注意，以防止进一步移位。[数据:实体 (1921); 关系 (3347 +more)]\"\n        },\n        {\n            \"summary\": \"中医骨伤科文献对骨折治疗有重要指导意义\",\n            \"explanation\": \"《伤科汇纂》是清代胡廷光所著的重要医学典籍，收集并整理了清代以前的骨伤科文献，详细记载了骨折复位技巧，如“宜轻宜重为高手，兼吓兼骗是上功”。该文献对现代中医骨伤科治疗仍具有重要参考价值。[数据:实体 (635); 关系 (428 +more)]\"\n        },\n        {\n            \"summary\": \"中药内服是中西医结合治疗骨折的手段之一\",\n            \"explanation\": \"中药内服是治疗迟缓愈合的手舟骨骨折的一种方法，用于促进骨骼修复，同时也属于中西医结合治疗骨折的手段之一。该方法在骨折治疗中具有辅助作用，尤其在术后恢复阶段。[数据:实体 (694); 关系 (468 +more)]\"\n        },\n        {\n            \"summary\": \"整复方法需根据损伤机制和骨骼结构进行选择\",\n            \"explanation\": \"整复方法是一种用于矫正骨折或关节脱位的医疗操作，其选择需根据不同的损伤类型和程度进行调整，总的原则是逆损伤机制并充分利用骨骼的稳定结构进行复位。该方法适用于多种骨折类型，包括尺桡骨干双骨折、胫腓骨干骨折、不稳定型骨折等。[数据:实体 (3351); 关系 (2975, 4371 +more)]\"\n        }\n    ]\n}.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\dev_project\\2025\\0708.graphrag-中医骨伤科学\\graphrag_zh\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\dev_environment\\conda\\envs\\graphrag-ch\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
